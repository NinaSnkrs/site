{"version":3,"sources":["config/misc.ts","config/accounts.ts","lib/store/index.ts","lib/metadata/programIds.ts","lib/metadata/index.ts","lib/types.ts","lib/metadata/borsh.ts","lib/randomnessTools.ts","router/routes.ts","lib/utils/index.ts","providers/ViewportProvider.tsx","components/Countdown/styles.ts","components/Countdown/index.tsx","components/RaffleCard/styles.ts","hooks/useViewport.tsx","components/RaffleCard/index.tsx","pages/ExploreRafflesScreen/styles.ts","lib/anchorUtils.ts","lib/idl/draffle.ts","lib/idl/dispenser.ts","providers/ProgramApisProvider.tsx","hooks/useProgramApis.tsx","config/raffleWhitelist.ts","providers/RafflesStoreProvider.tsx","hooks/useRafflesStore.ts","components/layout/Base/styles.ts","components/layout/Base/index.tsx","components/layout/Body/styles.ts","components/layout/Body/index.tsx","components/layout/Header/styles.ts","lib/utils/airdrop.ts","components/AirdropButton/index.tsx","components/layout/WalletButton/styles.ts","components/layout/WalletButton/index.tsx","components/layout/Drawer/styles.ts","components/layout/NavButton/styles.ts","components/layout/NavButton/index.tsx","components/AdminRoute/index.tsx","components/layout/Drawer/index.tsx","components/layout/Header/index.tsx","components/layout/Screen/index.tsx","pages/ExploreRafflesScreen/components/FilterBar/styles.ts","pages/ExploreRafflesScreen/components/FilterBar/index.tsx","pages/ExploreRafflesScreen/index.tsx","lib/actions/claimPrize.ts","assets/styles.ts","pages/RaffleEndedScreen/components/EndedRaffleActionsSection/styles.ts","pages/RaffleEndedScreen/components/EndedRaffleActionsSection/index.tsx","components/RaffleInfoSection/styles.ts","components/RaffleInfoSection/index.tsx","components/ClaimButton/styles.ts","components/ClaimButton/index.tsx","hooks/useRandomDrawer.tsx","pages/RaffleEndedScreen/components/PrizeCardEnded/styles.ts","components/ShortenedString/index.tsx","components/PrizeDetailsModal/styles.ts","components/Spacer/index.tsx","components/PrizeDetailsModal/index.tsx","pages/RaffleEndedScreen/components/PrizeCardEnded/index.tsx","pages/RaffleEndedScreen/components/PrizeGalleryEnded/styles.ts","pages/RaffleEndedScreen/components/PrizeGalleryEnded/index.tsx","pages/RaffleEndedScreen/components/PrizeShowcaseEnded/styles.ts","pages/RaffleEndedScreen/components/PrizeShowcaseEnded/index.tsx","pages/RaffleEndedScreen/styles.ts","pages/RaffleEndedScreen/index.tsx","pages/RaffleOngoingScreen/components/PrizeCardOngoing/styles.ts","pages/RaffleOngoingScreen/components/PrizeCardOngoing/index.tsx","pages/RaffleOngoingScreen/components/PrizeShowcaseOngoing/styles.ts","pages/RaffleOngoingScreen/components/PrizeShowcaseOngoing/index.tsx","lib/actions/buyTickets.ts","components/Button/index.tsx","pages/RaffleOngoingScreen/components/PurchaseTicketsSection/styles.ts","pages/RaffleOngoingScreen/components/PurchaseTicketsSection/PurchaseTicket.tsx","pages/RaffleOngoingScreen/styles.ts","pages/RaffleOngoingScreen/components/PrizeGalleryOngoing/styles.ts","pages/RaffleOngoingScreen/components/PrizeGalleryOngoing/index.tsx","pages/RaffleOngoingScreen/index.tsx","router/raffleDetails.tsx","assets/discord-logo.svg","assets/twitter-logo.svg","assets/light.png","assets/MagicEden.png","pages/LandingScreen/styles.ts","pages/LandingScreen/index.tsx","pages/admin/AdminHomeScreen/styles.ts","pages/admin/AdminHomeScreen/index.tsx","pages/admin/AdminRaffleScreen/styles.ts","pages/admin/AdminRaffleScreen/index.tsx","pages/AboutSuperpalsScreen/styles.ts","pages/AboutSuperpalsScreen/index.tsx","components/Wallet/index.tsx","router/router.tsx","assets/theme.ts","providers/ThemeProvider.tsx","components/ScrollToTop/styles.ts","components/ScrollToTop/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","lib/accounts.ts","config/programIds.ts","config/tokenRegistry.ts"],"names":["TESTING","process","MAX_NUMBER_OF_PARTICIPANTS","ADMIN_ACCOUNTS","utils","publicKey","findProgramAddressSync","Buffer","from","DISPENSER_REGISTRY_ADDRESS","toBytes","DISPENSER_PROGRAM_ID","VAULT_TOKEN_IN","console","log","toBase58","VAULT_TOKEN_OUT","fetchProceedsAccount","raffleAccountAddress","draffleClient","connection","PublicKey","findProgramAddress","programId","address","getAccountInfo","account","Error","data","parseTokenAccount","tokenInfo","tokenInfoMap","get","mint","toString","mintInfo","name","logoUrl","logoURI","symbol","decimals","getPrizeAddressForPrizeIndex","prizeIndex","toBuffer","u64","toArrayLike","prizeAddress","fetchPrizes","totalPrizes","prizes","Promise","all","Array","keys","map","prizeAddresses","provider","getMultipleAccountsInfo","prizeAccounts","prizeTokenAccounts","prizeAccount","prizeTokenAccount","getMetadata","metadataAddresses","metadataAccountsInfos","entries","index","processPrize","push","metadataAccountInfo","getDisplayAmount","amount","imageURI","extensions","type","PrizeType","FT","meta","imageUri","getNFTMetadata","undefined","UNKNOWN_TOKEN_INFO","image","NFTPicture","toEntrantsProcessed","entrantsData","entrants","slice","total","reduce","acc","entrant","entrantValue","tickets","set","Map","deserializeEntrantsData","entrantsDataRaw","coder","accounts","decode","entrantsFieldData","subarray","i","max","getRaffleProgramAccounts","getProgramAccounts","result","raffleDiscriminator","BorshAccountsCoder","accountDiscriminator","entrantsDiscriminator","raffleDataRawProgramAccounts","entrantsDataProgramAccounts","forEach","pubkey","discriminator","compare","METADATA_PROGRAM_ID","extendBorsh","MetadataKey","MetadataCategory","METADATA_PREFIX","EDITION","MasterEditionV1","args","key","supply","maxSupply","printingMint","oneTimePrintingAuthorizationMint","this","MasterEditionV2","EditionMarker","ledger","edition","editionOffset","indexOffset","Math","floor","positionInBitsetFromRight","mask","pow","Edition","parent","EditionV1","Creator","verified","share","Data","uri","sellerFeeBasisPoints","creators","Metadata","updateAuthority","primarySaleHappened","isMutable","editionNonce","masterEdition","MetadataV1","getEdition","METADATA_SCHEMA","instruction","kind","fields","METADATA_REPLACE","RegExp","decodeMetadata","buffer","metadata","deserializeUnchecked","replace","tokenMint","fetch","json","metadataExtension","BinaryReader","prototype","readPubkey","array","readFixedArray","BinaryWriter","writePubkey","value","writeFixedArray","readPubkeyAsString","base58","encode","writePubkeyAsString","expand","randomValue","n","hasher","keccak_256","create","update","Uint8Array","BN","digest","toNumber","adminNs","routes","HOME","RAFFLES","ABOUT","ADMIN","shortenPubkeyString","sidesLength","keyString","keyLength","length","substr","DeviceType","sleep","ms","resolve","setTimeout","useStyles","makeStyles","theme","root","display","flexDirection","width","maxWidth","justifyContent","Countdown","endTimestamp","spacing","className","otherProps","classes","useState","Date","now","setNow","animationEnded","setAnimationEnded","useMemo","end","dt","getTime","days","hours","minutes","seconds","getRemainingTime","useEffect","timerId","setInterval","startDate","clearInterval","style","marginRight","marginLeft","toLocaleString","minimumIntegerDigits","useGrouping","start","delay","duration","preserveValue","useEasing","onEnd","daysRef","countUpRef","ref","formattingFn","number","hoursRef","minutesRef","secondsRef","device","height","position","cursor","boxShadow","transform","media","minHeight","raffleInfo","fontSize","padding","cardLabel","detailsRow1","color","palette","primary","main","fontWeight","textTransform","marginBottom","detailsRow2","common","white","detailsRow3","label","ticketsSold","endingIn","ticketPrice","goToRaffle","backgroundColor","cardPrizesBadge","textAlign","top","left","secondary","borderRadius","cardEndedBadge","right","ViewportContext","React","createContext","ViewportProvider","children","Desktop","setDevice","handleWindowResize","window","innerWidth","Phone","Tablet","addEventListener","removeEventListener","Provider","useViewport","context","useContext","RaffleCard","raffle","useHistory","isEnded","setIsEnded","isLoaded","setIsLoaded","prize","imageUrl","overviewImageUri","Card","onClick","Skeleton","variant","animation","CardMedia","component","src","alt","onLoad","CardActions","Tooltip","title","placement","MAX_TITLE_LENGTH","totalTickets","proceeds","IconButton","ArrowForward","rafflesGrid","flexGrow","titleBar","mainContent","marginTop","raffleCardContainer","margin","StubWallet","tx","txs","txHandler","rpcFc","successMessage","signature","toast","success","msg","error","IDL","ProgramApisContext","ProgramApisProvider","useConnection","anchorWallet","useAnchorWallet","customProvider","AnchorProvider","sendAndConfirm","signers","opts","feePayer","getRecentBlockhash","recentBlockhash","blockhash","signTransaction","filter","s","kp","partialSign","rawTx","serialize","sendRawTransaction","getSignatureStatus","signatureStatus","confirmationStatus","customProviderFactory","Program","DraffleIdl","DRAFFLE_PROGRAM_ID","dispenserClient","DispenserIdl","useProgramApis","testWhitelist","prodWhitelist","RAFFLES_WHITELIST","getAssociatedRaffleData","raffleRaw","raffleMetaData","proceedsAccount","entrantsAccountInfo","entrantsCap","entrantsRaw","entrantsAccountAddress","randomness","RafflesStoreContext","RafflesStoreProvider","fetching","setFetching","raffles","setRaffles","fetchAllRaffles","useCallback","includeEmpty","has","alternatePurchaseMints","find","equals","newRaffles","updateRaffleById","raffleId","updatedRaffleRaw","updatedRaffle","account1","account2","JSON","stringify","currentRaffles","cloneDeep","useRafflesStore","background","backgroundRepeat","backgroundSize","backgroundPosition","content","Base","alignItems","paddingTop","Body","Container","Box","drawerHeader","appBar","zIndex","navContainer","homeButton","dark","navButtons","textShadow","homeButtonIcon","walletButtonContainer","currentLocation","DT_MINT","AIRDROPPER_KEYPAIR","Keypair","fromSecretKey","parse","airdrop","user","Token","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","TOKEN_PROGRAM_ID","aidropperATA","userATA","instructions","createAssociatedTokenAccountInstruction","createTransferInstruction","SystemProgram","transfer","fromPubkey","toPubkey","lamports","Transaction","add","sendTransaction","AirdropButton","useWallet","loading","setLoading","disabled","LocalAirport","walletConnectButton","borderColor","alpha","walletDisconnectButton","WalletButton","connected","paper","drawerContent","navButtonsContainer","isCurrent","darken","NavButton","target","size","event","disableRipple","isAdmin","includes","Drawer","wallet","isOpen","setIsOpen","navLinksList","pathname","useLocation","SwipeableDrawer","anchor","open","onClose","onOpen","Close","admin","navLink","NAV_LINKS_LIST","Header","onBackNavigation","location","isDrawerOpen","setIsDrawerOpen","backdropFilter","AppBar","elevation","ChevronLeft","Home","Screen","filterBar","leftSection","middleSection","rightSection","leftPhoneSection","rightPhoneSection","ownRafflesSwitchContainer","border","showEndedRaffles","showEndedRafflesCheckbox","hideEndedText","FilterBar","hideEndedRaffles","setHideEndedRaffles","setShowOwnRafflesOnly","useTheme","options","onOwnRafflesSwitchChange","newValue","onChange","optionBorderRadius","wrapperBorderRadius","initialSelectedIndex","selectionIndicatorMargin","selectedBackgroundColor","fontColor","Checkbox","checked","currentValue","ExploreRafflesScreen","showOwnRafflesOnly","filterMap","own","ongoing","rafflesToShow","toShow","values","sort","raffle1","raffle2","Typography","CircularProgress","Grid","container","direction","r","ExploreRafflesScreenWithLayout","claimPrize","ticketIndex","ata","createOwnAssociatedTokenAccountInstruction","rpc","winnerTokenAccount","tokenProgram","verticalAlign","actionSection","mainButton","textHighlight","scrollLink","textDecoration","scrollIcon","opacity","connectToBuyButton","makeConfetti","intervalId","animationEnd","defaults","startVelocity","spread","ticks","randomInRange","min","random","timeLeft","particleCount","confetti","Object","assign","origin","x","y","EndedRaffleActionSection","userPubkey","entrantWinningTickets","scrollRef","useCommonStyles","noPrizes","winnersRevealed","userIsConnected","userHasParticipated","confettiTimerId","current","scrollIntoView","behavior","block","minWidth","ticketsSection","myTickets","showMyTickets","paddingBottom","ticketButton","separator","UserTicketsDialog","setOpen","userTickets","props","Dialog","fullWidth","DialogTitle","DialogContent","userTicket","RaffleInfoSection","userConnected","claimButtonContent","claimButtonContentLeft","claimButtonContentMiddle","claimButtonContentRight","claimSpinner","ClaimButton","claimOngoing","setClaimOngoing","scrollTo","state","isZero","useRandomDrawer","endRange","drawLength","spinIntervalMs","redrawIntervalMs","currentTicketIndex","setCurrentTicketIndex","randomTickets","setRandomTickets","round","prevTicketIndex","prizeInfo","prizeInfoInner","prizeNameRow","prizeName","winnerSection","winnerRow","winnertTicket","winnerPubkey","cardBadge","ShortenedString","message","maxCharLength","addTooltip","modal","outline","shadows","header","body","contentLeft","contentRight","Spacer","PrizeDetailsModal","prizeRank","Modal","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","win","focus","Launch","RandomTicketDrawer","randomTicket","String","padStart","PrizeCardEnded","badgeText","winner","isModalOpen","setIsModalOpen","maxPrizeNameLength","prizesGrid","scrollMargin","prizeItem","claimButtonContainer","PrizeGalleryEnded","winningTickets","isWon","some","entrantWinningTicket","item","PrizeShowcaseEnded","topSection","raffleTitle","alignContent","justifyItems","raffleSubtitle","leftTitleSection","paddingLeft","middleTitleSection","rightTitleSection","backButton","black","backButtonIcon","prizesSection","paddingRight","prizesHeader","seeAllPrizesButton","detailsSection","maxHeight","actionSectionContainer","prizeGallerySection","spacer","RaffleEndedScreen","updateRaffle","prizeGalleryRef","useRef","secret","_","claimPrizeQuery","ArrowBack","DoubleArrow","RaffleEndedScreenWithLayout","PrizeCardOngoing","PrizeShowcase","calculateBasketPrice","ticketAmount","paymentOption","muln","mul","dispenserPriceIn","div","dispenserPriceOut","buyTickets","buyerATAExists","buyerTokenAccount","finalBuyerAccount","wrappedSOL","createSyncNativeInstruction","basketPrice","buyerIntermediaryTokenAccount","swap","registry","swapper","vaultTokenIn","vaultTokenOut","buyerTokenInAccount","buyerTokenOutAccount","buyerTransferAuthority","Button","titleSection","amountLabel","ticketAmountSection","ticketAmountSectionLeft","ticketAmountSectionMiddle","ticketAmountSectionRight","changeTicketAmountButton","ticketAmountTextField","maxButton","priceSection","priceLabel","paymentOptionSection","paymentOptionSelect","paymentOptionSelection","paymentOptionMenu","paymentOptionLogoContainer","paymentOptionLogo","buySection","purchaseButtonContent","purchaseButtonContentLeft","purchaseButtonContentMiddle","purchaseButtonContentRight","purchaseSpinner","walletBalance","MAX_TICKET_AMOUNT","isLamportsEnough","PurchaseTickets","purchaseOngoing","setPurchaseOngoing","walletLamports","setWalletLamports","nativePaymentOption","setPaymentOption","buyerATABalance","setBuyerATABalance","setTicketAmount","dispensers","setDispensers","paymentOptions","mintAddress","dispenser","d","mintTokenOut","mintTokenIn","rateTokenIn","rateTokenOut","getBasketPrice","then","updateLamports","getWalletLamports","newWalletLamports","updateBuyerATABalance","getBuyerATABalance","lamportsEnough","buyerTokenBalance","hasEnoughFunds","gte","maxTicketsToBuyable","newMax","ltn","newTicketAmount","hasEnoughFundsToIncrementTicket","onBuyTickets","currentAmount","IndeterminateCheckBoxRounded","TextField","test","numericValue","Number","InputProps","endAdornment","maxTickets","startAdornment","AddBoxRounded","Select","MenuProps","disableScrollLock","renderValue","optionKey","option","MenuItem","actionTagline","countdown","WebkitTextStrokeWidth","WebkitTextStrokeColor","labelPrizeAmount","seeAllPrizesLabel","actionSectionInner","PrizeGallery","RaffleOngoingScreen","PrizeGalleryOngoing","PrizeShowcaseOngoing","ConnectActionSection","RaffleOngoingScreenWithLayout","RaffleDetails","useParams","id","currentRaffle","setCurrentRaffle","updateCurrentRaffle","isRaffleEnded","socialLinksContainer","socialLinkContainer","socialLink","buttonContainer","require","LandingScreen","Link","href","discordLogo","twitterLogo","documentLogo","meLogo","LandingScreenWithLayout","raffleGrid","raffleGridItem","raffleCard","AdminHomeScreen","createRegistry","systemProgram","rent","SYSVAR_RENT_PUBKEY","DISPENSER_REGISTRY_KEYPAIR","res","Add","scrollButtonIcon","xs","toISOString","AdminHomeScreenWithLayout","headerContainer","entrantRow","AdminRaffleScreen","revealWinners","recentBlockhashes","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","Refresh","AdminRaffleScreenWithLayout","Extension","AboutSuperpalsScreen","Router","path","exact","RaffleDetailsScreen","SECONDARY_COLOR","THIRD_COLOR","createTheme","typography","allVariants","fontFamily","h1","h2","h3","h4","body1","overline","caption","default","grey","ThemeProvider","Wallet","network","Localnet","endpoint","clusterApiUrl","extendedClusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","onError","autoConnect","featuredWallets","bottom","scrollButton","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","Slide","ChevronRight","App","CssBaseline","reverseOrder","toastOptions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","walletAccount","proceedsMint","buyerATA","getTokenAccount","accountInfo","math","owner","tokenRegistry","chainId","tags","website","serumV3Usdc","serumV3Usdt","coingeckoId","twitter"],"mappings":"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","file":"static/js/main.4e7fc557.chunk.js","sourcesContent":["export const TESTING = process.env.REACT_APP_TESTING === 'true';\r\nexport const MAX_NUMBER_OF_PARTICIPANTS = 5000;\r\n","import { utils } from '@project-serum/anchor';\r\nimport { TESTING } from './misc';\r\nimport { DISPENSER_PROGRAM_ID, DISPENSER_REGISTRY_ADDRESS } from './programIds';\r\n\r\nexport const ADMIN_ACCOUNTS = TESTING\r\n  ? ['9trrzs6d1ry6C58SWbT2L2CJKnmDKCrh9cR9qMAxfm4i']\r\n  : ['AoYda9bgXM2Qedd7hKEBcE3pqfMpUi9GhPpjG6LvFXoh'];\r\n\r\nexport const [VAULT_TOKEN_IN] = utils.publicKey.findProgramAddressSync(\r\n  [Buffer.from('vault_token_in'), DISPENSER_REGISTRY_ADDRESS.toBytes()],\r\n  DISPENSER_PROGRAM_ID\r\n);\r\nconsole.log(`VAULT_TOKEN_IN: ${VAULT_TOKEN_IN.toBase58()}`);\r\n\r\nexport const [VAULT_TOKEN_OUT] = utils.publicKey.findProgramAddressSync(\r\n  [Buffer.from('vault_token_out'), DISPENSER_REGISTRY_ADDRESS.toBytes()],\r\n  DISPENSER_PROGRAM_ID\r\n);\r\nconsole.log(`VAULT_TOKEN_OUT = ${VAULT_TOKEN_OUT.toBase58()}`);\r\n","import { BorshAccountsCoder, ProgramAccount } from '@project-serum/anchor';\r\nimport { parseTokenAccount } from '@project-serum/common';\r\nimport { u64, AccountInfo as TokenAccountInfo } from '@solana/spl-token';\r\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\n\r\nimport { tokenInfoMap, UNKNOWN_TOKEN_INFO } from '../../config/tokenRegistry';\r\nimport {\r\n  DraffleProgram,\r\n  EntrantsData,\r\n  EntrantsDataRaw,\r\n  RaffleDataRaw,\r\n} from '../../providers/ProgramApisProvider';\r\nimport { getDisplayAmount } from '../accounts';\r\nimport { getMetadata, getNFTMetadata } from '../metadata';\r\nimport { Entrant, EntrantsMap, Mint, Prize, PrizeType } from '../types';\r\n\r\nexport const fetchProceedsAccount = async (\r\n  raffleAccountAddress: PublicKey,\r\n  draffleClient: DraffleProgram,\r\n  connection: Connection\r\n): Promise<{ address: PublicKey; mintInfo: Mint }> => {\r\n  const [address] = await PublicKey.findProgramAddress(\r\n    [raffleAccountAddress.toBytes(), Buffer.from('proceeds')],\r\n    draffleClient.programId\r\n  );\r\n\r\n  const account = await connection.getAccountInfo(address);\r\n  if (!account) throw Error('Failed to fetch proceeds account');\r\n  const data = parseTokenAccount(account.data);\r\n  const tokenInfo = tokenInfoMap.get(data.mint.toString());\r\n  if (!tokenInfo)\r\n    throw Error(\r\n      `Info not found for proceeds account mint ${data.mint.toString()}`\r\n    );\r\n  const mintInfo = {\r\n    name: tokenInfo.name,\r\n    publicKey: data.mint,\r\n    logoUrl: tokenInfo.logoURI,\r\n    symbol: tokenInfo.symbol,\r\n    decimals: tokenInfo.decimals,\r\n  };\r\n  return { address, mintInfo };\r\n};\r\n\r\nconst getPrizeAddressForPrizeIndex = async (\r\n  raffleAccountAddress: PublicKey,\r\n  prizeIndex: number,\r\n  programId: PublicKey\r\n): Promise<PublicKey> => {\r\n  const [prizeAddress] = await PublicKey.findProgramAddress(\r\n    [\r\n      raffleAccountAddress.toBuffer(),\r\n      Buffer.from('prize'),\r\n      new u64(prizeIndex).toArrayLike(Buffer, 'le', 4),\r\n    ],\r\n    programId\r\n  );\r\n  return prizeAddress;\r\n};\r\n\r\n// Batch fetch prize token accounts then batch fetch metadata accounts given mint\r\nexport const fetchPrizes = async (\r\n  raffleAccountAddress: PublicKey,\r\n  draffleClient: DraffleProgram,\r\n  totalPrizes: number\r\n): Promise<Prize[]> => {\r\n  let prizes: Prize[] = [];\r\n\r\n  const prizeAddresses = await Promise.all(\r\n    [...Array(totalPrizes).keys()].map((prizeIndex) =>\r\n      getPrizeAddressForPrizeIndex(\r\n        raffleAccountAddress,\r\n        prizeIndex,\r\n        draffleClient.programId\r\n      )\r\n    )\r\n  );\r\n  const prizeAccounts =\r\n    await draffleClient.provider.connection.getMultipleAccountsInfo(\r\n      prizeAddresses\r\n    );\r\n\r\n  const prizeTokenAccounts = prizeAccounts.map((prizeAccount) => {\r\n    if (!prizeAccount) {\r\n      throw new Error('Invalid prize account');\r\n    }\r\n    return parseTokenAccount(prizeAccount.data);\r\n  });\r\n\r\n  const metadataAddresses = await Promise.all(\r\n    prizeTokenAccounts.map((prizeTokenAccount) =>\r\n      getMetadata(prizeTokenAccount.mint)\r\n    )\r\n  );\r\n\r\n  const metadataAccountsInfos =\r\n    await draffleClient.provider.connection.getMultipleAccountsInfo(\r\n      metadataAddresses\r\n    );\r\n\r\n  for (const [index, prizeTokenAccount] of prizeTokenAccounts.entries()) {\r\n    prizes.push(\r\n      await processPrize(\r\n        prizeAddresses[index],\r\n        prizeTokenAccount,\r\n        metadataAccountsInfos[index]\r\n      )\r\n    );\r\n  }\r\n  return prizes;\r\n};\r\n\r\nconst processPrize = async (\r\n  prizeAddress: PublicKey,\r\n  prizeTokenAccount: TokenAccountInfo,\r\n  metadataAccountInfo: AccountInfo<Buffer> | null\r\n): Promise<Prize> => {\r\n  let mintInfo;\r\n  const tokenInfo = tokenInfoMap.get(prizeTokenAccount.mint.toString());\r\n  if (tokenInfo) {\r\n    const name = `${getDisplayAmount(prizeTokenAccount.amount, tokenInfo)} ${\r\n      tokenInfo.symbol\r\n    }`;\r\n    const imageURI = (tokenInfo as any)?.extensions?.imageURI;\r\n    mintInfo = {\r\n      name,\r\n      publicKey: prizeTokenAccount.mint,\r\n      logoUrl: tokenInfo.logoURI,\r\n      symbol: tokenInfo.symbol,\r\n      decimals: tokenInfo.decimals,\r\n    };\r\n    return {\r\n      address: prizeAddress,\r\n      mint: mintInfo,\r\n      amount: prizeTokenAccount.amount,\r\n      type: PrizeType.FT,\r\n      meta: {\r\n        imageUri: imageURI || tokenInfo.logoURI,\r\n      },\r\n    };\r\n  } else {\r\n    // It isn't a recognized fungible token so it might be a NFT\r\n    const meta = metadataAccountInfo\r\n      ? await getNFTMetadata(metadataAccountInfo)\r\n      : undefined;\r\n\r\n    // TODO: Need to distinguish between NFT types to fill correct attributes\r\n    const tokenInfo = UNKNOWN_TOKEN_INFO;\r\n    mintInfo = {\r\n      name: meta?.name || tokenInfo.name,\r\n      publicKey: prizeTokenAccount.mint,\r\n      logoUrl: meta?.image || tokenInfo.logoURI,\r\n      symbol: tokenInfo.symbol,\r\n      decimals: tokenInfo.decimals,\r\n    };\r\n    return {\r\n      address: prizeAddress,\r\n      mint: mintInfo,\r\n      amount: prizeTokenAccount.amount,\r\n      type: PrizeType.NFTPicture,\r\n      meta: {\r\n        name: meta?.name || tokenInfo.name,\r\n        imageUri: meta?.image || tokenInfo.name,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport const toEntrantsProcessed = (entrantsData: EntrantsData) => {\r\n  const entrantsProcessed = entrantsData.entrants\r\n    .slice(0, entrantsData.total)\r\n    .reduce<EntrantsMap>((acc, entrant, index) => {\r\n      const entrantValue = acc.get(entrant.toBase58());\r\n      if (entrantValue) {\r\n        entrantValue.tickets.push(index);\r\n      } else {\r\n        acc.set(entrant.toBase58(), {\r\n          publicKey: entrant,\r\n          tickets: [index],\r\n        });\r\n      }\r\n      return acc;\r\n    }, new Map<string, Entrant>());\r\n\r\n  return entrantsProcessed;\r\n};\r\n\r\nexport const deserializeEntrantsData = (\r\n  draffleClient: DraffleProgram,\r\n  data: Buffer\r\n): EntrantsData => {\r\n  const entrantsDataRaw = draffleClient.coder.accounts.decode<EntrantsDataRaw>(\r\n    'entrants',\r\n    data\r\n  );\r\n  const entrants: PublicKey[] = [];\r\n  const entrantsFieldData = data.subarray(8 + 4 + 4);\r\n  for (let i = 0; i < entrantsDataRaw.max; i++) {\r\n    entrants.push(new PublicKey(entrantsFieldData.slice(i * 32, (i + 1) * 32)));\r\n  }\r\n  return {\r\n    ...entrantsDataRaw,\r\n    entrants,\r\n  };\r\n};\r\n\r\nexport const getRaffleProgramAccounts = async (\r\n  draffleClient: DraffleProgram\r\n): Promise<{\r\n  raffleDataRawProgramAccounts: ProgramAccount<RaffleDataRaw>[];\r\n  entrantsDataProgramAccounts: ProgramAccount<EntrantsData>[];\r\n}> => {\r\n  const result = await draffleClient.provider.connection.getProgramAccounts(\r\n    draffleClient.programId\r\n  );\r\n  const raffleDiscriminator = BorshAccountsCoder.accountDiscriminator('Raffle');\r\n  const entrantsDiscriminator =\r\n    BorshAccountsCoder.accountDiscriminator('Entrants');\r\n\r\n  const raffleDataRawProgramAccounts: ProgramAccount<RaffleDataRaw>[] = [];\r\n  const entrantsDataProgramAccounts: ProgramAccount<EntrantsData>[] = [];\r\n\r\n  result.forEach(({ pubkey, account }) => {\r\n    const discriminator = account.data.slice(0, 8);\r\n\r\n    if (raffleDiscriminator.compare(discriminator) === 0) {\r\n      raffleDataRawProgramAccounts.push({\r\n        publicKey: pubkey,\r\n        account: draffleClient.coder.accounts.decode<RaffleDataRaw>(\r\n          'raffle',\r\n          account.data\r\n        ),\r\n      });\r\n    } else if (entrantsDiscriminator.compare(discriminator) === 0) {\r\n      entrantsDataProgramAccounts.push({\r\n        publicKey: pubkey,\r\n        account: deserializeEntrantsData(draffleClient, account.data),\r\n      });\r\n    } else {\r\n      console.log(`Could not decode ${pubkey.toBase58()}`);\r\n    }\r\n  });\r\n  return { raffleDataRawProgramAccounts, entrantsDataProgramAccounts };\r\n};\r\n","import { PublicKey } from \"@solana/web3.js\";\r\n\r\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');","import { METADATA_PROGRAM_ID } from './programIds';\r\nimport { deserializeUnchecked } from 'borsh';\r\nimport BN from 'bn.js';\r\nimport { AccountInfo, PublicKey } from '@solana/web3.js';\r\nimport { StringPublicKey } from './utils';\r\nimport { extendBorsh } from './borsh';\r\nextendBorsh();\r\nexport const METADATA_PREFIX = 'metadata';\r\nexport const EDITION = 'edition';\r\nexport const RESERVATION = 'reservation';\r\n\r\nexport const MAX_NAME_LENGTH = 32;\r\n\r\nexport const MAX_SYMBOL_LENGTH = 10;\r\n\r\nexport const MAX_URI_LENGTH = 200;\r\n\r\nexport const MAX_CREATOR_LIMIT = 5;\r\n\r\nexport const MAX_CREATOR_LEN = 32 + 1 + 1;\r\nexport const MAX_METADATA_LEN =\r\n  1 +\r\n  32 +\r\n  32 +\r\n  MAX_NAME_LENGTH +\r\n  MAX_SYMBOL_LENGTH +\r\n  MAX_URI_LENGTH +\r\n  MAX_CREATOR_LIMIT * MAX_CREATOR_LEN +\r\n  2 +\r\n  1 +\r\n  1 +\r\n  198;\r\n\r\nexport const MAX_EDITION_LEN = 1 + 32 + 8 + 200;\r\n\r\nexport const EDITION_MARKER_BIT_SIZE = 248;\r\n\r\nexport enum MetadataKey {\r\n  Uninitialized = 0,\r\n  MetadataV1 = 4,\r\n  EditionV1 = 1,\r\n  MasterEditionV1 = 2,\r\n  MasterEditionV2 = 6,\r\n  EditionMarker = 7,\r\n}\r\n\r\nexport enum MetadataCategory {\r\n  Audio = 'audio',\r\n  Video = 'video',\r\n  Image = 'image',\r\n  VR = 'vr',\r\n}\r\n\r\nexport type MetadataFile = {\r\n  uri: string;\r\n  type: string;\r\n};\r\n\r\nexport type FileOrString = MetadataFile | string;\r\n\r\nexport type Attribute = {\r\n  trait_type?: string;\r\n  display_type?: string;\r\n  value: string | number;\r\n};\r\n\r\nexport interface IMetadataExtension {\r\n  name: string;\r\n  symbol: string;\r\n\r\n  creators: Creator[] | null;\r\n  description: string;\r\n  // preview image absolute URI\r\n  image: string;\r\n  animation_url?: string;\r\n\r\n  attributes?: Attribute[];\r\n\r\n  // stores link to item on meta\r\n  external_url: string;\r\n\r\n  seller_fee_basis_points: number;\r\n\r\n  properties: {\r\n    files?: FileOrString[];\r\n    category: MetadataCategory;\r\n    maxSupply?: number;\r\n    creators?: {\r\n      address: string;\r\n      shares: number;\r\n    }[];\r\n  };\r\n}\r\n\r\nexport class MasterEditionV1 {\r\n  key: MetadataKey;\r\n  supply: BN;\r\n  maxSupply?: BN;\r\n  /// Can be used to mint tokens that give one-time permission to mint a single limited edition.\r\n  printingMint: StringPublicKey;\r\n  /// If you don't know how many printing tokens you are going to need, but you do know\r\n  /// you are going to need some amount in the future, you can use a token from this mint.\r\n  /// Coming back to token metadata with one of these tokens allows you to mint (one time)\r\n  /// any number of printing tokens you want. This is used for instance by Auction Manager\r\n  /// with participation NFTs, where we dont know how many people will bid and need participation\r\n  /// printing tokens to redeem, so we give it ONE of these tokens to use after the auction is over,\r\n  /// because when the auction begins we just dont know how many printing tokens we will need,\r\n  /// but at the end we will. At the end it then burns this token with token-metadata to\r\n  /// get the printing tokens it needs to give to bidders. Each bidder then redeems a printing token\r\n  /// to get their limited editions.\r\n  oneTimePrintingAuthorizationMint: StringPublicKey;\r\n\r\n  constructor(args: {\r\n    key: MetadataKey;\r\n    supply: BN;\r\n    maxSupply?: BN;\r\n    printingMint: StringPublicKey;\r\n    oneTimePrintingAuthorizationMint: StringPublicKey;\r\n  }) {\r\n    this.key = MetadataKey.MasterEditionV1;\r\n    this.supply = args.supply;\r\n    this.maxSupply = args.maxSupply;\r\n    this.printingMint = args.printingMint;\r\n    this.oneTimePrintingAuthorizationMint =\r\n      args.oneTimePrintingAuthorizationMint;\r\n  }\r\n}\r\n\r\nexport class MasterEditionV2 {\r\n  key: MetadataKey;\r\n  supply: BN;\r\n  maxSupply?: BN;\r\n\r\n  constructor(args: { key: MetadataKey; supply: BN; maxSupply?: BN }) {\r\n    this.key = MetadataKey.MasterEditionV2;\r\n    this.supply = args.supply;\r\n    this.maxSupply = args.maxSupply;\r\n  }\r\n}\r\n\r\nexport class EditionMarker {\r\n  key: MetadataKey;\r\n  ledger: number[];\r\n\r\n  constructor(args: { key: MetadataKey; ledger: number[] }) {\r\n    this.key = MetadataKey.EditionMarker;\r\n    this.ledger = args.ledger;\r\n  }\r\n\r\n  editionTaken(edition: number) {\r\n    const editionOffset = edition % EDITION_MARKER_BIT_SIZE;\r\n    const indexOffset = Math.floor(editionOffset / 8);\r\n\r\n    if (indexOffset > 30) {\r\n      throw Error('bad index for edition');\r\n    }\r\n\r\n    const positionInBitsetFromRight = 7 - (editionOffset % 8);\r\n\r\n    const mask = Math.pow(2, positionInBitsetFromRight);\r\n\r\n    const appliedMask = this.ledger[indexOffset] & mask;\r\n\r\n    return appliedMask !== 0;\r\n  }\r\n}\r\n\r\nexport class Edition {\r\n  key: MetadataKey;\r\n  /// Points at MasterEdition struct\r\n  parent: StringPublicKey;\r\n  /// Starting at 0 for master record, this is incremented for each edition minted.\r\n  edition: BN;\r\n\r\n  constructor(args: {\r\n    key: MetadataKey;\r\n    parent: StringPublicKey;\r\n    edition: BN;\r\n  }) {\r\n    this.key = MetadataKey.EditionV1;\r\n    this.parent = args.parent;\r\n    this.edition = args.edition;\r\n  }\r\n}\r\nexport class Creator {\r\n  address: StringPublicKey;\r\n  verified: boolean;\r\n  share: number;\r\n\r\n  constructor(args: {\r\n    address: StringPublicKey;\r\n    verified: boolean;\r\n    share: number;\r\n  }) {\r\n    this.address = args.address;\r\n    this.verified = args.verified;\r\n    this.share = args.share;\r\n  }\r\n}\r\n\r\nexport class Data {\r\n  name: string;\r\n  symbol: string;\r\n  uri: string;\r\n  sellerFeeBasisPoints: number;\r\n  creators: Creator[] | null;\r\n  constructor(args: {\r\n    name: string;\r\n    symbol: string;\r\n    uri: string;\r\n    sellerFeeBasisPoints: number;\r\n    creators: Creator[] | null;\r\n  }) {\r\n    this.name = args.name;\r\n    this.symbol = args.symbol;\r\n    this.uri = args.uri;\r\n    this.sellerFeeBasisPoints = args.sellerFeeBasisPoints;\r\n    this.creators = args.creators;\r\n  }\r\n}\r\n\r\nexport class Metadata {\r\n  key: MetadataKey;\r\n  updateAuthority: StringPublicKey;\r\n  mint: StringPublicKey;\r\n  data: Data;\r\n  primarySaleHappened: boolean;\r\n  isMutable: boolean;\r\n  editionNonce: number | null;\r\n\r\n  // set lazy\r\n  masterEdition?: StringPublicKey;\r\n  edition?: StringPublicKey;\r\n\r\n  constructor(args: {\r\n    updateAuthority: StringPublicKey;\r\n    mint: StringPublicKey;\r\n    data: Data;\r\n    primarySaleHappened: boolean;\r\n    isMutable: boolean;\r\n    editionNonce: number | null;\r\n  }) {\r\n    this.key = MetadataKey.MetadataV1;\r\n    this.updateAuthority = args.updateAuthority;\r\n    this.mint = args.mint;\r\n    this.data = args.data;\r\n    this.primarySaleHappened = args.primarySaleHappened;\r\n    this.isMutable = args.isMutable;\r\n    this.editionNonce = args.editionNonce;\r\n  }\r\n\r\n  public async init() {\r\n    const edition = await getEdition(this.mint);\r\n    this.edition = edition;\r\n    this.masterEdition = edition;\r\n  }\r\n}\r\n\r\nclass CreateMetadataArgs {\r\n  instruction: number = 0;\r\n  data: Data;\r\n  isMutable: boolean;\r\n\r\n  constructor(args: { data: Data; isMutable: boolean }) {\r\n    this.data = args.data;\r\n    this.isMutable = args.isMutable;\r\n  }\r\n}\r\nclass UpdateMetadataArgs {\r\n  instruction: number = 1;\r\n  data: Data | null;\r\n  // Not used by this app, just required for instruction\r\n  updateAuthority: StringPublicKey | null;\r\n  primarySaleHappened: boolean | null;\r\n  constructor(args: {\r\n    data?: Data;\r\n    updateAuthority?: string;\r\n    primarySaleHappened: boolean | null;\r\n  }) {\r\n    this.data = args.data ? args.data : null;\r\n    this.updateAuthority = args.updateAuthority ? args.updateAuthority : null;\r\n    this.primarySaleHappened = args.primarySaleHappened;\r\n  }\r\n}\r\n\r\nclass CreateMasterEditionArgs {\r\n  instruction: number = 10;\r\n  maxSupply: BN | null;\r\n  constructor(args: { maxSupply: BN | null }) {\r\n    this.maxSupply = args.maxSupply;\r\n  }\r\n}\r\n\r\nclass MintPrintingTokensArgs {\r\n  instruction: number = 9;\r\n  supply: BN;\r\n\r\n  constructor(args: { supply: BN }) {\r\n    this.supply = args.supply;\r\n  }\r\n}\r\n\r\nexport const METADATA_SCHEMA = new Map<any, any>([\r\n  [\r\n    CreateMetadataArgs,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['instruction', 'u8'],\r\n        ['data', Data],\r\n        ['isMutable', 'u8'], // bool\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    UpdateMetadataArgs,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['instruction', 'u8'],\r\n        ['data', { kind: 'option', type: Data }],\r\n        ['updateAuthority', { kind: 'option', type: 'pubkeyAsString' }],\r\n        ['primarySaleHappened', { kind: 'option', type: 'u8' }],\r\n      ],\r\n    },\r\n  ],\r\n\r\n  [\r\n    CreateMasterEditionArgs,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['instruction', 'u8'],\r\n        ['maxSupply', { kind: 'option', type: 'u64' }],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    MintPrintingTokensArgs,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['instruction', 'u8'],\r\n        ['supply', 'u64'],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    MasterEditionV1,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['supply', 'u64'],\r\n        ['maxSupply', { kind: 'option', type: 'u64' }],\r\n        ['printingMint', 'pubkeyAsString'],\r\n        ['oneTimePrintingAuthorizationMint', 'pubkeyAsString'],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    MasterEditionV2,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['supply', 'u64'],\r\n        ['maxSupply', { kind: 'option', type: 'u64' }],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    Edition,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['parent', 'pubkeyAsString'],\r\n        ['edition', 'u64'],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    Data,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['name', 'string'],\r\n        ['symbol', 'string'],\r\n        ['uri', 'string'],\r\n        ['sellerFeeBasisPoints', 'u16'],\r\n        ['creators', { kind: 'option', type: [Creator] }],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    Creator,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['address', 'pubkeyAsString'],\r\n        ['verified', 'u8'],\r\n        ['share', 'u8'],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    Metadata,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['updateAuthority', 'pubkeyAsString'],\r\n        ['mint', 'pubkeyAsString'],\r\n        ['data', Data],\r\n        ['primarySaleHappened', 'u8'], // bool\r\n        ['isMutable', 'u8'], // bool\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    EditionMarker,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['ledger', [31]],\r\n      ],\r\n    },\r\n  ],\r\n]);\r\n\r\n// eslint-disable-next-line no-control-regex\r\nconst METADATA_REPLACE = new RegExp('\\u0000', 'g');\r\n\r\nexport const decodeMetadata = (buffer: Buffer): Metadata => {\r\n  const metadata = deserializeUnchecked(\r\n    METADATA_SCHEMA,\r\n    Metadata,\r\n    buffer\r\n  ) as Metadata;\r\n  metadata.data.name = metadata.data.name.replace(METADATA_REPLACE, '');\r\n  metadata.data.uri = metadata.data.uri.replace(METADATA_REPLACE, '');\r\n  metadata.data.symbol = metadata.data.symbol.replace(METADATA_REPLACE, '');\r\n  return metadata;\r\n};\r\n\r\nexport async function getEdition(\r\n  tokenMint: StringPublicKey\r\n): Promise<StringPublicKey> {\r\n  return (\r\n    await PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from(METADATA_PREFIX),\r\n        METADATA_PROGRAM_ID.toBuffer(),\r\n        new PublicKey(tokenMint).toBuffer(),\r\n        Buffer.from(EDITION),\r\n      ],\r\n      METADATA_PROGRAM_ID\r\n    )\r\n  )[0].toBase58();\r\n}\r\n\r\nexport async function getMetadata(tokenMint: PublicKey): Promise<PublicKey> {\r\n  return (\r\n    await PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from(METADATA_PREFIX),\r\n        METADATA_PROGRAM_ID.toBuffer(),\r\n        tokenMint.toBuffer(),\r\n      ],\r\n      METADATA_PROGRAM_ID\r\n    )\r\n  )[0];\r\n}\r\n\r\nexport async function getNFTMetadata(\r\n  metadataAccountInfo: AccountInfo<Buffer>\r\n): Promise<IMetadataExtension | undefined> {\r\n  const metadata = decodeMetadata(metadataAccountInfo.data);\r\n\r\n  try {\r\n    const result = await fetch(metadata.data.uri);\r\n    // We might need some more care here in case the data isn't valid\r\n    const metadataExtension = (await result.json()) as IMetadataExtension;\r\n    return metadataExtension;\r\n  } catch (e) {\r\n    console.log(e);\r\n    return;\r\n  }\r\n}\r\n","import { u64 } from '@solana/spl-token';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport interface Mint {\r\n  name: string;\r\n  publicKey: PublicKey;\r\n  logoUrl: string;\r\n  symbol: string;\r\n  decimals: number;\r\n}\r\n\r\nexport interface Entrant {\r\n  publicKey: PublicKey;\r\n  tickets: number[];\r\n}\r\n\r\nexport type EntrantsMap = Map<string, Entrant>;\r\n\r\nexport enum PrizeType {\r\n  FT = 'FT',\r\n  NFTPicture = 'NFTPicture',\r\n}\r\n\r\nexport interface PrizeBase {\r\n  address: PublicKey;\r\n  mint: Mint;\r\n  amount: u64;\r\n}\r\n\r\nexport type Prize = PrizeBase &\r\n  (\r\n    | { type: PrizeType.FT; meta: FungiblePrizeMeta }\r\n    | { type: PrizeType.NFTPicture; meta: PrizeNFTPictureMeta }\r\n  );\r\n\r\nexport interface FungiblePrizeMeta {\r\n  imageUri: string;\r\n}\r\n\r\nexport interface PrizeNFTPictureMeta {\r\n  name: string;\r\n  imageUri: string;\r\n}\r\n\r\nexport interface Proceeds {\r\n  address: PublicKey;\r\n  mint: Mint;\r\n  ticketPrice: u64;\r\n}\r\n\r\nexport interface RaffleMetaData {\r\n  name: string;\r\n  overviewImageUri?: string;\r\n  alternatePurchaseMints?: PublicKey[];\r\n}\r\n\r\nexport interface Raffle {\r\n  publicKey: PublicKey;\r\n  metadata: RaffleMetaData;\r\n  endTimestamp: Date;\r\n  proceeds: Proceeds;\r\n  entrants: EntrantsMap;\r\n  entrantsCap: number;\r\n  entrantsRaw: PublicKey[];\r\n  totalTickets: number;\r\n  entrantsAccountAddress: PublicKey;\r\n  prizes: Prize[];\r\n  randomness: number[] | null;\r\n  isEnded: boolean;\r\n}\r\n\r\nexport interface PaymentOption {\r\n  dispenserPriceIn: u64;\r\n  dispenserPriceOut: u64;\r\n  mint: Mint;\r\n}\r\n\r\nexport interface TokenAccountInfo {\r\n  address: PublicKey;\r\n  owner: PublicKey;\r\n  amount: u64;\r\n  mint: PublicKey;\r\n  state: string;\r\n}\r\n","import { PublicKey } from '@solana/web3.js';\r\nimport { BinaryReader, BinaryWriter } from 'borsh';\r\nimport base58 from 'bs58';\r\nimport { StringPublicKey } from './utils';\r\n\r\nexport const extendBorsh = () => {\r\n  (BinaryReader.prototype as any).readPubkey = function () {\r\n    const reader = this as unknown as BinaryReader;\r\n    const array = reader.readFixedArray(32);\r\n    return new PublicKey(array);\r\n  };\r\n\r\n  (BinaryWriter.prototype as any).writePubkey = function (value: PublicKey) {\r\n    const writer = this as unknown as BinaryWriter;\r\n    writer.writeFixedArray(value.toBuffer());\r\n  };\r\n\r\n  (BinaryReader.prototype as any).readPubkeyAsString = function () {\r\n    const reader = this as unknown as BinaryReader;\r\n    const array = reader.readFixedArray(32);\r\n    return base58.encode(array) as StringPublicKey;\r\n  };\r\n\r\n  (BinaryWriter.prototype as any).writePubkeyAsString = function (\r\n    value: StringPublicKey,\r\n  ) {\r\n    const writer = this as unknown as BinaryWriter;\r\n    writer.writeFixedArray(base58.decode(value));\r\n  };\r\n};\r\n","import BN from 'bn.js';\r\nimport { keccak_256 } from 'js-sha3';\r\n\r\n// Output is only u32, so can be a number\r\nexport function expand(randomValue: number[], n: number): number {\r\n  const hasher = keccak_256.create();\r\n  hasher.update(new Uint8Array(randomValue));\r\n  hasher.update(new BN(n).toArrayLike(Buffer, 'le', 4));\r\n\r\n  return new BN(hasher.digest().slice(0, 4), 'le').toNumber();\r\n}\r\n","const adminNs = '/admin_panel';\r\n\r\nconst adminRoutes = {\r\n  HOME: `${adminNs}/`,\r\n  RAFFLES: `${adminNs}/raffles`,\r\n};\r\n\r\nconst routes = {\r\n  HOME: '/',\r\n  RAFFLES: '/raffles',\r\n  ABOUT: '/about',\r\n  // STAKE: '/stake',\r\n  // TOOLS: '/tools',\r\n  ADMIN: adminRoutes,\r\n};\r\n\r\nexport { routes };\r\n","import { u64 } from '@solana/spl-token';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { Raffle } from '../types';\r\n\r\nexport const shortenPubkeyString = (\r\n  pubkey: PublicKey,\r\n  sidesLength: number = 4\r\n) => {\r\n  const keyString = pubkey.toString();\r\n  const keyLength = keyString.length;\r\n  return `${keyString.substr(0, sidesLength)}...${keyString.substr(\r\n    keyLength - sidesLength,\r\n    keyLength\r\n  )}`;\r\n};\r\n\r\nexport function notify({\r\n  message,\r\n  description,\r\n}: {\r\n  message: string;\r\n  description: string;\r\n}) {\r\n  console.log(`${message}, ${description}`);\r\n}\r\n\r\nexport const areEqualObjects = (account1: any, account2: any) =>\r\n  JSON.stringify(account1) === JSON.stringify(account2);\r\n\r\nexport const getRemainingTime = (now: Date, end: Date) => {\r\n  const dt = end.getTime() - now.getTime();\r\n  if (dt < 0) return { days: 0, hours: 0, minutes: 0, seconds: 0 };\r\n  let days = Math.floor(dt / (1000 * 60 * 60 * 24));\r\n  let hours = Math.floor((dt % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  let minutes = Math.floor((dt % (1000 * 60 * 60)) / (1000 * 60));\r\n  let seconds = Math.floor((dt % (1000 * 60)) / 1000);\r\n  return { days, hours, minutes, seconds };\r\n};\r\n\r\nexport const sleep = (ms: number) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\n// const bitSlicing = () => {};\r\n\r\nexport const computeTotalTicketsBought = (raffle: Raffle) =>\r\n  [...raffle.entrants.values()].reduce(\r\n    (total, entrant) => total.add(new u64(entrant.tickets.length)),\r\n    new u64(0)\r\n  );\r\n\r\nexport const debounce = (func: Function, timeout = 300) => {\r\n  let timer: NodeJS.Timeout;\r\n  return (...args: any) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args);\r\n    }, timeout);\r\n  };\r\n};\r\n\r\n// https://stackoverflow.com/questions/1322732/convert-seconds-to-hh-mm-ss-with-javascript\r\nexport const toHHMMSS = (secs: number) => {\r\n  const hours = Math.floor(secs / 3600);\r\n  const minutes = Math.floor(secs / 60) % 60;\r\n  const seconds = secs % 60;\r\n\r\n  return [hours, minutes, seconds]\r\n    .map((v) => (v < 10 ? '0' + v : v))\r\n    .filter((v, i) => v !== '00' || i > 0)\r\n    .join(':');\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nexport enum DeviceType {\r\n  Phone = 0,\r\n  Tablet = 1,\r\n  Desktop = 2,\r\n}\r\n\r\nconst PHONE_BREAKPOINT = 600;\r\nconst TABLET_BREAKPOINT = 768;\r\n\r\nexport interface ViewportInfo {\r\n  device: DeviceType;\r\n}\r\n\r\n// @ts-ignore\r\nexport const ViewportContext = React.createContext<ViewportInfo>();\r\n\r\nconst ViewportProvider: FC = ({ children }) => {\r\n  const [device, setDevice] = React.useState(DeviceType.Desktop);\r\n\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => {\r\n      if (window.innerWidth < PHONE_BREAKPOINT && device !== DeviceType.Phone)\r\n        setDevice(DeviceType.Phone);\r\n      else if (\r\n        window.innerWidth < TABLET_BREAKPOINT &&\r\n        device !== DeviceType.Tablet\r\n      )\r\n        setDevice(DeviceType.Tablet);\r\n      else if (\r\n        window.innerWidth >= TABLET_BREAKPOINT &&\r\n        device !== DeviceType.Desktop\r\n      )\r\n        setDevice(DeviceType.Desktop);\r\n    };\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n    return () => window.removeEventListener('resize', handleWindowResize);\r\n  }, []);\r\n\r\n  return (\r\n    <ViewportContext.Provider value={{ device }}>\r\n      {children}\r\n    </ViewportContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ViewportProvider;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    maxWidth: '900px',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n","import React, { FC, useEffect, useMemo, useState } from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\nimport { getRemainingTime } from '../../lib/utils';\r\nimport { useStyles } from './styles';\r\n\r\nexport interface CountdownProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  endTimestamp: Date;\r\n  spacing?: string;\r\n}\r\n\r\nexport const Countdown: FC<CountdownProps> = ({\r\n  endTimestamp,\r\n  spacing = '0px',\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  const classes = useStyles();\r\n  const [now, setNow] = useState(new Date());\r\n  const [animationEnded, setAnimationEnded] = useState(false);\r\n  const { days, hours, minutes, seconds } = useMemo(\r\n    () => getRemainingTime(now, endTimestamp),\r\n    [now, endTimestamp]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setNow(new Date());\r\n    const timerId = setInterval(\r\n      (startDate: number) => {\r\n        if (new Date().getTime() * 1000 - startDate > 0.2) setNow(new Date());\r\n      },\r\n      1000,\r\n      new Date().getTime() * 1000\r\n    );\r\n    return () => clearInterval(timerId);\r\n  }, [setNow]);\r\n\r\n  return !animationEnded ? (\r\n    <div className={`${classes.root} ${className}`} {...otherProps}>\r\n      <div style={{ marginRight: spacing }}>\r\n        <CountUp\r\n          start={0}\r\n          end={days}\r\n          delay={0}\r\n          duration={0.8}\r\n          preserveValue\r\n          useEasing\r\n          onEnd={() => setAnimationEnded(true)}\r\n        >\r\n          {({ countUpRef: daysRef }) => <span ref={daysRef} />}\r\n        </CountUp>\r\n      </div>\r\n      :\r\n      <div style={{ marginRight: spacing, marginLeft: spacing }}>\r\n        <CountUp\r\n          start={0}\r\n          end={hours}\r\n          delay={0}\r\n          duration={0.8}\r\n          preserveValue\r\n          useEasing\r\n          onEnd={() => setAnimationEnded(true)}\r\n          formattingFn={(number) =>\r\n            number.toLocaleString('en-US', {\r\n              minimumIntegerDigits: 2,\r\n              useGrouping: false,\r\n            })\r\n          }\r\n        >\r\n          {({ countUpRef: hoursRef }) => <span ref={hoursRef} />}\r\n        </CountUp>\r\n      </div>\r\n      :\r\n      <div style={{ marginRight: spacing, marginLeft: spacing }}>\r\n        <CountUp\r\n          start={0}\r\n          end={minutes}\r\n          delay={0}\r\n          duration={0.8}\r\n          preserveValue\r\n          useEasing\r\n          onEnd={() => setAnimationEnded(true)}\r\n          formattingFn={(number) =>\r\n            number.toLocaleString('en-US', {\r\n              minimumIntegerDigits: 2,\r\n              useGrouping: false,\r\n            })\r\n          }\r\n        >\r\n          {({ countUpRef: minutesRef }) => <span ref={minutesRef} />}\r\n        </CountUp>\r\n      </div>\r\n      :\r\n      <div style={{ marginLeft: spacing }}>\r\n        <CountUp\r\n          start={0}\r\n          end={seconds}\r\n          delay={0}\r\n          duration={0.8}\r\n          preserveValue\r\n          useEasing\r\n          onEnd={() => setAnimationEnded(true)}\r\n          formattingFn={(number) =>\r\n            number.toLocaleString('en-US', {\r\n              minimumIntegerDigits: 2,\r\n              useGrouping: false,\r\n            })\r\n          }\r\n        >\r\n          {({ countUpRef: secondsRef }) => <span ref={secondsRef} />}\r\n        </CountUp>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className={`${classes.root} ${className}`} {...otherProps}>\r\n      <span style={{ marginRight: spacing }}>{days}</span>:\r\n      <span style={{ marginRight: spacing, marginLeft: spacing }}>\r\n        {hours.toLocaleString('en-US', {\r\n          minimumIntegerDigits: 2,\r\n          useGrouping: false,\r\n        })}\r\n      </span>\r\n      :\r\n      <span style={{ marginRight: spacing, marginLeft: spacing }}>\r\n        {minutes.toLocaleString('en-US', {\r\n          minimumIntegerDigits: 2,\r\n          useGrouping: false,\r\n        })}\r\n      </span>\r\n      :\r\n      <span style={{ marginLeft: spacing }}>\r\n        {seconds.toLocaleString('en-US', {\r\n          minimumIntegerDigits: 2,\r\n          useGrouping: false,\r\n        })}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      height: '420px',\r\n      width: '280px',\r\n      position: 'relative',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        boxShadow: '0 3px 10px 0 #111',\r\n        transform: 'scale3d(1.02, 1.02, 1)',\r\n      },\r\n      '&:active': {\r\n        transform: 'scale3d(1, 1, 1)',\r\n      },\r\n    }),\r\n    media: {\r\n      height: '250px',\r\n      minHeight: '250px',\r\n    },\r\n    raffleInfo: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      fontSize: '18px',\r\n      padding: '15px',\r\n    },\r\n    cardLabel: {\r\n      fontSize: '15px',\r\n    },\r\n    detailsRow1: {\r\n      color: theme.palette.primary.main,\r\n      fontWeight: 'bold',\r\n      textTransform: 'uppercase',\r\n      marginBottom: '10px',\r\n    },\r\n    detailsRow2: {\r\n      color: theme.palette.common.white,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      width: '100%',\r\n      marginBottom: '10px',\r\n    },\r\n    detailsRow3: {\r\n      color: theme.palette.common.white,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      width: '100%',\r\n    },\r\n    label: {\r\n      fontSize: '10px',\r\n      color: '#777',\r\n    },\r\n    ticketsSold: {\r\n      width: '50%',\r\n    },\r\n    endingIn: {\r\n      width: '50%',\r\n    },\r\n    ticketPrice: {\r\n      width: '80%',\r\n    },\r\n    goToRaffle: {\r\n      color: '#26a6cb',\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n    cardPrizesBadge: {\r\n      fontSize: '12px',\r\n      fontWeight: 'bold',\r\n      width: '80px',\r\n      textAlign: 'center',\r\n      padding: '2px',\r\n      position: 'absolute',\r\n      top: '5px',\r\n      left: '5px',\r\n      color: 'black',\r\n      backgroundColor: theme.palette.secondary.main,\r\n      borderRadius: '2px',\r\n      boxShadow: '0 2px 6px 0 #000',\r\n    },\r\n    cardEndedBadge: {\r\n      fontSize: '12px',\r\n      fontWeight: 'bold',\r\n      width: '50px',\r\n      textAlign: 'center',\r\n      padding: '2px',\r\n      position: 'absolute',\r\n      top: '5px',\r\n      right: '5px',\r\n      color: '#26a6cb',\r\n      backgroundColor: theme.palette.primary.main,\r\n      borderRadius: '2px',\r\n      boxShadow: '0 2px 6px 0 #000',\r\n    },\r\n  })\r\n);\r\n","import { useContext } from 'react';\r\nimport { ViewportContext } from '../providers/ViewportProvider';\r\n\r\nexport const useViewport = () => {\r\n  const context = useContext(ViewportContext);\r\n  if (context === undefined) {\r\n    throw new Error('useViewport must be used within an ViewportContext');\r\n  }\r\n  return context;\r\n};\r\n","import React, { FC, HTMLAttributes, useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardMedia,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { ArrowForward } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { Raffle } from '../../lib/types';\r\nimport { routes } from '../../router/routes';\r\nimport Countdown from '../Countdown';\r\nimport { getDisplayAmount } from '../../lib/accounts';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../hooks/useViewport';\r\n\r\nexport interface RaffleCardProps extends HTMLAttributes<HTMLDivElement> {\r\n  raffle: Raffle;\r\n}\r\n\r\nconst MAX_TITLE_LENGTH = 20;\r\n\r\nconst RaffleCard: FC<RaffleCardProps> = ({\r\n  raffle,\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const { push } = useHistory();\r\n  const [isEnded, setIsEnded] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timerId = setInterval(\r\n      () => setIsEnded(new Date() < raffle.endTimestamp),\r\n      1000\r\n    );\r\n    return () => clearInterval(timerId);\r\n  }, [raffle, setIsEnded]);\r\n\r\n  if (raffle.prizes.length === 0) return null;\r\n\r\n  const prize = raffle.prizes[0];\r\n  const imageUrl = raffle.metadata.overviewImageUri\r\n    ? raffle.metadata.overviewImageUri\r\n    : prize.meta.imageUri;\r\n\r\n  return (\r\n    <Card\r\n      onClick={() => {\r\n        push(`${routes.RAFFLES}/${raffle.publicKey}`);\r\n      }}\r\n      className={`${classes.root} ${className}`}\r\n      {...otherProps}\r\n    >\r\n      <div className={classes.cardPrizesBadge}>\r\n        {raffle.prizes.length} prize{raffle.prizes.length > 1 && 's'}\r\n      </div>\r\n      {new Date() > raffle.endTimestamp && (\r\n        <div className={classes.cardEndedBadge}>Ended</div>\r\n      )}\r\n      {!isLoaded && (\r\n        <Skeleton\r\n          variant=\"rect\"\r\n          animation={'wave'}\r\n          classes={{\r\n            root: classes.media,\r\n          }}\r\n        />\r\n      )}\r\n      <CardMedia\r\n        component=\"img\"\r\n        className={classes.media}\r\n        src={imageUrl}\r\n        alt={prize.mint.name}\r\n        style={isLoaded ? {} : { display: 'none' }}\r\n        onLoad={() => setIsLoaded(true)}\r\n      />\r\n\r\n      <CardActions className={classes.raffleInfo}>\r\n        <div className={classes.detailsRow1}>\r\n          {raffle.metadata.name.length > MAX_TITLE_LENGTH ? (\r\n            <Tooltip title={raffle.metadata.name} placement=\"top\">\r\n              <div>\r\n                {raffle.metadata.name.slice(0, MAX_TITLE_LENGTH - 4)} ...\r\n              </div>\r\n            </Tooltip>\r\n          ) : (\r\n            raffle.metadata.name\r\n          )}\r\n        </div>\r\n        <div className={classes.detailsRow2}>\r\n          <div className={classes.ticketsSold}>\r\n            <div className={classes.label}>\r\n              <span className={classes.cardLabel}>Tickets sold</span>\r\n            </div>\r\n            {raffle.totalTickets}\r\n          </div>\r\n          <div className={classes.endingIn}>\r\n            <div className={classes.label}>\r\n              <span className={classes.cardLabel}>Ending in</span>\r\n            </div>\r\n            {isEnded ? <Countdown endTimestamp={raffle.endTimestamp} /> : '-'}\r\n          </div>\r\n        </div>\r\n        <div className={classes.detailsRow3}>\r\n          <div className={classes.ticketPrice}>\r\n            <div className={classes.label}>\r\n              <span className={classes.cardLabel}>Ticket price</span>\r\n            </div>\r\n            {getDisplayAmount(\r\n              raffle.proceeds.ticketPrice,\r\n              raffle.proceeds.mint\r\n            )}{' '}\r\n            {raffle.proceeds.mint.symbol}\r\n          </div>\r\n          <div>\r\n            <IconButton className={classes.goToRaffle}>\r\n              <ArrowForward />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RaffleCard;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    rafflesGrid: {\r\n      display: 'flex',\r\n      flexGrow: 'initial',\r\n      width: '100%',\r\n    },\r\n    titleBar: ({ device }) => ({\r\n      marginBottom: device === DeviceType.Phone ? '20px' : '50px',\r\n    }),\r\n    mainContent: {\r\n      marginTop: '100px',\r\n      textAlign: 'center',\r\n    },\r\n    raffleCardContainer: ({ device }) => ({\r\n      margin:\r\n        device === DeviceType.Phone ? '0 10px 20px 10px' : '0 40px 50px 40px',\r\n    }),\r\n  })\r\n);\r\n","import { AnchorProvider } from '@project-serum/anchor';\r\nimport { Wallet } from '@project-serum/anchor/dist/cjs/provider';\r\nimport { AnchorWallet } from '@solana/wallet-adapter-react';\r\nimport {\r\n  ConfirmOptions,\r\n  Connection,\r\n  PublicKey,\r\n  Signer,\r\n  Transaction,\r\n  TransactionSignature,\r\n} from '@solana/web3.js';\r\nimport toast from 'react-hot-toast';\r\nimport { sleep } from './utils';\r\n\r\nexport class StubWallet implements Wallet {\r\n  async signTransaction(tx: Transaction): Promise<Transaction> {\r\n    return tx;\r\n  }\r\n  async signAllTransactions(txs: Transaction[]): Promise<Transaction[]> {\r\n    return txs;\r\n  }\r\n  // Total hack to allow missing wallet when not connected\r\n  publicKey = undefined as unknown as PublicKey;\r\n}\r\n\r\nexport const customProviderFactory = (\r\n  connection: Connection,\r\n  anchorWallet: AnchorWallet | undefined\r\n): AnchorProvider => {\r\n  const provider = new AnchorProvider(\r\n    connection,\r\n    anchorWallet || new StubWallet(),\r\n    {}\r\n  );\r\n\r\n  // No websocket sender with tx confirmation awaiting\r\n  provider.sendAndConfirm = async (\r\n    tx: Transaction,\r\n    signers?: Array<Signer | undefined>,\r\n    opts?: ConfirmOptions\r\n  ): Promise<TransactionSignature> => {\r\n    if (signers === undefined) {\r\n      signers = [];\r\n    }\r\n\r\n    tx.feePayer = anchorWallet?.publicKey;\r\n    tx.recentBlockhash = (await connection.getRecentBlockhash()).blockhash;\r\n\r\n    await anchorWallet?.signTransaction(tx);\r\n    signers\r\n      .filter((s): s is Signer => s !== undefined)\r\n      .forEach((kp) => {\r\n        tx.partialSign(kp);\r\n      });\r\n\r\n    const rawTx = tx.serialize();\r\n    const signature = await connection.sendRawTransaction(rawTx);\r\n\r\n    // Await for 30 seconds\r\n    for (let i = 0; i < 30; i++) {\r\n      const signatureStatus = (await connection.getSignatureStatus(signature))\r\n        .value;\r\n      if (signatureStatus?.confirmationStatus === 'confirmed') {\r\n        break;\r\n      }\r\n      await sleep(1000);\r\n    }\r\n    return signature;\r\n  };\r\n\r\n  return provider;\r\n};\r\n\r\n// Allows generic wrapping of rpc calls to elevate success and errors to the user\r\nexport const txHandler = async (\r\n  rpcFc: () => Promise<TransactionSignature>,\r\n  successMessage: string\r\n) => {\r\n  try {\r\n    const signature = await rpcFc();\r\n    console.log('Success:', signature);\r\n    toast.success(successMessage);\r\n    return true;\r\n  } catch (error: any) {\r\n    console.log(error);\r\n    if (error.msg) {\r\n      toast.error(`Transaction failed: ${error.msg}`);\r\n    } else {\r\n      toast.error('Unexpected error');\r\n    }\r\n    return false;\r\n  }\r\n};\r\n","export type Draffle = {\r\n  \"version\": \"0.1.0\",\r\n  \"name\": \"draffle\",\r\n  \"instructions\": [\r\n    {\r\n      \"name\": \"createRaffle\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"entrants\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"creator\",\r\n          \"isMut\": true,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"proceeds\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"proceedsMint\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"systemProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"rent\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"endTimestamp\",\r\n          \"type\": \"i64\"\r\n        },\r\n        {\r\n          \"name\": \"ticketPrice\",\r\n          \"type\": \"u64\"\r\n        },\r\n        {\r\n          \"name\": \"maxEntrants\",\r\n          \"type\": \"u32\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"addPrize\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"creator\",\r\n          \"isMut\": true,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"from\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"prize\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"prizeMint\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"systemProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"rent\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"prizeIndex\",\r\n          \"type\": \"u32\"\r\n        },\r\n        {\r\n          \"name\": \"amount\",\r\n          \"type\": \"u64\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"buyTickets\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"entrants\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"proceeds\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"buyerTokenAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"buyerTransferAuthority\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"amount\",\r\n          \"type\": \"u32\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"revealWinners\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"recentBlockhashes\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": []\r\n    },\r\n    {\r\n      \"name\": \"claimPrize\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"entrants\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"prize\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"winnerTokenAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"prizeIndex\",\r\n          \"type\": \"u32\"\r\n        },\r\n        {\r\n          \"name\": \"ticketIndex\",\r\n          \"type\": \"u32\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"collectProceeds\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"proceeds\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"creator\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"creatorProceeds\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": []\r\n    },\r\n    {\r\n      \"name\": \"closeEntrants\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"entrants\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"creator\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        }\r\n      ],\r\n      \"args\": []\r\n    }\r\n  ],\r\n  \"accounts\": [\r\n    {\r\n      \"name\": \"raffle\",\r\n      \"type\": {\r\n        \"kind\": \"struct\",\r\n        \"fields\": [\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"totalPrizes\",\r\n            \"type\": \"u32\"\r\n          },\r\n          {\r\n            \"name\": \"claimedPrizes\",\r\n            \"type\": \"u32\"\r\n          },\r\n          {\r\n            \"name\": \"randomness\",\r\n            \"type\": {\r\n              \"option\": {\r\n                \"array\": [\r\n                  \"u8\",\r\n                  32\r\n                ]\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"endTimestamp\",\r\n            \"type\": \"i64\"\r\n          },\r\n          {\r\n            \"name\": \"ticketPrice\",\r\n            \"type\": \"u64\"\r\n          },\r\n          {\r\n            \"name\": \"entrants\",\r\n            \"type\": \"publicKey\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"entrants\",\r\n      \"type\": {\r\n        \"kind\": \"struct\",\r\n        \"fields\": [\r\n          {\r\n            \"name\": \"total\",\r\n            \"type\": \"u32\"\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"type\": \"u32\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"errors\": [\r\n    {\r\n      \"code\": 6000,\r\n      \"name\": \"MaxEntrantsTooLarge\",\r\n      \"msg\": \"Max entrants is too large\"\r\n    },\r\n    {\r\n      \"code\": 6001,\r\n      \"name\": \"RaffleEnded\",\r\n      \"msg\": \"Raffle has ended\"\r\n    },\r\n    {\r\n      \"code\": 6002,\r\n      \"name\": \"InvalidPrizeIndex\",\r\n      \"msg\": \"Invalid prize index\"\r\n    },\r\n    {\r\n      \"code\": 6003,\r\n      \"name\": \"NoPrize\",\r\n      \"msg\": \"No prize\"\r\n    },\r\n    {\r\n      \"code\": 6004,\r\n      \"name\": \"InvalidCalculation\",\r\n      \"msg\": \"Invalid calculation\"\r\n    },\r\n    {\r\n      \"code\": 6005,\r\n      \"name\": \"NotEnoughTicketsLeft\",\r\n      \"msg\": \"Not enough tickets left\"\r\n    },\r\n    {\r\n      \"code\": 6006,\r\n      \"name\": \"RaffleStillRunning\",\r\n      \"msg\": \"Raffle is still running\"\r\n    },\r\n    {\r\n      \"code\": 6007,\r\n      \"name\": \"WinnersAlreadyDrawn\",\r\n      \"msg\": \"Winner already drawn\"\r\n    },\r\n    {\r\n      \"code\": 6008,\r\n      \"name\": \"WinnerNotDrawn\",\r\n      \"msg\": \"Winner not drawn\"\r\n    },\r\n    {\r\n      \"code\": 6009,\r\n      \"name\": \"InvalidRevealedData\",\r\n      \"msg\": \"Invalid revealed data\"\r\n    },\r\n    {\r\n      \"code\": 6010,\r\n      \"name\": \"TokenAccountNotOwnedByWinner\",\r\n      \"msg\": \"Ticket account not owned by winner\"\r\n    },\r\n    {\r\n      \"code\": 6011,\r\n      \"name\": \"TicketHasNotWon\",\r\n      \"msg\": \"Ticket has not won\"\r\n    },\r\n    {\r\n      \"code\": 6012,\r\n      \"name\": \"UnclaimedPrizes\",\r\n      \"msg\": \"Unclaimed prizes\"\r\n    },\r\n    {\r\n      \"code\": 6013,\r\n      \"name\": \"InvalidRecentBlockhashes\",\r\n      \"msg\": \"Invalid recent blockhashes\"\r\n    },\r\n    {\r\n      \"code\": 6014,\r\n      \"name\": \"OnlyCreatorCanClaimNoEntrantRafflePrizes\",\r\n      \"msg\": \"Only the creator can calin no entrant raffle prizes\"\r\n    },\r\n    {\r\n      \"code\": 6015,\r\n      \"name\": \"InvalidTreasuryTokenAccountOwner\",\r\n      \"msg\": \"Invalid treasury token account owner\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport const IDL: Draffle = {\r\n  \"version\": \"0.1.0\",\r\n  \"name\": \"draffle\",\r\n  \"instructions\": [\r\n    {\r\n      \"name\": \"createRaffle\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"entrants\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"creator\",\r\n          \"isMut\": true,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"proceeds\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"proceedsMint\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"systemProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"rent\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"endTimestamp\",\r\n          \"type\": \"i64\"\r\n        },\r\n        {\r\n          \"name\": \"ticketPrice\",\r\n          \"type\": \"u64\"\r\n        },\r\n        {\r\n          \"name\": \"maxEntrants\",\r\n          \"type\": \"u32\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"addPrize\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"creator\",\r\n          \"isMut\": true,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"from\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"prize\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"prizeMint\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"systemProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"rent\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"prizeIndex\",\r\n          \"type\": \"u32\"\r\n        },\r\n        {\r\n          \"name\": \"amount\",\r\n          \"type\": \"u64\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"buyTickets\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"entrants\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"proceeds\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"buyerTokenAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"buyerTransferAuthority\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"amount\",\r\n          \"type\": \"u32\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"revealWinners\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"recentBlockhashes\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": []\r\n    },\r\n    {\r\n      \"name\": \"claimPrize\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"entrants\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"prize\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"winnerTokenAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"prizeIndex\",\r\n          \"type\": \"u32\"\r\n        },\r\n        {\r\n          \"name\": \"ticketIndex\",\r\n          \"type\": \"u32\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"collectProceeds\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"proceeds\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"creator\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"creatorProceeds\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": []\r\n    },\r\n    {\r\n      \"name\": \"closeEntrants\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"raffle\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"entrants\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"creator\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        }\r\n      ],\r\n      \"args\": []\r\n    }\r\n  ],\r\n  \"accounts\": [\r\n    {\r\n      \"name\": \"raffle\",\r\n      \"type\": {\r\n        \"kind\": \"struct\",\r\n        \"fields\": [\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"totalPrizes\",\r\n            \"type\": \"u32\"\r\n          },\r\n          {\r\n            \"name\": \"claimedPrizes\",\r\n            \"type\": \"u32\"\r\n          },\r\n          {\r\n            \"name\": \"randomness\",\r\n            \"type\": {\r\n              \"option\": {\r\n                \"array\": [\r\n                  \"u8\",\r\n                  32\r\n                ]\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"endTimestamp\",\r\n            \"type\": \"i64\"\r\n          },\r\n          {\r\n            \"name\": \"ticketPrice\",\r\n            \"type\": \"u64\"\r\n          },\r\n          {\r\n            \"name\": \"entrants\",\r\n            \"type\": \"publicKey\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"entrants\",\r\n      \"type\": {\r\n        \"kind\": \"struct\",\r\n        \"fields\": [\r\n          {\r\n            \"name\": \"total\",\r\n            \"type\": \"u32\"\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"type\": \"u32\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"errors\": [\r\n    {\r\n      \"code\": 6000,\r\n      \"name\": \"MaxEntrantsTooLarge\",\r\n      \"msg\": \"Max entrants is too large\"\r\n    },\r\n    {\r\n      \"code\": 6001,\r\n      \"name\": \"RaffleEnded\",\r\n      \"msg\": \"Raffle has ended\"\r\n    },\r\n    {\r\n      \"code\": 6002,\r\n      \"name\": \"InvalidPrizeIndex\",\r\n      \"msg\": \"Invalid prize index\"\r\n    },\r\n    {\r\n      \"code\": 6003,\r\n      \"name\": \"NoPrize\",\r\n      \"msg\": \"No prize\"\r\n    },\r\n    {\r\n      \"code\": 6004,\r\n      \"name\": \"InvalidCalculation\",\r\n      \"msg\": \"Invalid calculation\"\r\n    },\r\n    {\r\n      \"code\": 6005,\r\n      \"name\": \"NotEnoughTicketsLeft\",\r\n      \"msg\": \"Not enough tickets left\"\r\n    },\r\n    {\r\n      \"code\": 6006,\r\n      \"name\": \"RaffleStillRunning\",\r\n      \"msg\": \"Raffle is still running\"\r\n    },\r\n    {\r\n      \"code\": 6007,\r\n      \"name\": \"WinnersAlreadyDrawn\",\r\n      \"msg\": \"Winner already drawn\"\r\n    },\r\n    {\r\n      \"code\": 6008,\r\n      \"name\": \"WinnerNotDrawn\",\r\n      \"msg\": \"Winner not drawn\"\r\n    },\r\n    {\r\n      \"code\": 6009,\r\n      \"name\": \"InvalidRevealedData\",\r\n      \"msg\": \"Invalid revealed data\"\r\n    },\r\n    {\r\n      \"code\": 6010,\r\n      \"name\": \"TokenAccountNotOwnedByWinner\",\r\n      \"msg\": \"Ticket account not owned by winner\"\r\n    },\r\n    {\r\n      \"code\": 6011,\r\n      \"name\": \"TicketHasNotWon\",\r\n      \"msg\": \"Ticket has not won\"\r\n    },\r\n    {\r\n      \"code\": 6012,\r\n      \"name\": \"UnclaimedPrizes\",\r\n      \"msg\": \"Unclaimed prizes\"\r\n    },\r\n    {\r\n      \"code\": 6013,\r\n      \"name\": \"InvalidRecentBlockhashes\",\r\n      \"msg\": \"Invalid recent blockhashes\"\r\n    },\r\n    {\r\n      \"code\": 6014,\r\n      \"name\": \"OnlyCreatorCanClaimNoEntrantRafflePrizes\",\r\n      \"msg\": \"Only the creator can calin no entrant raffle prizes\"\r\n    },\r\n    {\r\n      \"code\": 6015,\r\n      \"name\": \"InvalidTreasuryTokenAccountOwner\",\r\n      \"msg\": \"Invalid treasury token account owner\"\r\n    }\r\n  ]\r\n};\r\n","export type Dispenser = {\r\n  \"version\": \"0.1.0\",\r\n  \"name\": \"dispenser\",\r\n  \"instructions\": [\r\n    {\r\n      \"name\": \"createRegistry\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": true,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenIn\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenOut\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"admin\",\r\n          \"isMut\": true,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"mintTokenIn\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"mintTokenOut\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"systemProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"rent\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"rateTokenIn\",\r\n          \"type\": \"u64\"\r\n        },\r\n        {\r\n          \"name\": \"rateTokenOut\",\r\n          \"type\": \"u64\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"updateRegistry\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"admin\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"rateTokenIn\",\r\n          \"type\": \"u64\"\r\n        },\r\n        {\r\n          \"name\": \"rateTokenOut\",\r\n          \"type\": \"u64\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"swap\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"swapper\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenIn\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenOut\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"buyerTokenInAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"buyerTokenOutAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"amountRequested\",\r\n          \"type\": \"u64\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"collectProceeds\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"admin\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenIn\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"adminProceedsAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": []\r\n    },\r\n    {\r\n      \"name\": \"collectReserve\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenOut\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"admin\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"adminReserveAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": []\r\n    }\r\n  ],\r\n  \"accounts\": [\r\n    {\r\n      \"name\": \"registry\",\r\n      \"type\": {\r\n        \"kind\": \"struct\",\r\n        \"fields\": [\r\n          {\r\n            \"name\": \"admin\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"vaultTokenIn\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"vaultTokenOut\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"rateTokenIn\",\r\n            \"type\": \"u64\"\r\n          },\r\n          {\r\n            \"name\": \"rateTokenOut\",\r\n            \"type\": \"u64\"\r\n          },\r\n          {\r\n            \"name\": \"mintTokenIn\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"mintTokenOut\",\r\n            \"type\": \"publicKey\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"errors\": [\r\n    {\r\n      \"code\": 6000,\r\n      \"name\": \"InsufficientUserFunds\",\r\n      \"msg\": \"Insufficient user funds\"\r\n    },\r\n    {\r\n      \"code\": 6001,\r\n      \"name\": \"InsufficientVaultFunds\",\r\n      \"msg\": \"Insufficient vault funds\"\r\n    },\r\n    {\r\n      \"code\": 6002,\r\n      \"name\": \"InvalidCalculation\",\r\n      \"msg\": \"Invalid calculation\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport const IDL: Dispenser = {\r\n  \"version\": \"0.1.0\",\r\n  \"name\": \"dispenser\",\r\n  \"instructions\": [\r\n    {\r\n      \"name\": \"createRegistry\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": true,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenIn\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenOut\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"admin\",\r\n          \"isMut\": true,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"mintTokenIn\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"mintTokenOut\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"systemProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"rent\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"rateTokenIn\",\r\n          \"type\": \"u64\"\r\n        },\r\n        {\r\n          \"name\": \"rateTokenOut\",\r\n          \"type\": \"u64\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"updateRegistry\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"admin\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"rateTokenIn\",\r\n          \"type\": \"u64\"\r\n        },\r\n        {\r\n          \"name\": \"rateTokenOut\",\r\n          \"type\": \"u64\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"swap\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"swapper\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenIn\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenOut\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"buyerTokenInAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"buyerTokenOutAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": [\r\n        {\r\n          \"name\": \"amountRequested\",\r\n          \"type\": \"u64\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"collectProceeds\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"admin\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenIn\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"adminProceedsAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": []\r\n    },\r\n    {\r\n      \"name\": \"collectReserve\",\r\n      \"accounts\": [\r\n        {\r\n          \"name\": \"registry\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"vaultTokenOut\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"admin\",\r\n          \"isMut\": false,\r\n          \"isSigner\": true\r\n        },\r\n        {\r\n          \"name\": \"adminReserveAccount\",\r\n          \"isMut\": true,\r\n          \"isSigner\": false\r\n        },\r\n        {\r\n          \"name\": \"tokenProgram\",\r\n          \"isMut\": false,\r\n          \"isSigner\": false\r\n        }\r\n      ],\r\n      \"args\": []\r\n    }\r\n  ],\r\n  \"accounts\": [\r\n    {\r\n      \"name\": \"registry\",\r\n      \"type\": {\r\n        \"kind\": \"struct\",\r\n        \"fields\": [\r\n          {\r\n            \"name\": \"admin\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"vaultTokenIn\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"vaultTokenOut\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"rateTokenIn\",\r\n            \"type\": \"u64\"\r\n          },\r\n          {\r\n            \"name\": \"rateTokenOut\",\r\n            \"type\": \"u64\"\r\n          },\r\n          {\r\n            \"name\": \"mintTokenIn\",\r\n            \"type\": \"publicKey\"\r\n          },\r\n          {\r\n            \"name\": \"mintTokenOut\",\r\n            \"type\": \"publicKey\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"errors\": [\r\n    {\r\n      \"code\": 6000,\r\n      \"name\": \"InsufficientUserFunds\",\r\n      \"msg\": \"Insufficient user funds\"\r\n    },\r\n    {\r\n      \"code\": 6001,\r\n      \"name\": \"InsufficientVaultFunds\",\r\n      \"msg\": \"Insufficient vault funds\"\r\n    },\r\n    {\r\n      \"code\": 6002,\r\n      \"name\": \"InvalidCalculation\",\r\n      \"msg\": \"Invalid calculation\"\r\n    }\r\n  ]\r\n};\r\n","import { createContext, FC, useMemo } from 'react';\r\nimport { AnchorProvider, IdlAccounts, Program } from '@project-serum/anchor';\r\nimport { useAnchorWallet, useConnection } from '@solana/wallet-adapter-react';\r\nimport { customProviderFactory } from '../lib/anchorUtils';\r\n\r\nimport { Draffle, IDL as DraffleIdl } from '../lib/idl/draffle';\r\nimport { Dispenser, IDL as DispenserIdl } from '../lib/idl/dispenser';\r\nimport { DISPENSER_PROGRAM_ID, DRAFFLE_PROGRAM_ID } from '../config/programIds';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport const ProgramApisContext = createContext<{\r\n  draffleClient: DraffleProgram;\r\n  dispenserClient: DispenserProgram;\r\n}>({} as any);\r\n\r\nexport type RaffleDataRaw = IdlAccounts<Draffle>['raffle'];\r\nexport type EntrantsDataRaw = IdlAccounts<Draffle>['entrants'];\r\nexport type EntrantsData = EntrantsDataRaw & {\r\n  entrants: PublicKey[];\r\n};\r\nexport type DraffleProgram = Omit<Program<Draffle>, 'provider'> & {\r\n  provider: AnchorProvider;\r\n};\r\n\r\nexport type DispenserRegistryRaw = IdlAccounts<Dispenser>['registry'];\r\nexport type DispenserProgram = Omit<Program<Dispenser>, 'provider'> & {\r\n  provider: AnchorProvider;\r\n};\r\n\r\nconst ProgramApisProvider: FC = ({ children }) => {\r\n  const { connection } = useConnection();\r\n  const anchorWallet = useAnchorWallet();\r\n\r\n  // TODO: Customize type to allow access of publicKey\r\n  const customProvider = useMemo(\r\n    () => customProviderFactory(connection, anchorWallet),\r\n    [connection, anchorWallet]\r\n  );\r\n\r\n  const { draffleClient } = useMemo(() => {\r\n    const draffleClient = new Program<Draffle>(\r\n      DraffleIdl,\r\n      DRAFFLE_PROGRAM_ID,\r\n      customProvider\r\n    ) as unknown as DraffleProgram;\r\n    return { draffleClient };\r\n  }, [customProvider]);\r\n\r\n  const { dispenserClient } = useMemo(() => {\r\n    const dispenserClient = new Program<Dispenser>(\r\n      DispenserIdl,\r\n      DISPENSER_PROGRAM_ID,\r\n      customProvider\r\n    ) as unknown as DispenserProgram;\r\n    return { dispenserClient };\r\n  }, [customProvider]);\r\n\r\n  return (\r\n    <ProgramApisContext.Provider value={{ draffleClient, dispenserClient }}>\r\n      {children}\r\n    </ProgramApisContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProgramApisProvider;\r\n","import { useContext } from 'react';\r\nimport { ProgramApisContext } from '../providers/ProgramApisProvider';\r\n\r\nexport const useProgramApis = () => {\r\n  const context = useContext(ProgramApisContext);\r\n  if (context === undefined) {\r\n    throw new Error('useProgramApis must be used within a ProgramApisProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { PublicKey } from '@solana/web3.js';\r\nimport { RaffleMetaData } from '../lib/types';\r\nimport { TESTING } from './misc';\r\n\r\nconst testWhitelist = new Map<string, RaffleMetaData>([\r\n  [\r\n    'DSFVtfeyBsYf3YwrMEGmL4ch8gtxRjorS8YFYMJb3D4X',\r\n    {\r\n      name: 'SUPERPALS TO THE MOON',\r\n      overviewImageUri: '/superpals2.png',\r\n    },\r\n  ]\r\n  // [\r\n  //   '36t14CtqKxQvtEuAg42D9WPZtVNHDWFkNAPd8h3U2txT',\r\n  //   { name: 'dRaffle with a loooooooooooooooong name' },\r\n  // ],\r\n  // [\r\n  //   '6scsG1BuD1GhAYgHCbzKLqvgMJjijzWTAgGmj9mhBwFz',\r\n  //   {\r\n  //     name: 'Oh my dRaffle',\r\n  //     overviewImageUri: '/resources/001-mainnet-launch.gif',\r\n  //     alternatePurchaseMints: [\r\n  //       new PublicKey('So11111111111111111111111111111111111111112'),\r\n  //     ],\r\n  //   },\r\n  // ],\r\n]);\r\n\r\nconst prodWhitelist = new Map<string, RaffleMetaData>([\r\n  [\r\n    'HbtC92raEGnzUWncfGMymuDkxtzKityEpUgGGxpn5YaA',\r\n    {\r\n      name: 'Custom Superpal!',\r\n      overviewImageUri: '/resources/Custompal1.png',\r\n    },\r\n  ]\r\n\r\n]);\r\n\r\nexport const RAFFLES_WHITELIST = TESTING ? testWhitelist : prodWhitelist;","import React, {\r\n  createContext,\r\n  FC,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { ProgramAccount } from '@project-serum/anchor';\r\nimport { Connection, PublicKey } from '@solana/web3.js';\r\n\r\nimport {\r\n  DraffleProgram,\r\n  EntrantsData,\r\n  RaffleDataRaw,\r\n} from './ProgramApisProvider';\r\nimport { useProgramApis } from '../hooks/useProgramApis';\r\nimport { Entrant, Raffle, RaffleMetaData } from '../lib/types';\r\nimport {\r\n  deserializeEntrantsData,\r\n  fetchPrizes,\r\n  fetchProceedsAccount,\r\n  getRaffleProgramAccounts,\r\n  toEntrantsProcessed,\r\n} from '../lib/store';\r\nimport { cloneDeep } from 'lodash';\r\nimport { areEqualObjects } from '../lib/utils';\r\nimport { useConnection } from '@solana/wallet-adapter-react';\r\nimport { RAFFLES_WHITELIST } from '../config/raffleWhitelist';\r\n\r\nexport interface RafflesStore {\r\n  raffles: Map<string, Raffle>;\r\n  fetchAllRaffles: (includeEmpty?: boolean) => void;\r\n  updateRaffleById: (raffleId: string) => void;\r\n  fetching: boolean;\r\n}\r\n\r\nconst getAssociatedRaffleData = async (\r\n  raffleRaw: ProgramAccount<RaffleDataRaw>,\r\n  raffleMetaData: RaffleMetaData,\r\n  draffleClient: DraffleProgram,\r\n  connection: Connection,\r\n  entrantsData?: EntrantsData\r\n): Promise<Raffle> => {\r\n  const proceedsAccount = await fetchProceedsAccount(\r\n    raffleRaw.publicKey,\r\n    draffleClient,\r\n    connection\r\n  );\r\n  let entrants = new Map<string, Entrant>();\r\n  if (!entrantsData) {\r\n    try {\r\n      const entrantsAccountInfo = await connection.getAccountInfo(\r\n        raffleRaw.account.entrants\r\n      );\r\n      if (!entrantsAccountInfo)\r\n        throw new Error('Cannot find entrants account info');\r\n      entrantsData = deserializeEntrantsData(\r\n        draffleClient,\r\n        entrantsAccountInfo.data\r\n      );\r\n    } catch {\r\n      // TODO: Merge ended raffle data stored off-chain here\r\n      console.log(`Raffle ${raffleRaw.publicKey} entrants account is closed`);\r\n\r\n      entrantsData = {\r\n        max: 0,\r\n        total: 0,\r\n        entrants: [],\r\n      };\r\n    }\r\n  }\r\n\r\n  entrants = toEntrantsProcessed(entrantsData);\r\n\r\n  const prizes = await fetchPrizes(\r\n    raffleRaw.publicKey,\r\n    draffleClient,\r\n    raffleRaw.account.totalPrizes\r\n  );\r\n\r\n  const endTimestamp = new Date(\r\n    raffleRaw.account.endTimestamp.toNumber() * 1000\r\n  );\r\n\r\n  return {\r\n    publicKey: raffleRaw.publicKey,\r\n    metadata: raffleMetaData,\r\n    endTimestamp,\r\n    entrantsCap: entrantsData.max,\r\n    entrants,\r\n    entrantsRaw: entrantsData.entrants,\r\n    totalTickets: entrantsData.total,\r\n    entrantsAccountAddress: raffleRaw.account.entrants,\r\n    randomness: raffleRaw.account.randomness as number[],\r\n    prizes,\r\n    proceeds: {\r\n      address: proceedsAccount.address,\r\n      ticketPrice: raffleRaw.account.ticketPrice,\r\n      mint: proceedsAccount.mintInfo,\r\n    },\r\n    isEnded: endTimestamp < new Date(),\r\n  };\r\n};\r\n\r\nexport const RafflesStoreContext = createContext<RafflesStore>({} as any);\r\n\r\nconst RafflesStoreProvider: FC = ({ children = null as any }) => {\r\n  const { connection } = useConnection();\r\n  const { draffleClient } = useProgramApis();\r\n\r\n  const [fetching, setFetching] = useState<boolean>(true); // prevents messy first render, but probably not optimal\r\n  const [raffles, setRaffles] = useState<Map<string, Raffle>>(\r\n    new Map<string, Raffle>()\r\n  );\r\n\r\n  const fetchAllRaffles = useCallback(\r\n    async (includeEmpty: boolean = false) => {\r\n      setFetching(true);\r\n      try {\r\n        let { raffleDataRawProgramAccounts, entrantsDataProgramAccounts } =\r\n          await getRaffleProgramAccounts(draffleClient);\r\n        raffleDataRawProgramAccounts = raffleDataRawProgramAccounts.filter(\r\n          ({ publicKey }) =>\r\n            includeEmpty || RAFFLES_WHITELIST.has(publicKey.toBase58())\r\n        );\r\n\r\n        const newRaffles = (\r\n          await Promise.all(\r\n            raffleDataRawProgramAccounts.map(async (raffleRaw) =>\r\n              getAssociatedRaffleData(\r\n                raffleRaw,\r\n                RAFFLES_WHITELIST.get(raffleRaw.publicKey.toString()) || {\r\n                  name: 'Unnamed Raffle',\r\n                  alternatePurchaseMints: [],\r\n                },\r\n                draffleClient,\r\n                connection,\r\n                entrantsDataProgramAccounts.find(({ publicKey }) =>\r\n                  publicKey.equals(raffleRaw.account.entrants)\r\n                )?.account\r\n              )\r\n            )\r\n          )\r\n        ).reduce<Map<string, Raffle>>((acc, raffle) => {\r\n          acc.set(raffle.publicKey.toString(), raffle);\r\n          return acc;\r\n        }, new Map<string, Raffle>());\r\n        setRaffles(newRaffles);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n\r\n      setFetching(false);\r\n    },\r\n    [connection, draffleClient]\r\n  );\r\n\r\n  const updateRaffleById = useCallback(\r\n    async (raffleId: string) => {\r\n      if (!raffles.has(raffleId.toString()) || !RAFFLES_WHITELIST.has(raffleId))\r\n        return;\r\n      setFetching(true);\r\n      const updatedRaffleRaw = await draffleClient.account.raffle.fetch(\r\n        new PublicKey(raffleId)\r\n      );\r\n      const updatedRaffle = await getAssociatedRaffleData(\r\n        { publicKey: new PublicKey(raffleId), account: updatedRaffleRaw },\r\n        RAFFLES_WHITELIST.get(raffleId)!,\r\n        draffleClient,\r\n        connection\r\n      );\r\n      if (!areEqualObjects(raffles.get(raffleId.toString()), updatedRaffle)) {\r\n        setRaffles((currentRaffles) => {\r\n          let newRaffles = cloneDeep(currentRaffles);\r\n          newRaffles = newRaffles.set(raffleId, updatedRaffle);\r\n          return newRaffles;\r\n        });\r\n      }\r\n      setFetching(false);\r\n    },\r\n    [connection, draffleClient, raffles, setRaffles]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchAllRaffles();\r\n  }, [fetchAllRaffles]);\r\n\r\n  return (\r\n    <RafflesStoreContext.Provider\r\n      value={{\r\n        raffles,\r\n        fetchAllRaffles,\r\n        updateRaffleById,\r\n        fetching,\r\n      }}\r\n    >\r\n      {children}\r\n    </RafflesStoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RafflesStoreProvider;\r\n","import { useContext } from 'react';\r\n\r\nimport { RafflesStoreContext } from '../providers/RafflesStoreProvider';\r\n\r\nexport const useRafflesStore = () => {\r\n  const context = useContext(RafflesStoreContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      'useRafflesStore must be used within an RafflesStoreProvider'\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  background: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    background: 'rgba(255,255,255,0)',\r\n      // 'linear-gradient(0deg, rgba(101,137,235,0.32) 0%, rgba(214,121,83,0.32) 100%, rgba(101,137,235,0.32) 100%);',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    position: 'fixed',\r\n  },\r\n  content: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n","import React, { FC } from 'react';\r\n\r\nimport { useStyles } from './styles';\r\n\r\nexport interface BaseProps {}\r\n\r\nexport const Base: FC<BaseProps> = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.background}></div>\r\n      <div className={classes.content}>{children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Base;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DeviceType } from '../../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      paddingTop: device === DeviceType.Phone ? '20px' : '50px',\r\n    }),\r\n  })\r\n);\r\n","import { Box, Container } from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\nimport { useViewport } from '../../../hooks/useViewport';\r\n\r\nimport { useStyles } from './styles';\r\n\r\nexport interface BodyProps {}\r\n\r\nexport const Body: FC<BodyProps> = ({ children }) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  return (\r\n    <Container\r\n      style={{\r\n        width: '90%',\r\n        padding: '0 10px',\r\n        display: ' flex',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Box className={classes.root}>{children}</Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      width: '100%',\r\n      height: device === DeviceType.Phone ? '50px' : '90px',\r\n    }),\r\n    drawerHeader: () => ({\r\n      width: '100%',\r\n      height: '50px',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      padding: theme.spacing(0, 1),\r\n    }),\r\n    appBar: ({ device }) => ({\r\n      height: device === DeviceType.Phone ? '50px' : '90px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      backgroundColor: 'rgba(38,166,203,0.98)',\r\n      // backgroundImage: 'app\\src\\assets\\superpals4.png'\r\n      alignItems: 'center',\r\n      boxShadow: '0 0 10px 0 #000',\r\n      zIndex: 99,\r\n    }),\r\n    navContainer: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      marginRight: '30px',\r\n    },\r\n    homeButton: () => ({\r\n      marginLeft: '30px',\r\n      color: theme.palette.primary.dark,\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    }),\r\n    navButtons: {\r\n      marginLeft: '30px',\r\n      color: theme.palette.primary.main,\r\n      '&:hover': {\r\n        textShadow: '0px 0px 5px #e86bff',\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n    homeButtonIcon: {\r\n      height: '90px',\r\n      color: theme.palette.primary.main,\r\n    },\r\n    walletButtonContainer: {\r\n      marginLeft: '20px',\r\n    },\r\n    currentLocation: {\r\n      color: 'black',\r\n    },\r\n  })\r\n);\r\n","import { ASSOCIATED_TOKEN_PROGRAM_ID, Token, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\r\nimport { Connection, Keypair, PublicKey, SystemProgram, Transaction, TransactionInstruction } from \"@solana/web3.js\";\r\n\r\nconst DT_MINT = new PublicKey(\"9trrzs6d1ry6C58SWbT2L2CJKnmDKCrh9cR9qMAxfm4i\");\r\nconst AIRDROPPER_KEYPAIR = Keypair.fromSecretKey(\r\n  new Uint8Array(JSON.parse(process.env.REACT_APP_AIRDROPPER_KEYPAIR as string))\r\n);\r\n\r\nexport const airdrop = async (connection: Connection, user: PublicKey) => {\r\n  const aidropperATA = await Token.getAssociatedTokenAddress(\r\n    ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    TOKEN_PROGRAM_ID,\r\n    DT_MINT,\r\n    AIRDROPPER_KEYPAIR.publicKey\r\n  );\r\n\r\n  const userATA = await Token.getAssociatedTokenAddress(\r\n    ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    TOKEN_PROGRAM_ID,\r\n    DT_MINT,\r\n    user\r\n  );\r\n\r\n  let instructions: TransactionInstruction[] = [];\r\n  const info = await connection.getAccountInfo(userATA);\r\n  if (info === null) {\r\n    instructions.push(\r\n      Token.createAssociatedTokenAccountInstruction(\r\n        ASSOCIATED_TOKEN_PROGRAM_ID,\r\n        TOKEN_PROGRAM_ID,\r\n        DT_MINT,\r\n        userATA,\r\n        user,\r\n        AIRDROPPER_KEYPAIR.publicKey\r\n      ),\r\n    );\r\n  }\r\n  instructions.push(\r\n    Token.createTransferInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      aidropperATA,\r\n      userATA,\r\n      AIRDROPPER_KEYPAIR.publicKey,\r\n      [],\r\n      3_000_000,\r\n    )\r\n  )\r\n  instructions.push(\r\n    SystemProgram.transfer({\r\n      fromPubkey: AIRDROPPER_KEYPAIR.publicKey,\r\n      toPubkey: user,\r\n      lamports: 500_000_000\r\n    })\r\n  )\r\n\r\n  const tx = new Transaction({feePayer: AIRDROPPER_KEYPAIR.publicKey});\r\n  tx.add(...instructions);\r\n  await connection.sendTransaction(tx, [AIRDROPPER_KEYPAIR]);\r\n};\r\n","import { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { LocalAirport } from \"@material-ui/icons\";\r\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { FC, useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { airdrop } from \"../../lib/utils/airdrop\";\r\n\r\n\r\nconst AirdropButton: FC = () => {\r\n  const { connection } = useConnection();\r\n  const { publicKey } = useWallet();\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  return <Tooltip title=\"Aidrop for testing\">\r\n      <IconButton\r\n        onClick={async () => {\r\n          if (!publicKey) return;\r\n          setLoading(true);\r\n          await airdrop(connection, publicKey);\r\n          setLoading(false);\r\n          toast.success('Aidropped some SOL and some DT');\r\n        }}\r\n        disabled={loading}\r\n      >\r\n        <LocalAirport />\r\n      </IconButton>\r\n    </Tooltip>;\r\n};\r\n\r\nexport default AirdropButton;","import { Theme, alpha } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles<Theme>((theme: Theme) => ({\r\n  walletConnectButton: {\r\n    width: '100%',\r\n    backgroundColor: 'transparent',\r\n    borderColor: theme.palette.common.white,\r\n    boxShadow: '0 0 5px 2px #FF9455, inset 0 0 10px 0px #FF9455',\r\n    color: theme.palette.common.white,\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.2),\r\n      borderColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  walletDisconnectButton: {\r\n    width: '100%',\r\n    backgroundColor: 'transparent',\r\n    borderColor: theme.palette.common.white,\r\n    boxShadow: `0 0 5px 2px ${theme.palette.secondary.main}, inset 0 0 10px 0px ${theme.palette.secondary.main}`,\r\n    color: theme.palette.common.white,\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.secondary.main, 0.2),\r\n      borderColor: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n","import React, { FC } from 'react';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport { useStyles } from './styles';\r\n\r\nconst WalletButton: FC = () => {\r\n  const classes = useStyles();\r\n  const { connected } = useWallet();\r\n\r\n  return (\r\n    <WalletMultiButton\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n      className={\r\n        connected ? classes.walletDisconnectButton : classes.walletConnectButton\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default WalletButton;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles<Theme>((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    backgroundColor: 'rgba(57,9,74,1)',\r\n  },\r\n  drawerHeader: {\r\n    marginLeft: '10px',\r\n    height: '50px',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n  },\r\n  drawerContent: {\r\n    width: '100vw',\r\n    marginTop: '20px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  walletButtonContainer: {\r\n    width: '76%',\r\n    maxWidth: '245px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  navButtonsContainer: {\r\n    width: '100%',\r\n    marginTop: '30px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles, darken } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles<Theme, { isCurrent: boolean }>(\r\n  (theme: Theme) => ({\r\n    navButtons: ({ isCurrent }) => ({\r\n      fontSize: '16px',\r\n      color: isCurrent\r\n        ? darken(theme.palette.secondary.main, 0.1)\r\n        : theme.palette.primary.main,\r\n      '&:hover': {\r\n        textShadow: '0px 0px 5px #e86bff',\r\n        backgroundColor: 'transparent',\r\n      },\r\n    }),\r\n  })\r\n);\r\n","import React, { FC } from 'react';\r\nimport { Button, ButtonProps } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { useStyles } from './styles';\r\n\r\nexport interface NavButtonProps extends ButtonProps {\r\n  label: string;\r\n  target: string;\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  size?: 'medium' | 'large' | 'small' | undefined;\r\n  isCurrent?: boolean;\r\n}\r\n\r\nconst NavButton: FC<NavButtonProps> = ({\r\n  label,\r\n  target,\r\n  onClick,\r\n  size,\r\n  isCurrent = false,\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  const classes = useStyles({ isCurrent });\r\n  const { push } = useHistory();\r\n\r\n  return (\r\n    <Button\r\n      onClick={(event) => {\r\n        push(target);\r\n        if (onClick) onClick(event);\r\n      }}\r\n      variant=\"text\"\r\n      disableRipple\r\n      size={size}\r\n      className={`${classes.navButtons} ${className}`}\r\n      {...otherProps}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default NavButton;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { Route, RouteProps, useHistory } from 'react-router';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nimport { ADMIN_ACCOUNTS } from '../../config/accounts';\r\nimport { routes } from '../../router/routes';\r\n\r\nexport const isAdmin = (publicKey: PublicKey | null) =>\r\n  publicKey && ADMIN_ACCOUNTS.includes(publicKey.toBase58());\r\n\r\nconst AdminRoute: FC<RouteProps> = (props) => {\r\n  const { publicKey, disconnect } = useWallet();\r\n  const {\r\n    push,\r\n    location: { pathname },\r\n  } = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (!!publicKey && !isAdmin(publicKey)) ||\r\n      (!publicKey && pathname !== routes.HOME)\r\n    ) {\r\n      disconnect();\r\n      push(routes.HOME);\r\n    }\r\n  }, [publicKey, pathname, disconnect, push]);\r\n  return <Route {...props} />;\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React, { FC } from 'react';\r\nimport { IconButton, SwipeableDrawer } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\n\r\nimport WalletButton from '../WalletButton';\r\nimport { useStyles } from './styles';\r\nimport NavButton from '../NavButton';\r\nimport { useLocation } from 'react-router';\r\nimport { isAdmin } from '../../AdminRoute';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport interface DrawerProps {\r\n  wallet: PublicKey | null;\r\n  isOpen: boolean;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  navLinksList: { label: string; target: string; admin?: boolean }[];\r\n}\r\n\r\nconst Drawer: FC<DrawerProps> = ({\r\n  wallet,\r\n  isOpen,\r\n  setIsOpen,\r\n  navLinksList,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor={'left'}\r\n      className={classes.root}\r\n      classes={{ paper: classes.paper }}\r\n      open={isOpen}\r\n      onClose={() => setIsOpen(false)}\r\n      onOpen={() => setIsOpen(true)}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton size={'medium'} onClick={() => setIsOpen(false)}>\r\n          <Close />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.drawerContent}>\r\n        <div className={classes.walletButtonContainer}>\r\n          <WalletButton />\r\n        </div>\r\n        <div className={classes.navButtonsContainer}>\r\n          {navLinksList\r\n            .filter(({ admin }) => !admin || (admin && isAdmin(wallet)))\r\n            .map((navLink) => (\r\n              <NavButton\r\n                label={navLink.label}\r\n                target={navLink.target}\r\n                onClick={() => setIsOpen(false)}\r\n                isCurrent={navLink.target === pathname}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nexport default Drawer;\r\n","import React, { FC, useState } from 'react';\r\nimport { AppBar, IconButton } from '@material-ui/core';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { ChevronLeft, Home } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useStyles } from './styles';\r\nimport { routes } from '../../../router/routes';\r\nimport AirdropButton from '../../AirdropButton';\r\nimport { useViewport } from '../../../hooks/useViewport';\r\nimport { DeviceType } from '../../../providers/ViewportProvider';\r\nimport Drawer from '../Drawer';\r\nimport WalletButton from '../WalletButton';\r\nimport NavButton from '../NavButton';\r\nimport { TESTING } from '../../../config/misc';\r\nimport { isAdmin } from '../../AdminRoute';\r\n\r\nexport interface HeaderProps {\r\n  onBackNavigation?: () => void;\r\n}\r\n\r\nconst NAV_LINKS_LIST = [\r\n  { label: 'Home', target: routes.HOME },\r\n  { label: 'Raffles', target: routes.RAFFLES },\r\n  {label: 'About Us', target: routes.ABOUT},\r\n  // { label: 'Stake', target: routes.STAKE },\r\n  // { label: 'Tools', target: routes.TOOLS },\r\n  { label: 'Admin Panel', target: routes.ADMIN.HOME, admin: true },\r\n];\r\n\r\nconst Header: FC<HeaderProps> = ({ onBackNavigation }) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const { connected, publicKey } = useWallet();\r\n  const { push, location } = useHistory();\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: device === DeviceType.Phone ? '50px' : '90px',\r\n          background:\r\n            'linear-gradient(0deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2))',\r\n          backdropFilter: 'blur(3px)',\r\n          zIndex: 98,\r\n        }}\r\n      />\r\n      <AppBar className={classes.appBar} elevation={0}>\r\n        {device === DeviceType.Phone ? (\r\n          <div className={classes.drawerHeader}>\r\n            {onBackNavigation ? (\r\n              <IconButton size={'medium'} onClick={() => onBackNavigation()}>\r\n                <ChevronLeft />\r\n              </IconButton>\r\n            ) : (\r\n              <IconButton size={'medium'} onClick={() => push(routes.HOME)}>\r\n                <Home />\r\n              </IconButton>\r\n            )}\r\n            <IconButton size={'medium'} onClick={() => setIsDrawerOpen(true)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Drawer\r\n              wallet={publicKey}\r\n              isOpen={isDrawerOpen}\r\n              setIsOpen={setIsDrawerOpen}\r\n              navLinksList={NAV_LINKS_LIST}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <IconButton\r\n                onClick={() => push(routes.HOME)}\r\n                className={classes.homeButton}\r\n              >\r\n                <img\r\n                  src=\"/transplogosp.png\"\r\n                  alt={'Site banner'}\r\n                  className={classes.homeButtonIcon}\r\n                />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.navContainer}>\r\n              {NAV_LINKS_LIST.filter(\r\n                ({ admin }) => !admin || (admin && isAdmin(publicKey))\r\n              ).map(({ label, target }) => (\r\n                <NavButton\r\n                  key={target}\r\n                  label={label}\r\n                  target={target}\r\n                  isCurrent={location.pathname === target}\r\n                  style={{ marginRight: '20px' }}\r\n                />\r\n              ))}\r\n              {connected && TESTING && <AirdropButton />}\r\n              <div className={classes.walletButtonContainer}>\r\n                <WalletButton />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport Base from '../Base';\r\nimport Body from '../Body';\r\nimport Header from '../Header';\r\n\r\nexport interface ScreenProps {\r\n  onBackNavigation?: () => void;\r\n}\r\n\r\nexport const Screen: FC<ScreenProps> = ({ children, onBackNavigation }) => {\r\n  return (\r\n    <Base>\r\n      <Header onBackNavigation={onBackNavigation} />\r\n      <Body>{children}</Body>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Screen;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    filterBar: ({ device }) => ({\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: device === DeviceType.Phone ? 'column' : 'row',\r\n      alignItems: 'center',\r\n      marginBottom: '30px',\r\n      justifyContent: 'space-between',\r\n    }),\r\n    leftSection: {\r\n      width: '25%',\r\n    },\r\n    middleSection: {\r\n      width: '50%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    rightSection: {\r\n      width: '25%',\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n    },\r\n    leftPhoneSection: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    rightPhoneSection: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    ownRafflesSwitchContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      width: 200,\r\n      height: 30,\r\n      border: '2px solid #26a6cb',\r\n      borderRadius: '2px',\r\n      boxShadow: '0 0 5px 0 #11FED0',\r\n    },\r\n    showEndedRaffles: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    showEndedRafflesCheckbox: {\r\n      color: theme.palette.primary.main,\r\n      '&.Mui-checked': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n    hideEndedText: {\r\n      color: '#26a6cb',\r\n      backgroundColor: 'transparent',\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n  })\r\n);\r\n","import { FC } from 'react';\r\nimport { Button, Checkbox } from '@material-ui/core';\r\nimport SwitchSelector from 'react-switch-selector';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\n\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\ninterface FilterBarProps {\r\n  hideEndedRaffles: boolean;\r\n  setHideEndedRaffles: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setShowOwnRafflesOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst FilterBar: FC<FilterBarProps> = ({\r\n  hideEndedRaffles,\r\n  setHideEndedRaffles,\r\n  setShowOwnRafflesOnly,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const theme = useTheme();\r\n  const { connected } = useWallet();\r\n\r\n  const options = [\r\n    {\r\n      label: 'ALL',\r\n      value: false,\r\n    },\r\n    {\r\n      label: 'MINE',\r\n      value: true,\r\n    },\r\n  ];\r\n\r\n  const onOwnRafflesSwitchChange = (newValue: any) => {\r\n    setShowOwnRafflesOnly(newValue);\r\n  };\r\n\r\n  if (device === DeviceType.Phone)\r\n    return (\r\n      <div className={classes.filterBar}>\r\n        <div className={classes.leftPhoneSection}>\r\n          {connected && (\r\n            <div className={classes.ownRafflesSwitchContainer}>\r\n              <SwitchSelector\r\n                onChange={onOwnRafflesSwitchChange}\r\n                options={options}\r\n                optionBorderRadius={0}\r\n                wrapperBorderRadius={0}\r\n                fontSize={12}\r\n                initialSelectedIndex={0}\r\n                selectionIndicatorMargin={0}\r\n                selectedBackgroundColor={theme.palette.primary.main}\r\n                backgroundColor={'transparent'}\r\n                fontColor={'#26a6cb'}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={classes.rightPhoneSection}>\r\n          <div className={classes.showEndedRaffles}>\r\n            <Checkbox\r\n              className={classes.showEndedRafflesCheckbox}\r\n              value={hideEndedRaffles}\r\n              checked={hideEndedRaffles}\r\n              onClick={() =>\r\n                setHideEndedRaffles((currentValue) => !currentValue)\r\n              }\r\n            />\r\n            <Button\r\n              variant=\"text\"\r\n              disableRipple\r\n              className={classes.hideEndedText}\r\n              onClick={() =>\r\n                setHideEndedRaffles((currentValue) => !currentValue)\r\n              }\r\n            >\r\n              Hide ended raffles\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className={classes.filterBar}>\r\n      <div className={classes.leftSection}></div>\r\n      <div className={classes.middleSection}>\r\n        {connected && (\r\n          <div className={classes.ownRafflesSwitchContainer}>\r\n            <SwitchSelector\r\n              onChange={onOwnRafflesSwitchChange}\r\n              options={options}\r\n              optionBorderRadius={0}\r\n              wrapperBorderRadius={0}\r\n              fontSize={12}\r\n              initialSelectedIndex={0}\r\n              selectionIndicatorMargin={0}\r\n              selectedBackgroundColor={theme.palette.primary.main}\r\n              backgroundColor={'transparent'}\r\n              fontColor={'#26a6cb'}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={classes.rightSection}>\r\n        <div className={classes.showEndedRaffles}>\r\n          <Checkbox\r\n            className={classes.showEndedRafflesCheckbox}\r\n            value={hideEndedRaffles}\r\n            checked={hideEndedRaffles}\r\n            onClick={() => setHideEndedRaffles((currentValue) => !currentValue)}\r\n          />\r\n          <Button\r\n            variant=\"text\"\r\n            disableRipple\r\n            className={classes.hideEndedText}\r\n            onClick={() => setHideEndedRaffles((currentValue) => !currentValue)}\r\n          >\r\n            Hide ended raffles\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","import { FC, useEffect, useMemo, useState } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\n\r\nimport RaffleCard from '../../components/RaffleCard';\r\nimport { useStyles } from './styles';\r\nimport { useRafflesStore } from '../../hooks/useRafflesStore';\r\nimport Screen from '../../components/layout/Screen';\r\nimport { Raffle } from '../../lib/types';\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport FilterBar from './components/FilterBar';\r\n\r\nconst ExploreRafflesScreen: FC = () => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const { publicKey } = useWallet();\r\n  const { raffles, fetchAllRaffles, fetching } = useRafflesStore();\r\n  const [showOwnRafflesOnly, setShowOwnRafflesOnly] = useState(false);\r\n  const [hideEndedRaffles, setHideEndedRaffles] = useState(false);\r\n\r\n  useEffect(fetchAllRaffles, [fetchAllRaffles]);\r\n\r\n  const filterMap = useMemo(\r\n    () => ({\r\n      own: (raffle: Raffle) => raffle.entrants.has(publicKey?.toString() || ''),\r\n      ongoing: (raffle: Raffle) => new Date() < raffle.endTimestamp,\r\n    }),\r\n    [publicKey]\r\n  );\r\n\r\n  const rafflesToShow = useMemo(() => {\r\n    let toShow = [...raffles.values()].sort(\r\n      (raffle1, raffle2) =>\r\n        raffle2.endTimestamp.getTime() - raffle1.endTimestamp.getTime()\r\n    );\r\n    if (showOwnRafflesOnly) toShow = toShow.filter(filterMap.own);\r\n    if (hideEndedRaffles) toShow = toShow.filter(filterMap.ongoing);\r\n    return toShow;\r\n  }, [raffles, filterMap, showOwnRafflesOnly, hideEndedRaffles]);\r\n\r\n  if (raffles.size === 0 && fetching)\r\n    return (\r\n      <>\r\n        <Typography variant=\"h1\" className={classes.titleBar}>\r\n          Explore our SuperRaffles!\r\n        </Typography>\r\n        <div className=\"blankspace\"></div>\r\n        \r\n        <Typography variant=\"h4\"  className=\"centretext\" >\r\n        If you would like to list a raffle for your project here then join our Discord and fill out the application in our Raffle Info channel!\r\n        \r\n        </Typography>\r\n\r\n        <div className={classes.mainContent}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      </>\r\n    );\r\n\r\n  if (raffles.size === 0)\r\n    return (\r\n      <>\r\n        <Typography variant=\"h1\" className={classes.titleBar}>\r\n          Explore our SuperRaffles!\r\n        </Typography>\r\n        <Typography variant=\"h4\"  className=\"centretext\" >\r\n        If you would like to list a raffle for your project here then join our Discord and fill out the application in our Raffle Info channel!\r\n        \r\n        </Typography>\r\n        <Typography variant=\"h4\" className={classes.mainContent}>\r\n        SuperRaffles will be coming soon!\r\n        </Typography>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h1\" className={classes.titleBar}>\r\n        Explore our SuperRaffles!\r\n      </Typography>\r\n      <Typography variant=\"h4\"  className=\"centretext\" >\r\n      If you would like to list a raffle for your project here then join our Discord and fill out the application in our Raffle Info channel!\r\n        \r\n        </Typography>\r\n      <FilterBar\r\n        hideEndedRaffles={hideEndedRaffles}\r\n        setHideEndedRaffles={setHideEndedRaffles}\r\n        setShowOwnRafflesOnly={setShowOwnRafflesOnly}\r\n      />\r\n      {rafflesToShow.length > 0 ? (\r\n        <Grid\r\n          container\r\n          justifyContent={'center'}\r\n          direction={'row'}\r\n          className={classes.rafflesGrid}\r\n        >\r\n          {rafflesToShow\r\n            .filter((r) => r.prizes.length > 0)\r\n            .map((raffle) => (\r\n              <RaffleCard\r\n                key={raffle.publicKey.toString()}\r\n                className={classes.raffleCardContainer}\r\n                raffle={raffle}\r\n              />\r\n            ))}\r\n        </Grid>\r\n      ) : (\r\n        <Typography variant=\"h4\" className={classes.mainContent}>\r\n          No SuperRaffles to display \r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ExploreRafflesScreenWithLayout = () => (\r\n  <Screen>\r\n    <ExploreRafflesScreen />\r\n  </Screen>\r\n);\r\n\r\nexport default ExploreRafflesScreenWithLayout;\r\n","import {\r\n  ASSOCIATED_TOKEN_PROGRAM_ID,\r\n  Token,\r\n  TOKEN_PROGRAM_ID,\r\n} from '@solana/spl-token';\r\nimport { TransactionInstruction } from '@solana/web3.js';\r\n\r\nimport { DraffleProgram } from '../../providers/ProgramApisProvider';\r\nimport { createOwnAssociatedTokenAccountInstruction } from '../accounts';\r\nimport { Raffle } from '../types';\r\n\r\nexport const claimPrize = async (\r\n  draffleClient: DraffleProgram,\r\n  raffle: Raffle,\r\n  prizeIndex: number,\r\n  ticketIndex: number\r\n) => {\r\n  if (prizeIndex >= raffle.prizes.length)\r\n    throw Error(\r\n      `Prize index does not match prize list (${raffle.prizes.length})`\r\n    );\r\n  const prize = raffle.prizes[prizeIndex];\r\n\r\n  const ata = await Token.getAssociatedTokenAddress(\r\n    ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    TOKEN_PROGRAM_ID,\r\n    prize.mint.publicKey,\r\n    draffleClient.provider.wallet.publicKey\r\n  );\r\n\r\n  let instructions: TransactionInstruction[] | undefined;\r\n  const info = await draffleClient.provider.connection.getAccountInfo(ata);\r\n  if (info === null) {\r\n    instructions = [\r\n      createOwnAssociatedTokenAccountInstruction(\r\n        prize.mint.publicKey,\r\n        ata,\r\n        draffleClient.provider.wallet.publicKey,\r\n      ),\r\n    ];\r\n  }\r\n\r\n  return await draffleClient.rpc.claimPrize(prizeIndex, ticketIndex, {\r\n    accounts: {\r\n      raffle: raffle.publicKey,\r\n      entrants: raffle.entrantsAccountAddress,\r\n      prize: prize.address,\r\n      winnerTokenAccount: ata,\r\n      tokenProgram: TOKEN_PROGRAM_ID,\r\n    },\r\n    instructions,\r\n  });\r\n};\r\n","import { Theme, alpha, darken } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  label: {\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    verticalAlign: 'center',\r\n  },\r\n  actionSection: {\r\n    padding: '5px 5px',\r\n    minHeight: '180px',\r\n    width: '100%',\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    borderRadius: '4px',\r\n    boxShadow: '0 2px 4px 0 #000',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  mainButton: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: theme.palette.primary.main,\r\n    borderColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    '&:hover': {\r\n      backgroundColor: darken(theme.palette.primary.main, 0.2),\r\n      borderColor: darken(theme.palette.primary.main, 0.2),\r\n    },\r\n    '&:disabled': {\r\n      backgroundColor: '#393939',\r\n      borderColor: '#393939',\r\n      color: '#898989',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  textHighlight: {\r\n    marginBottom: '10px',\r\n  },\r\n  scrollLink: {\r\n    textTransform: 'none',\r\n    marginRight: '-5px',\r\n    color: theme.palette.primary.main,\r\n    '&:hover': {\r\n      textShadow: '0px 0px 5px #e86bff',\r\n      backgroundColor: 'transparent',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  scrollIcon: {\r\n    transform: `rotate(90deg)`,\r\n    fontSize: '50px',\r\n    opacity: '0.6',\r\n    marginTop: '20px',\r\n    marginBottom: '60px',\r\n  },\r\n  connectToBuyButton: {\r\n    marginTop: '20px',\r\n    width: '80%',\r\n    height: '40px',\r\n  },\r\n}));\r\n","import { FC, RefObject, useEffect, useMemo } from 'react';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-material-ui';\r\nimport confetti from 'canvas-confetti';\r\n\r\nimport { Entrant, Raffle } from '../../../../lib/types';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\n\r\ninterface EndedRaffleActionsSectionProps {\r\n  raffle: Raffle;\r\n  userPubkey: PublicKey | undefined;\r\n  entrant: Entrant | undefined;\r\n  entrantWinningTickets: { prizeIndex: number; ticketIndex: number }[];\r\n  scrollRef: RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst EndedRaffleActionSection: FC<EndedRaffleActionsSectionProps> = ({\r\n  raffle,\r\n  userPubkey,\r\n  entrant,\r\n  entrantWinningTickets,\r\n  scrollRef,\r\n}) => {\r\n  const classes = { ...useCommonStyles(), ...useStyles() };\r\n\r\n  const noPrizes = useMemo(() => raffle.prizes.length === 0, [raffle]);\r\n  const winnersRevealed = useMemo(() => !!raffle.randomness, [raffle]);\r\n  const userIsConnected = useMemo(() => !!userPubkey, [userPubkey]);\r\n  const userHasParticipated = useMemo(\r\n    () => (entrant?.tickets.length || 0) > 0,\r\n    [entrant]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (entrantWinningTickets.length === 0) return;\r\n    const confettiTimerId = makeConfetti();\r\n    return () => clearInterval(confettiTimerId);\r\n  }, [entrantWinningTickets.length]);\r\n\r\n  if (noPrizes) return <>No prizes to reveal!</>;\r\n\r\n  if (!winnersRevealed)\r\n    return (\r\n      <>\r\n        <Typography variant=\"body1\" className={classes.textHighlight}>\r\n          Winners will be announced soon.\r\n        </Typography>\r\n        <Typography variant=\"body1\">Hang tight!</Typography>\r\n      </>\r\n    );\r\n\r\n  if (!userIsConnected)\r\n    return (\r\n      <>\r\n        <Typography variant=\"h3\" className={classes.textHighlight}>\r\n          Winners have been announced.\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Connect your wallet to check if you have won any prizes!\r\n        </Typography>\r\n        <WalletMultiButton\r\n          className={`${classes.mainButton} ${classes.connectToBuyButton}`}\r\n        >\r\n          Connect to reveal\r\n        </WalletMultiButton>\r\n      </>\r\n    );\r\n\r\n  if (!userHasParticipated)\r\n    return (\r\n      <Typography variant=\"body1\">\r\n        Uh oh! It looks like you did not participate in this raffle!\r\n      </Typography>\r\n    );\r\n\r\n  if (entrantWinningTickets.length === 0)\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h3\" className={classes.textHighlight}>\r\n          Oh no! No prize.\r\n        </Typography>\r\n        <Typography variant=\"body1\">Better luck next time!</Typography>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\" className={classes.textHighlight}>\r\n        Hurray, you won!\r\n      </Typography>\r\n      <div>\r\n        <Typography>\r\n          <Button\r\n            className={classes.scrollLink}\r\n            variant=\"text\"\r\n            onClick={() =>\r\n              scrollRef.current?.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'start',\r\n              })\r\n            }\r\n          >\r\n            Scroll\r\n          </Button>\r\n          to see your prize(s)!\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst makeConfetti = () => {\r\n  const duration = 5 * 1000;\r\n  const animationEnd = Date.now() + duration;\r\n  const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\r\n\r\n  function randomInRange(min: number, max: number) {\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n\r\n  let intervalId: ReturnType<typeof setInterval>;\r\n  intervalId = setInterval(() => {\r\n    const timeLeft = animationEnd - Date.now();\r\n\r\n    if (timeLeft <= 0) {\r\n      return clearInterval(intervalId);\r\n    }\r\n\r\n    var particleCount = 50 * (timeLeft / duration);\r\n    // since particles fall down, start a bit higher than random\r\n    confetti(\r\n      Object.assign({}, defaults, {\r\n        particleCount,\r\n        origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 },\r\n      })\r\n    );\r\n    confetti(\r\n      Object.assign({}, defaults, {\r\n        particleCount,\r\n        origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 },\r\n      })\r\n    );\r\n  }, 250);\r\n\r\n  return intervalId;\r\n};\r\n\r\nexport default EndedRaffleActionSection;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      width: '100%',\r\n      minWidth: device === DeviceType.Phone ? '256px' : '313px',\r\n      maxWidth: device === DeviceType.Phone ? '380px' : '380px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      fontSize: '30px',\r\n    }),\r\n    ticketsSection: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n    },\r\n    totalTickets: {\r\n      width: '58%',\r\n    },\r\n    ticketPrice: {\r\n      width: '42%',\r\n    },\r\n    myTickets: {\r\n      width: '55%',\r\n    },\r\n    showMyTickets: {\r\n      width: '45%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'flex-end',\r\n      alignItems: 'baseline',\r\n      paddingBottom: '5px',\r\n    },\r\n    ticketButton: {\r\n      fontSize: '14px',\r\n      color: '#26a6cb',\r\n      textShadow: '0px 0px 5px #68b9d6',\r\n      padding: '0 0',\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n        color: '#72F3B0D',\r\n        textShadow: '0px 0px 5px #11FED0',\r\n      },\r\n    },\r\n    separator: { margin: '0 5px' },\r\n  })\r\n);\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogProps,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { FC, useState } from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\nimport { getDisplayAmount } from '../../lib/accounts';\r\nimport { Raffle } from '../../lib/types';\r\nimport useCommonStyles from '../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../hooks/useViewport';\r\n\r\ntype UserTicketsDialogProps = DialogProps & {\r\n  setOpen: (isOpen: boolean) => void;\r\n  userTickets?: number[];\r\n};\r\n\r\nconst UserTicketsDialog: FC<UserTicketsDialogProps> = ({\r\n  setOpen,\r\n  userTickets,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Dialog {...props} onClose={() => setOpen(false)} fullWidth={true}>\r\n      <DialogTitle>My tickets</DialogTitle>\r\n      <DialogContent>\r\n        {userTickets?.map((userTicket) => (\r\n          <div key={userTicket}>#{userTicket + 1}</div>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\ninterface RaffleInfoSectionProps {\r\n  raffle: Raffle;\r\n  userConnected: boolean;\r\n  userTickets?: number[];\r\n}\r\n\r\nconst RaffleInfoSection: FC<RaffleInfoSectionProps> = ({\r\n  userConnected,\r\n  raffle,\r\n  userTickets,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.ticketsSection}>\r\n        <div className={classes.totalTickets}>\r\n          <Typography variant=\"overline\" className={classes.label}>\r\n            Tickets sold\r\n          </Typography>\r\n          <div className={classes.value}>\r\n            <CountUp\r\n              start={0}\r\n              end={raffle.totalTickets}\r\n              delay={0}\r\n              duration={0.8}\r\n              preserveValue\r\n              useEasing\r\n            >\r\n              {({ countUpRef }) => <Typography variant=\"h4\" ref={countUpRef} />}\r\n            </CountUp>\r\n            <Typography variant=\"h4\" className={classes.separator}>\r\n              /\r\n            </Typography>\r\n            <Typography variant=\"h4\">{`${raffle.entrantsCap}`}</Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.ticketPrice}>\r\n          <Typography variant=\"overline\" className={classes.label}>\r\n            Ticket Price\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {`${getDisplayAmount(\r\n              raffle.proceeds.ticketPrice,\r\n              raffle.proceeds.mint\r\n            )} ${raffle.proceeds.mint.symbol}`}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      {userConnected && (\r\n        <div className={classes.ticketsSection}>\r\n          <div className={classes.myTickets}>\r\n            <Typography variant=\"overline\" className={classes.label}>\r\n              My tickets\r\n            </Typography>\r\n            <div className={classes.value}>\r\n              <CountUp\r\n                start={0}\r\n                end={userTickets?.length ?? 0}\r\n                delay={0}\r\n                duration={0.8}\r\n                preserveValue\r\n                useEasing\r\n              >\r\n                {({ countUpRef }) => (\r\n                  <Typography variant=\"h4\" ref={countUpRef} />\r\n                )}\r\n              </CountUp>\r\n            </div>\r\n          </div>\r\n          {userTickets?.length && (\r\n            <div className={classes.showMyTickets}>\r\n              <Button\r\n                variant=\"text\"\r\n                size=\"small\"\r\n                disableRipple\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                }}\r\n                className={classes.ticketButton}\r\n              >\r\n                See my tickets\r\n              </Button>\r\n              <UserTicketsDialog\r\n                userTickets={userTickets}\r\n                open={open}\r\n                setOpen={setOpen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RaffleInfoSection;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: '100%',\r\n  },\r\n  claimButtonContent: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  claimButtonContentLeft: {\r\n    width: '20%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  claimButtonContentMiddle: {\r\n    width: '80%',\r\n  },\r\n  claimButtonContentRight: {\r\n    width: '0%',\r\n  },\r\n  claimSpinner: {\r\n    height: '50px',\r\n    color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport { cloneDeep } from 'lodash';\r\n\r\nimport { Prize } from '../../lib/types';\r\nimport useCommonStyles from '../../assets/styles';\r\nimport { useStyles } from './styles';\r\n\r\ninterface ClaimButtonProps {\r\n  prize: Prize;\r\n  prizeIndex: number;\r\n  ticketIndex: number;\r\n  claimPrize: (prizeIndex: number, ticketIndex: number) => Promise<void>;\r\n}\r\n \r\nconst ClaimButton: FC<ClaimButtonProps> = ({\r\n  prize,\r\n  prizeIndex,\r\n  ticketIndex,\r\n  claimPrize,\r\n}) => {\r\n  const classes = { ...useCommonStyles(), ...useStyles() };\r\n  const [claimOngoing, setClaimOngoing] = useState(new Map<number, boolean>());\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        onClick={async () => {\r\n          setClaimOngoing((state) => cloneDeep(state.set(prizeIndex, true)));\r\n          await claimPrize(prizeIndex, ticketIndex);\r\n          setClaimOngoing((state) => cloneDeep(state.set(prizeIndex, false)));\r\n        }}\r\n        disabled={prize.amount.isZero() || !!claimOngoing.get(prizeIndex)}\r\n        className={classes.mainButton}\r\n      >\r\n        <div className={classes.claimButtonContent}>\r\n          {!!claimOngoing.get(prizeIndex) ? (\r\n            <>\r\n              <div className={classes.claimButtonContentLeft}>\r\n                <CircularProgress size={20} className={classes.claimSpinner} />\r\n              </div>\r\n              <div className={classes.claimButtonContentMiddle}>\r\n                Processing...\r\n              </div>\r\n              <div className={classes.claimButtonContentRight} />\r\n            </>\r\n          ) : (\r\n            <>Claim</>\r\n          )}\r\n        </div>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClaimButton;\r\n","import { useEffect, useState } from 'react';\r\n\r\ninterface useRandomDrawerArgs {\r\n  endRange: number;\r\n  drawLength?: number;\r\n  spinIntervalMs?: number;\r\n  redrawIntervalMs?: number;\r\n}\r\n\r\nconst useRandomDrawer = ({\r\n  endRange,\r\n  drawLength = 50,\r\n  spinIntervalMs = 100,\r\n  redrawIntervalMs = 5000,\r\n}: useRandomDrawerArgs): number | undefined => {\r\n  const [currentTicketIndex, setCurrentTicketIndex] = useState(0);\r\n  const [randomTickets, setRandomTickets] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    const timerId = setInterval(\r\n      () =>\r\n        setRandomTickets(\r\n          Array.from({ length: drawLength }, () =>\r\n            Math.round(Math.random() * endRange)\r\n          )\r\n        ),\r\n      redrawIntervalMs\r\n    );\r\n    return () => clearInterval(timerId);\r\n  }, [endRange, redrawIntervalMs, drawLength, setRandomTickets]);\r\n\r\n  useEffect(() => {\r\n    const timerId = setInterval(\r\n      () =>\r\n        setCurrentTicketIndex(\r\n          (prevTicketIndex) => ++prevTicketIndex % drawLength\r\n        ),\r\n      spinIntervalMs\r\n    );\r\n    return () => clearInterval(timerId);\r\n  }, [drawLength, spinIntervalMs, setCurrentTicketIndex]);\r\n\r\n  if (endRange === 0) return undefined;\r\n  return randomTickets[currentTicketIndex];\r\n};\r\n\r\nexport default useRandomDrawer;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      height: device === DeviceType.Phone ? '25vw' : '300px',\r\n      width: device === DeviceType.Phone ? '100%' : '200px',\r\n      position: 'relative',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        boxShadow: '0 3px 10px 0 #111',\r\n        transform: 'scale3d(1.02, 1.02, 1)',\r\n      },\r\n      '&:active': {\r\n        transform: 'scale3d(1, 1, 1)',\r\n      },\r\n      display: 'flex',\r\n      flexDirection: device === DeviceType.Phone ? 'row' : 'column',\r\n      justifyContent: device === DeviceType.Phone ? 'flex-start' : 'center',\r\n    }),\r\n    media: ({ device }) => ({\r\n      ...(device === DeviceType.Phone\r\n        ? { width: '25vw', height: '25vw' }\r\n        : { height: '200px' }),\r\n    }),\r\n    prizeInfo: ({ device }) => ({\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-around',\r\n      alignItems: device === DeviceType.Phone ? 'baseline' : 'center',\r\n      fontSize: device === DeviceType.Phone ? '15px' : '15px',\r\n      padding: device === DeviceType.Phone ? ' 8px' : '8px',\r\n    }),\r\n    prizeInfoInner: {},\r\n    prizeNameRow: ({ device }) => ({\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      color: theme.palette.primary.main,\r\n      fontWeight: 'bold',\r\n      textTransform: 'uppercase',\r\n      alignItems: 'center',\r\n      justifyContent: device === DeviceType.Phone ? 'left' : 'center',\r\n      textAlign: device === DeviceType.Phone ? 'left' : 'center',\r\n    }),\r\n    prizeName: {\r\n      color: theme.palette.primary.main,\r\n      marginLeft: '5px',\r\n    },\r\n    winnerSection: {\r\n      width: '100%',\r\n      marginTop: '10px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n    },\r\n    winnerRow: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n    },\r\n    winnertTicket: {\r\n      marginLeft: '10px',\r\n    },\r\n    winnerPubkey: {\r\n      color: theme.palette.secondary.main,\r\n      marginLeft: '10px',\r\n    },\r\n    cardBadge: ({ device }) => ({\r\n      fontSize: '12px',\r\n      fontWeight: 'bold',\r\n      width: '70px',\r\n      textAlign: 'center',\r\n      padding: '2px',\r\n      position: 'absolute',\r\n      ...(device === DeviceType.Phone\r\n        ? {\r\n            top: '3px',\r\n            left: '3px',\r\n          }\r\n        : {\r\n            top: '5px',\r\n            right: '5px',\r\n          }),\r\n      color: 'white',\r\n      backgroundColor: theme.palette.primary.main,\r\n      borderRadius: '2px',\r\n      boxShadow: '0 2px 6px 0 #000',\r\n    }),\r\n  })\r\n);\r\n","import React, { FC } from 'react';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nexport interface ShortenedStringProps {\r\n  message: string;\r\n  maxCharLength: number;\r\n  addTooltip?: boolean;\r\n}\r\n\r\nconst ShortenedString: FC<ShortenedStringProps> = ({\r\n  message,\r\n  maxCharLength,\r\n  addTooltip = false,\r\n}) => {\r\n  if (message.length <= maxCharLength) return <>{message}</>;\r\n\r\n  if (addTooltip)\r\n    return (\r\n      <Tooltip title={message} placement=\"top\">\r\n        <>{message.slice(0, maxCharLength - 4)} ...</>\r\n      </Tooltip>\r\n    );\r\n\r\n  return <>{message.slice(0, maxCharLength - 4)} ...</>;\r\n};\r\n\r\nexport default ShortenedString;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    modal: ({ device }) => ({\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-around',\r\n      width: '100%',\r\n    }),\r\n    content: ({ device }) => ({\r\n      outline: 'none',\r\n      width: '50%',\r\n      minWidth: '250px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 2, 3),\r\n    }),\r\n    header: { width: '100%', display: 'flex', justifyContent: 'flex-end' },\r\n    body: ({ device }) => ({\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: device === DeviceType.Phone ? 'column' : 'row',\r\n      marginTop: device === DeviceType.Phone ? '5px' : '0',\r\n    }),\r\n    contentLeft: ({ device }) => ({\r\n      width: device === DeviceType.Phone ? '100%' : '50%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    }),\r\n    media: {\r\n      width: '90%',\r\n    },\r\n    contentRight: ({ device }) => ({\r\n      width: device === DeviceType.Phone ? '100%' : '50%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: device === DeviceType.Phone ? 'center' : 'baseline',\r\n      textAlign: device === DeviceType.Phone ? 'center' : 'left',\r\n      justifyContent: 'space-evenly',\r\n      padding:\r\n        device === DeviceType.Phone\r\n          ? theme.spacing(1)\r\n          : theme.spacing(0, 3, 3, 3),\r\n    }),\r\n    ticketButton: {\r\n      marginTop: '10px',\r\n      fontSize: '14px',\r\n      color: theme.palette.secondary.main,\r\n      textShadow: '0px 0px 5px #e86bff',\r\n      padding: '0 0',\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React, { FC } from 'react';\r\n\r\nexport interface SpacerProps {\r\n  height: string;\r\n}\r\n\r\nconst Spacer: FC<SpacerProps> = ({ height }) => (\r\n  <div style={{ height, width: '100%' }} />\r\n);\r\n\r\nexport default Spacer;\r\n","import React, { FC } from 'react';\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Fade,\r\n  IconButton,\r\n  Modal,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport { Prize } from '../../lib/types';\r\nimport { useStyles } from './styles';\r\nimport { shortenPubkeyString } from '../../lib/utils';\r\nimport { Close, Launch } from '@material-ui/icons';\r\nimport Spacer from '../Spacer';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\ninterface PrizeDetailsModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  prize: Prize;\r\n  prizeRank?: number;\r\n}\r\n\r\nconst PrizeDetailsModal: FC<PrizeDetailsModalProps> = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  prize,\r\n  prizeRank,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n\r\n  const imageUrl = prize.meta.imageUri;\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={() => {\r\n        setIsOpen(false);\r\n      }}\r\n      className={classes.modal}\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={isOpen}>\r\n        <div className={classes.content}>\r\n          <div className={classes.header}>\r\n            <IconButton size=\"small\" onClick={() => setIsOpen(false)}>\r\n              <Close />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.body}>\r\n            <div className={classes.contentLeft}>\r\n              <img\r\n                src={imageUrl}\r\n                className={classes.media}\r\n                alt={prize.mint.name}\r\n              />\r\n            </div>\r\n            <div className={classes.contentRight}>\r\n              <div>\r\n                <Typography variant=\"overline\">Codename</Typography>\r\n                <Typography variant=\"body1\">{prize.mint.name}</Typography>\r\n              </div>\r\n              <Spacer height={device === DeviceType.Phone ? '5px' : '10px'} />\r\n              {prizeRank !== undefined && (\r\n                <>\r\n                  <div>\r\n                    <Typography variant=\"overline\">Prize rank</Typography>\r\n                    <Typography variant=\"body1\">{prizeRank + 1}</Typography>\r\n                  </div>\r\n                  <Spacer\r\n                    height={device === DeviceType.Phone ? '5px' : '10px'}\r\n                  />\r\n                </>\r\n              )}\r\n              <div>\r\n                <Typography variant=\"overline\">Mint address</Typography>\r\n                <Typography variant=\"body1\">\r\n                  {shortenPubkeyString(prize.mint.publicKey)}\r\n                </Typography>\r\n              </div>\r\n              <Spacer height={device === DeviceType.Phone ? '5px' : '10px'} />\r\n              <Button\r\n                variant=\"text\"\r\n                size=\"small\"\r\n                disableRipple\r\n                onClick={() => {\r\n                  var win = window.open(\r\n                    `https://solscan.io/token/${prize.mint.publicKey.toString()}`,\r\n                    '_blank'\r\n                  );\r\n                  win?.focus();\r\n                }}\r\n                className={classes.ticketButton}\r\n              >\r\n                See on Solscan{' '}\r\n                <Launch\r\n                  style={{\r\n                    height: '17px',\r\n                    marginLeft: '5px',\r\n                  }}\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PrizeDetailsModal;\r\n","import { FC, useMemo, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardClassKey,\r\n  CardMedia,\r\n  PaperProps,\r\n  StandardProps,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\n\r\nimport { Prize, Raffle } from '../../../../lib/types';\r\nimport useRandomDrawer from '../../../../hooks/useRandomDrawer';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { shortenPubkeyString } from '../../../../lib/utils';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport ShortenedString from '../../../../components/ShortenedString';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\nimport PrizeDetailsModal from '../../../../components/PrizeDetailsModal';\r\n\r\nexport interface PrizeCardEndedProps\r\n  extends StandardProps<PaperProps, CardClassKey> {\r\n  prize: Prize;\r\n  raffle: Raffle;\r\n  index?: number;\r\n  badgeText?: string;\r\n  winner?: number;\r\n}\r\n\r\nconst RandomTicketDrawer: FC<{ endRange: number }> = ({ endRange }) => {\r\n  const randomTicket = useRandomDrawer({ endRange });\r\n  return <>#{String((randomTicket || 0) + 1).padStart(4, '0')}</>;\r\n};\r\n\r\nconst PrizeCardEnded: FC<PrizeCardEndedProps> = ({\r\n  prize,\r\n  raffle,\r\n  index,\r\n  badgeText,\r\n  winner,\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const imageUrl = prize.meta.imageUri;\r\n\r\n  const maxPrizeNameLength = useMemo(\r\n    () => (device === DeviceType.Phone ? 14 : 18),\r\n    [device]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PrizeDetailsModal\r\n        isOpen={isModalOpen}\r\n        setIsOpen={setIsModalOpen}\r\n        prize={prize}\r\n        prizeRank={index}\r\n      />\r\n      <Card\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}\r\n        {...otherProps}\r\n        className={`${classes.root} ${className}`}\r\n      >\r\n        {badgeText && <div className={classes.cardBadge}>{badgeText}</div>}\r\n        {!isLoaded && (\r\n          <div>\r\n            <Skeleton\r\n              variant=\"rect\"\r\n              animation={'wave'}\r\n              classes={{\r\n                root: classes.media,\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <CardMedia\r\n          component=\"img\"\r\n          className={classes.media}\r\n          src={imageUrl}\r\n          alt={prize.mint.name}\r\n          style={isLoaded ? {} : { display: 'none' }}\r\n          onLoad={() => setIsLoaded(true)}\r\n        />\r\n        <CardActions className={classes.prizeInfo}>\r\n          <div className={classes.prizeInfoInner}>\r\n            <div className={classes.prizeNameRow}>\r\n              <Typography variant=\"body1\">\r\n                {index !== undefined && `#${index + 1} `}\r\n              </Typography>\r\n              <Typography variant=\"body1\" className={classes.prizeName}>\r\n                <ShortenedString\r\n                  message={prize.mint.name}\r\n                  maxCharLength={maxPrizeNameLength}\r\n                  addTooltip\r\n                />\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.winnerSection}>\r\n              {winner !== undefined ? (\r\n                <div>\r\n                  <Typography variant=\"body1\">{`Winner: #${String(\r\n                    winner + 1\r\n                  ).padStart(4, '0')}`}</Typography>\r\n                  <div className={classes.winnerRow}>\r\n                    <Typography variant=\"body1\">Pubkey: </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      className={classes.winnerPubkey}\r\n                    >\r\n                      {shortenPubkeyString(raffle.entrantsRaw[winner])}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <Typography variant=\"body1\">Drawing...</Typography>\r\n                  <Typography variant=\"body1\" className={classes.winnertTicket}>\r\n                    <RandomTicketDrawer endRange={raffle.totalTickets} />\r\n                  </Typography>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrizeCardEnded;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    prizesGrid: ({ device }) => ({\r\n      scrollMargin: '130px',\r\n      display: 'flex',\r\n      justifyContent: 'space-around',\r\n      flexGrow: 'initial',\r\n      width: '100%',\r\n      marginTop: device === DeviceType.Phone ? '-20px' : '5px',\r\n    }),\r\n    prizeItem: ({ device }) => ({\r\n      margin: device === DeviceType.Phone ? '0' : '10px',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: device === DeviceType.Phone ? '30px' : '0',\r\n      marginBottom: device === DeviceType.Phone ? '0' : '30px',\r\n    }),\r\n    claimButtonContainer: ({ device }) => ({\r\n      ...(device === DeviceType.Phone ? { height: '25px' } : {}),\r\n      marginTop: device === DeviceType.Phone ? '8px' : '10px',\r\n    }),\r\n  })\r\n);\r\n","import { FC, RefObject, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { Raffle } from '../../../../lib/types';\r\nimport ClaimButton from '../../../../components/ClaimButton';\r\nimport PrizeCardEnded from '../PrizeCardEnded';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\ninterface PrizeGalleryEndedProps {\r\n  raffle: Raffle;\r\n  entrantWinningTickets: { prizeIndex: number; ticketIndex: number }[];\r\n  winningTickets: number[];\r\n  claimPrize: (prizeIndex: number, ticketIndex: number) => Promise<void>;\r\n  scrollRef: RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst PrizeGalleryEnded: FC<PrizeGalleryEndedProps> = ({\r\n  raffle,\r\n  entrantWinningTickets,\r\n  winningTickets,\r\n  claimPrize,\r\n  scrollRef,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        ref={scrollRef}\r\n        container\r\n        justifyContent={'space-between'}\r\n        direction={device === DeviceType.Phone ? 'column' : 'row'}\r\n        className={classes.prizesGrid}\r\n      >\r\n        {raffle.prizes.map((prize, prizeIndex) => {\r\n          const ticketIndex = winningTickets[prizeIndex];\r\n          const isWon = entrantWinningTickets.some(\r\n            (entrantWinningTicket) =>\r\n              entrantWinningTicket.ticketIndex === ticketIndex\r\n          );\r\n\r\n          return (\r\n            <Grid key={prizeIndex} item className={classes.prizeItem}>\r\n              <PrizeCardEnded\r\n                key={prizeIndex}\r\n                prize={prize}\r\n                raffle={raffle}\r\n                {...(prize.amount.isZero() ? { badgeText: 'Claimed' } : {})}\r\n                index={prizeIndex}\r\n                winner={ticketIndex}\r\n              />\r\n              {isWon && (\r\n                <div className={classes.claimButtonContainer}>\r\n                  <ClaimButton\r\n                    claimPrize={claimPrize}\r\n                    prize={prize}\r\n                    prizeIndex={prizeIndex}\r\n                    ticketIndex={ticketIndex}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrizeGalleryEnded;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  prizesGrid: {\r\n    display: 'flex',\r\n    flexGrow: 'initial',\r\n    width: '100%',\r\n  },\r\n  prizeItem: {\r\n    margin: '0 5px 30px 5px',\r\n  },\r\n  claimButtonContainer: {\r\n    marginTop: '20px',\r\n  },\r\n  claimButtonContent: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: '#26a6cb',\r\n  },\r\n}));\r\n","import React, { FC } from 'react';\r\n\r\nimport { Raffle } from '../../../../lib/types';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport PrizeCardEnded from '../PrizeCardEnded';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport interface PrizeShowcaseEndedProps {\r\n  raffle: Raffle;\r\n  winningTickets?: number[];\r\n}\r\n\r\nexport const PrizeShowcaseEnded: FC<PrizeShowcaseEndedProps> = ({\r\n  raffle,\r\n  winningTickets = [],\r\n}) => {\r\n  const classes = { ...useCommonStyles(), ...useStyles() };\r\n\r\n  if (raffle.prizes.length === 0)\r\n    return <div className={classes.root}>No prizes</div>;\r\n\r\n  if (raffle.prizes.length === 1) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          justifyContent={'space-evenly'}\r\n          direction={'row'}\r\n          className={classes.prizesGrid}\r\n        >\r\n          <Grid item>\r\n            <PrizeCardEnded\r\n              prize={raffle.prizes[0]}\r\n              raffle={raffle}\r\n              winner={winningTickets[0]}\r\n              className={classes.prizeItem}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (raffle.prizes.length === 2) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          justifyContent={'space-evenly'}\r\n          direction={'row'}\r\n          className={classes.prizesGrid}\r\n        >\r\n          <Grid item>\r\n            <PrizeCardEnded\r\n              prize={raffle.prizes[0]}\r\n              index={0}\r\n              raffle={raffle}\r\n              winner={winningTickets[0]}\r\n              className={classes.prizeItem}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <PrizeCardEnded\r\n              prize={raffle.prizes[1]}\r\n              index={1}\r\n              raffle={raffle}\r\n              winner={winningTickets[1]}\r\n              className={classes.prizeItem}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justifyContent={'space-evenly'}\r\n        direction={'row'}\r\n        className={classes.prizesGrid}\r\n      >\r\n        <Grid item>\r\n          <PrizeCardEnded\r\n            prize={raffle.prizes[0]}\r\n            index={0}\r\n            raffle={raffle}\r\n            winner={winningTickets[0]}\r\n            className={classes.prizeItem}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PrizeCardEnded\r\n            prize={raffle.prizes[1]}\r\n            index={1}\r\n            raffle={raffle}\r\n            winner={winningTickets[1]}\r\n            className={classes.prizeItem}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PrizeCardEnded\r\n            prize={raffle.prizes[2]}\r\n            index={2}\r\n            raffle={raffle}\r\n            winner={winningTickets[2]}\r\n            className={classes.prizeItem}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrizeShowcaseEnded;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles, alpha } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      height: 'inherit',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    topSection: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n    },\r\n    raffleTitle: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      justifyItems: 'space-between',\r\n    },\r\n    raffleSubtitle: {\r\n      color: theme.palette.secondary.main,\r\n      marginLeft: '10px',\r\n    },\r\n    leftTitleSection: {\r\n      paddingLeft: '20px',\r\n      width: '10%',\r\n      display: 'flex',\r\n    },\r\n    middleTitleSection: {\r\n      width: '90%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n    },\r\n    rightTitleSection: {\r\n      width: '10%',\r\n    },\r\n    backButton: {\r\n      color: theme.palette.common.black,\r\n      backgroundColor: alpha(theme.palette.secondary.main, 0.8),\r\n      '&:hover': {\r\n        boxShadow: `0px 0px 5px ${'white'}, inset 0px 0px 5px ${'white'}`,\r\n        backgroundColor: alpha('#FF9455', 0.8)\r\n      },\r\n    },\r\n    backButtonIcon: {},\r\n    mainContent: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'flex-end',\r\n    },\r\n    prizesSection: {\r\n      width: '70%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      paddingRight: '20px',\r\n      minHeight: '450px',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    prizesHeader: {\r\n      marginBottom: '10px',\r\n    },\r\n    seeAllPrizesButton: {\r\n      marginLeft: '5px',\r\n      color: '#26a6cb',\r\n      textTransform: 'initial',\r\n      '&:hover': {\r\n        textShadow: `0px 0px 5px ${'#72F3B0D'}`,\r\n        backgroundColor: 'transparent',\r\n        textDecoration: 'none',\r\n      },\r\n    },\r\n    detailsSection: ({ device }) => ({\r\n      paddingTop: '20px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-evenly',\r\n      width: '30%',\r\n      minWidth: device === DeviceType.Phone ? '256px' : '313px',\r\n      maxWidth: device === DeviceType.Phone ? '380px' : '380px',\r\n      maxHeight: '500px',\r\n    }),\r\n    actionSectionContainer: {\r\n      width: '100%',\r\n    },\r\n    totalTickets: {\r\n      marginRight: '80px',\r\n    },\r\n    prizeGallerySection: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    scrollIcon: {\r\n      color: theme.palette.common.white,\r\n      transform: `rotate(90deg)`,\r\n      fontSize: '50px',\r\n      opacity: '0.6',\r\n      marginTop: '20px',\r\n      marginBottom: '60px',\r\n    },\r\n    spacer: {\r\n      width: '100%',\r\n      height: '15px',\r\n    },\r\n  })\r\n);\r\n","import { FC, useCallback, useMemo, useRef } from 'react';\r\nimport { Button, IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport { sleep } from '@project-serum/common';\r\nimport toast from 'react-hot-toast';\r\nimport { useHistory } from 'react-router';\r\nimport { ArrowBack, DoubleArrow } from '@material-ui/icons';\r\n\r\nimport { useProgramApis } from '../../hooks/useProgramApis';\r\nimport { claimPrize as claimPrizeQuery } from '../../lib/actions/claimPrize';\r\nimport { Raffle } from '../../lib/types';\r\nimport { routes } from '../../router/routes';\r\nimport Screen from '../../components/layout/Screen';\r\nimport { expand } from '../../lib/randomnessTools';\r\nimport EndedRaffleActionSection from './components/EndedRaffleActionsSection';\r\nimport RaffleInfoSection from '../../components/RaffleInfoSection';\r\nimport PrizeGalleryEnded from './components/PrizeGalleryEnded';\r\nimport { PrizeShowcaseEnded } from './components/PrizeShowcaseEnded';\r\nimport useCommonStyles from '../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\ninterface IRaffleEndedScreenProps {\r\n  raffle: Raffle;\r\n  updateRaffle: () => void;\r\n}\r\n\r\nconst RaffleEndedScreen: FC<IRaffleEndedScreenProps> = ({\r\n  raffle,\r\n  updateRaffle,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const { push } = useHistory();\r\n  const { draffleClient } = useProgramApis();\r\n\r\n  const prizeGalleryRef = useRef<HTMLDivElement>(null);\r\n\r\n  const entrant = useMemo(() => {\r\n    if (!draffleClient.provider.wallet.publicKey) return;\r\n\r\n    return raffle?.entrants.get(\r\n      draffleClient.provider.wallet.publicKey.toString()\r\n    );\r\n  }, [raffle, draffleClient.provider.wallet.publicKey]); // \"Unnecessary\" dependency required due to React not picking up change in publicKey subfield\r\n\r\n  // Each winning ticket index for each prize\r\n  const winningTickets = useMemo(() => {\r\n    if (!raffle.randomness || !raffle.entrants || raffle.entrants.size === 0)\r\n      return [];\r\n    const secret = raffle.randomness;\r\n    return raffle.prizes.map((_, prizeIndex) => {\r\n      const rand = expand(secret, prizeIndex);\r\n      return rand % raffle.totalTickets;\r\n    });\r\n  }, [raffle]);\r\n\r\n  const claimPrize = useCallback(\r\n    async (prizeIndex: number, ticketIndex: number) => {\r\n      try {\r\n        await claimPrizeQuery(draffleClient, raffle, prizeIndex, ticketIndex);\r\n        await sleep(500);\r\n        updateRaffle();\r\n        toast.success('Prize claimed, check your wallet!');\r\n      } catch (error: any) {\r\n        if (error.msg) {\r\n          toast.error(`Transaction failed: ${error.msg}`);\r\n        } else {\r\n          toast.error('Unexpected error');\r\n        }\r\n      }\r\n    },\r\n    [draffleClient, raffle, updateRaffle]\r\n  );\r\n\r\n  const entrantWinningTickets = useMemo(() => {\r\n    if (!entrant || !winningTickets) return [];\r\n    return winningTickets.reduce<{ prizeIndex: number; ticketIndex: number }[]>(\r\n      (acc, ticketIndex, prizeIndex) => {\r\n        if (entrant?.tickets.includes(ticketIndex)) {\r\n          return [...acc, { prizeIndex, ticketIndex }];\r\n        } else {\r\n          return acc;\r\n        }\r\n      },\r\n      []\r\n    );\r\n  }, [entrant, winningTickets]);\r\n\r\n  if (!raffle) return null;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {device === DeviceType.Phone ? (\r\n        <>\r\n          <Typography variant=\"h1\">\r\n            {`> ${raffle.metadata.name}`}\r\n            <span className={classes.raffleSubtitle}>[ended]</span>\r\n          </Typography>\r\n          <div className={classes.spacer} />\r\n          <RaffleInfoSection\r\n            raffle={raffle}\r\n            userConnected={!!draffleClient.provider.wallet.publicKey}\r\n            userTickets={entrant?.tickets}\r\n          />\r\n          <div className={classes.spacer} />\r\n          <div className={classes.actionSectionContainer}>\r\n            <div className={classes.actionSection}>\r\n              <EndedRaffleActionSection\r\n                raffle={raffle}\r\n                userPubkey={draffleClient.provider.wallet.publicKey}\r\n                entrant={entrant}\r\n                entrantWinningTickets={entrantWinningTickets}\r\n                scrollRef={prizeGalleryRef}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.spacer} />\r\n          <Typography variant=\"overline\">Results</Typography>\r\n          <PrizeGalleryEnded\r\n            raffle={raffle}\r\n            entrantWinningTickets={entrantWinningTickets}\r\n            winningTickets={winningTickets}\r\n            claimPrize={claimPrize}\r\n            scrollRef={prizeGalleryRef}\r\n          />\r\n          <div className={classes.spacer} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={classes.topSection}>\r\n            <div className={classes.raffleTitle}>\r\n              <div className={classes.leftTitleSection}>\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  className={classes.backButton}\r\n                  onClick={() => push(routes.RAFFLES)}\r\n                >\r\n                  <ArrowBack className={classes.backButtonIcon} />\r\n                </IconButton>\r\n              </div>\r\n              <div className={classes.middleTitleSection}>\r\n                <Typography variant=\"h1\">{`> ${raffle.metadata.name}`}</Typography>\r\n                <Tooltip\r\n                  title={raffle.endTimestamp.toString()}\r\n                  placement=\"bottom\"\r\n                >\r\n                  <Typography variant=\"h1\" className={classes.raffleSubtitle}>\r\n                    [ended]\r\n                  </Typography>\r\n                </Tooltip>\r\n              </div>\r\n              <div className={classes.rightTitleSection}></div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.mainContent}>\r\n            <div className={classes.prizesSection}>\r\n              <Typography variant=\"overline\">\r\n                Prizes\r\n                {raffle.prizes.length > 3 && (\r\n                  <>\r\n                    {' -'}\r\n                    <Button\r\n                      variant=\"text\"\r\n                      disableRipple\r\n                      className={classes.seeAllPrizesButton}\r\n                      onClick={() =>\r\n                        prizeGalleryRef.current?.scrollIntoView({\r\n                          behavior: 'smooth',\r\n                          block: 'start',\r\n                        })\r\n                      }\r\n                    >\r\n                      See all {raffle.prizes.length}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </Typography>\r\n              <PrizeShowcaseEnded\r\n                raffle={raffle}\r\n                winningTickets={winningTickets}\r\n              />\r\n            </div>\r\n            <div className={classes.detailsSection}>\r\n              <RaffleInfoSection\r\n                raffle={raffle}\r\n                userConnected={!!draffleClient.provider.wallet.publicKey}\r\n                userTickets={entrant?.tickets}\r\n              />\r\n              <div className={classes.actionSectionContainer}>\r\n                <div className={classes.actionSection}>\r\n                  <EndedRaffleActionSection\r\n                    raffle={raffle}\r\n                    userPubkey={draffleClient.provider.wallet.publicKey}\r\n                    entrant={entrant}\r\n                    entrantWinningTickets={entrantWinningTickets}\r\n                    scrollRef={prizeGalleryRef}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.prizeGallerySection}>\r\n            <DoubleArrow className={classes.scrollIcon} />\r\n            <PrizeGalleryEnded\r\n              raffle={raffle}\r\n              entrantWinningTickets={entrantWinningTickets}\r\n              winningTickets={winningTickets}\r\n              claimPrize={claimPrize}\r\n              scrollRef={prizeGalleryRef}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      <div className={classes.spacer} />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface IRaffleEndedDetailsProps {\r\n  raffle: Raffle;\r\n  updateRaffle: () => void;\r\n}\r\n\r\nconst RaffleEndedScreenWithLayout: FC<IRaffleEndedDetailsProps> = (props) => {\r\n  const { push } = useHistory();\r\n\r\n  return (\r\n    <Screen onBackNavigation={() => push(routes.RAFFLES)}>\r\n      <RaffleEndedScreen {...props} />\r\n    </Screen>\r\n  );\r\n};\r\n\r\nexport default RaffleEndedScreenWithLayout;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      height: device === DeviceType.Phone ? '25vw' : '260px',\r\n      width: device === DeviceType.Phone ? '100%' : '200px',\r\n      position: 'relative',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        boxShadow: '0 3px 10px 0 #111',\r\n        transform: 'scale3d(1.02, 1.02, 1)',\r\n      },\r\n      '&:active': {\r\n        transform: 'scale3d(1, 1, 1)',\r\n      },\r\n      display: 'flex',\r\n      flexDirection: device === DeviceType.Phone ? 'row' : 'column',\r\n      justifyContent: device === DeviceType.Phone ? 'flex-start' : 'center',\r\n    }),\r\n    media: ({ device }) => ({\r\n      ...(device === DeviceType.Phone\r\n        ? { width: '25vw', height: '25vw' }\r\n        : { height: '200px' }),\r\n    }),\r\n    prizeInfo: ({ device }) => ({\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-around',\r\n      alignItems: device === DeviceType.Phone ? 'baseline' : 'center',\r\n      fontSize: device === DeviceType.Phone ? '15px' : '15px',\r\n      padding: device === DeviceType.Phone ? ' 8px' : '8px',\r\n    }),\r\n    prizeNameRow: ({ device }) => ({\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      color: theme.palette.primary.main,\r\n      fontWeight: 'bold',\r\n      textTransform: 'uppercase',\r\n      alignItems: 'center',\r\n      justifyContent: device === DeviceType.Phone ? 'left' : 'center',\r\n      textAlign: device === DeviceType.Phone ? 'left' : 'center',\r\n    }),\r\n    prizeName: {\r\n      marginLeft: '5px',\r\n      color: theme.palette.primary.main,\r\n    },\r\n    cardBadge: {\r\n      fontSize: '12px',\r\n      fontWeight: 'bold',\r\n      width: '70px',\r\n      textAlign: 'center',\r\n      padding: '2px',\r\n      position: 'absolute',\r\n      top: '5px',\r\n      right: '5px',\r\n      color: 'white',\r\n      backgroundColor: theme.palette.primary.main,\r\n      borderRadius: '2px',\r\n      boxShadow: '0 2px 6px 0 #000',\r\n    },\r\n  })\r\n);\r\n","import React, { FC, useMemo, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardClassKey,\r\n  CardMedia,\r\n  PaperProps,\r\n  StandardProps,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\n\r\nimport { Prize } from '../../../../lib/types';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport ShortenedString from '../../../../components/ShortenedString';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\nimport PrizeDetailsModal from '../../../../components/PrizeDetailsModal';\r\n\r\nexport interface PrizeCardOngoingProps\r\n  extends StandardProps<PaperProps, CardClassKey> {\r\n  prize: Prize;\r\n  index?: number;\r\n}\r\n\r\nconst PrizeCardOngoing: FC<PrizeCardOngoingProps> = ({\r\n  prize,\r\n  index,\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const imageUrl = prize.meta.imageUri;\r\n\r\n  const maxPrizeNameLength = useMemo(\r\n    () => (device === DeviceType.Phone ? 14 : 18),\r\n    [device]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PrizeDetailsModal\r\n        isOpen={isModalOpen}\r\n        setIsOpen={setIsModalOpen}\r\n        prize={prize}\r\n        prizeRank={index}\r\n      />\r\n      <Card\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}\r\n        {...otherProps}\r\n        className={`${classes.root} ${className}`}\r\n      >\r\n        {!isLoaded && (\r\n          <div>\r\n            <Skeleton\r\n              variant=\"rect\"\r\n              animation={'wave'}\r\n              classes={{\r\n                root: classes.media,\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <CardMedia\r\n          component=\"img\"\r\n          classes={{\r\n            root: classes.media,\r\n          }}\r\n          src={imageUrl}\r\n          alt={prize.mint.name}\r\n          style={isLoaded ? {} : { display: 'none' }}\r\n          onLoad={() => setIsLoaded(true)}\r\n        />\r\n        <CardActions className={classes.prizeInfo}>\r\n          <div className={classes.prizeNameRow}>\r\n            <Typography variant=\"body1\">\r\n              {index !== undefined && `#${index + 1} `}\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.prizeName}>\r\n              <ShortenedString\r\n                message={prize.mint.name}\r\n                maxCharLength={maxPrizeNameLength}\r\n                addTooltip\r\n              />\r\n            </Typography>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrizeCardOngoing;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  prizesGrid: {\r\n    display: 'flex',\r\n    flexGrow: 'initial',\r\n    width: '100%',\r\n  },\r\n  prizeItem: {\r\n    margin: '0 5px 30px 5px',\r\n  },\r\n  claimButtonContainer: {\r\n    marginTop: '20px',\r\n  },\r\n  claimButtonContent: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: '#72F3B0D',\r\n  },\r\n}));\r\n","import React, { FC } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { Prize } from '../../../../lib/types';\r\nimport PrizeCardOngoing from '../PrizeCardOngoing';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\n\r\nexport interface PrizeShowcaseProps {\r\n  prizes: Prize[];\r\n}\r\n\r\nexport const PrizeShowcase: FC<PrizeShowcaseProps> = ({ prizes }) => {\r\n  const classes = { ...useCommonStyles(), ...useStyles() };\r\n\r\n  if (prizes.length === 0) return <div className={classes.root}>No prizes</div>;\r\n\r\n  if (prizes.length === 1)\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          justifyContent={'space-evenly'}\r\n          direction={'row'}\r\n          className={classes.prizesGrid}\r\n        >\r\n          <Grid item>\r\n            <PrizeCardOngoing prize={prizes[0]} className={classes.prizeItem} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n\r\n  if (prizes.length === 2)\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          justifyContent={'space-evenly'}\r\n          direction={'row'}\r\n          className={classes.prizesGrid}\r\n        >\r\n          <Grid item>\r\n            <PrizeCardOngoing\r\n              prize={prizes[0]}\r\n              index={0}\r\n              className={classes.prizeItem}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <PrizeCardOngoing\r\n              prize={prizes[1]}\r\n              className={classes.prizeItem}\r\n              index={1}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justifyContent={'space-evenly'}\r\n        direction={'row'}\r\n        className={classes.prizesGrid}\r\n      >\r\n        <Grid item>\r\n          <PrizeCardOngoing\r\n            prize={prizes[0]}\r\n            index={0}\r\n            className={classes.prizeItem}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PrizeCardOngoing\r\n            prize={prizes[1]}\r\n            className={classes.prizeItem}\r\n            index={1}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PrizeCardOngoing\r\n            prize={prizes[2]}\r\n            className={classes.prizeItem}\r\n            index={2}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrizeShowcase;\r\n","import {\r\n  ASSOCIATED_TOKEN_PROGRAM_ID,\r\n  Token,\r\n  TOKEN_PROGRAM_ID,\r\n  u64,\r\n} from '@solana/spl-token';\r\nimport {\r\n  PublicKey,\r\n  SystemProgram,\r\n  Transaction,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nimport { VAULT_TOKEN_IN, VAULT_TOKEN_OUT } from '../../config/accounts';\r\nimport { DISPENSER_REGISTRY_ADDRESS } from '../../config/programIds';\r\nimport { wrappedSOL } from '../../config/tokenRegistry';\r\nimport {\r\n  DispenserProgram,\r\n  DraffleProgram,\r\n} from '../../providers/ProgramApisProvider';\r\nimport { createOwnAssociatedTokenAccountInstruction } from '../accounts';\r\nimport { PaymentOption, Raffle } from '../types';\r\n\r\nexport const BUY_TICKETS_TX_FEE_LAMPORTS = 5;\r\n\r\nexport const calculateBasketPrice = (\r\n  ticketPrice: u64,\r\n  ticketAmount: number,\r\n  paymentOption: PaymentOption\r\n) =>\r\n  ticketPrice\r\n    .muln(ticketAmount)\r\n    .mul(paymentOption.dispenserPriceIn)\r\n    .div(paymentOption.dispenserPriceOut);\r\n\r\nexport const buyTickets = async (\r\n  draffleClient: DraffleProgram,\r\n  dispenserClient: DispenserProgram,\r\n  raffle: Raffle,\r\n  ticketAmount: number,\r\n  paymentOption: PaymentOption,\r\n  buyerATAExists: boolean\r\n) => {\r\n  // Compute buyer ATA for tickets purchase\r\n  const buyerTokenAccount = await Token.getAssociatedTokenAddress(\r\n    ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    TOKEN_PROGRAM_ID,\r\n    paymentOption.mint.publicKey,\r\n    draffleClient.provider.wallet.publicKey\r\n  );\r\n  let finalBuyerAccount = buyerTokenAccount;\r\n  let instructions: TransactionInstruction[] = [];\r\n\r\n  // Required for wSOL payment only because the associated amount is read from native lamports\r\n  // In other cases user cannot click \"BUY\" if no ATA (= not enough to buy), and won't hit `buyTicket`\r\n  if (paymentOption.mint.publicKey.toBase58() === wrappedSOL) {\r\n    if (!buyerATAExists) {\r\n      instructions.push(\r\n        createOwnAssociatedTokenAccountInstruction(\r\n          new PublicKey(wrappedSOL),\r\n          buyerTokenAccount,\r\n          draffleClient.provider.wallet.publicKey\r\n        )\r\n      );\r\n    }\r\n\r\n    instructions.push(\r\n      SystemProgram.transfer({\r\n        fromPubkey: draffleClient.provider.wallet.publicKey,\r\n        toPubkey: buyerTokenAccount,\r\n        lamports: calculateBasketPrice(\r\n          raffle.proceeds.ticketPrice,\r\n          ticketAmount,\r\n          paymentOption\r\n        ).toNumber(),\r\n      })\r\n    );\r\n    instructions.push(\r\n      // @ts-ignore\r\n      Token.createSyncNativeInstruction(TOKEN_PROGRAM_ID, buyerTokenAccount)\r\n    );\r\n  }\r\n\r\n  // Get raffle proceeds token from dispenser if needed\r\n  if (\r\n    paymentOption.mint.publicKey.toString() !==\r\n    raffle.proceeds.mint.publicKey.toString()\r\n  ) {\r\n    const basketPrice = calculateBasketPrice(\r\n      raffle.proceeds.ticketPrice,\r\n      ticketAmount,\r\n      paymentOption\r\n    );\r\n\r\n    console.log(\r\n      `Swapping ${basketPrice.toString()} ${\r\n        paymentOption.mint.symbol\r\n      } for ${raffle.proceeds.ticketPrice.muln(ticketAmount).toString()} ${\r\n        raffle.proceeds.mint.symbol\r\n      }`\r\n    );\r\n\r\n    const buyerIntermediaryTokenAccount = await Token.getAssociatedTokenAddress(\r\n      ASSOCIATED_TOKEN_PROGRAM_ID,\r\n      TOKEN_PROGRAM_ID,\r\n      raffle.proceeds.mint.publicKey,\r\n      draffleClient.provider.wallet.publicKey\r\n    );\r\n\r\n    // Safe amount requested, because only multiplied.\r\n    // Together with program-side logic, only consequence of potentially non-integer\r\n    // associated tokenIn amount is under-charging the user by remainder amount\r\n    instructions.push(\r\n      dispenserClient.instruction.swap(\r\n        raffle.proceeds.ticketPrice.muln(ticketAmount),\r\n        {\r\n          accounts: {\r\n            registry: DISPENSER_REGISTRY_ADDRESS,\r\n            swapper: dispenserClient.provider.wallet.publicKey,\r\n            vaultTokenIn: VAULT_TOKEN_IN,\r\n            vaultTokenOut: VAULT_TOKEN_OUT,\r\n            buyerTokenInAccount: buyerTokenAccount,\r\n            buyerTokenOutAccount: buyerIntermediaryTokenAccount,\r\n            tokenProgram: TOKEN_PROGRAM_ID,\r\n          },\r\n        }\r\n      )\r\n    );\r\n\r\n    finalBuyerAccount = buyerIntermediaryTokenAccount;\r\n  }\r\n\r\n  instructions.push(\r\n    draffleClient.instruction.buyTickets(ticketAmount, {\r\n      accounts: {\r\n        raffle: raffle.publicKey,\r\n        entrants: raffle.entrantsAccountAddress,\r\n        proceeds: raffle.proceeds.address,\r\n        buyerTokenAccount: finalBuyerAccount,\r\n        buyerTransferAuthority: draffleClient.provider.wallet.publicKey,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n      },\r\n    })\r\n  );\r\n\r\n  return draffleClient.provider.sendAndConfirm(\r\n    new Transaction().add(...instructions)\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Button as MuiButton, ButtonProps } from '@material-ui/core';\r\n\r\nexport const Button: FC<ButtonProps> = ({ children, ...otherProps }) => {\r\n  return <MuiButton {...otherProps}>{children}</MuiButton>;\r\n};\r\n\r\nexport default Button;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: '15px 20px 15px 20px',\r\n  },\r\n  titleSection: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    marginBottom: '15px',\r\n    color: '#26a6cb'\r\n  },\r\n  amountLabel: {\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  ticketAmountSection: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    textAlign: 'center',\r\n    marginBottom: '15px',\r\n  },\r\n  ticketAmountSectionLeft: {\r\n    width: '15%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  ticketAmountSectionMiddle: {\r\n    width: '65%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  ticketAmountSectionRight: {\r\n    width: '15%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  changeTicketAmountButton: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  ticketAmountTextField: {\r\n    width: '100%',\r\n    height: '100%',\r\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: '#26a6cb',\r\n    },\r\n    '&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n    '& .MuiOutlinedInput-input': {\r\n      color: '#26a6cb',\r\n      textAlign: 'center',\r\n      fontSize: '15px',\r\n    },\r\n    '& .MuiOutlinedInput-adornedStart': {\r\n      paddingLeft: '8px',\r\n    },\r\n    '& .MuiOutlinedInput-adornedEnd': {\r\n      paddingRight: '8px',\r\n    },\r\n  },\r\n  maxButton: {\r\n    color: '#26a6cb',\r\n    fontSize: '15px',\r\n    width: '30px',\r\n    minWidth: '30px',\r\n    padding: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n\r\n  priceSection: {\r\n    width: '100%',\r\n    height: '80px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    marginBottom: '10px',\r\n  },\r\n  priceLabel: {\r\n    margin: '-5px 0 -5px 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  paymentOptionSection: {\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  basketPrice: {\r\n    width: '50%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'baseline',\r\n  },\r\n  paymentOptionSelect: {\r\n    width: '100%',\r\n    height: '50px',\r\n    marginTop: '-10px',\r\n    padding: '0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  paymentOptionSelection: {\r\n    padding: '0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  paymentOptionMenu: {\r\n    padding: '0 10px 0 0',\r\n    margin: '5px 10px 5px 10px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n  },\r\n  paymentOptionLogoContainer: {\r\n    height: '30px',\r\n    width: '30px',\r\n    margin: '5px 10px 5px 10px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  paymentOptionLogo: {\r\n    height: '100%',\r\n    borderRadius: '50%',\r\n  },\r\n\r\n  buySection: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  purchaseButtonContent: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  purchaseButtonContentLeft: {\r\n    width: '20%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  purchaseButtonContentMiddle: {\r\n    width: '60%',\r\n  },\r\n  purchaseButtonContentRight: {\r\n    width: '20%',\r\n  },\r\n  purchaseSpinner: {\r\n    height: '50px',\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  walletBalance: {\r\n    marginTop: '5px',\r\n    fontSize: '12px',\r\n    color: '#777',\r\n    textAlign: 'left',\r\n  },\r\n}));\r\n","import {\r\n  ChangeEvent,\r\n  FC,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  CircularProgress,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { sleep } from '@project-serum/common';\r\nimport { u64 } from '@solana/spl-token';\r\nimport toast from 'react-hot-toast';\r\nimport {\r\n  AddBoxRounded,\r\n  IndeterminateCheckBoxRounded,\r\n} from '@material-ui/icons';\r\n\r\nimport { MAX_NUMBER_OF_PARTICIPANTS } from '../../../../config/misc';\r\nimport {\r\n  buyTickets,\r\n  BUY_TICKETS_TX_FEE_LAMPORTS,\r\n  calculateBasketPrice,\r\n} from '../../../../lib/actions/buyTickets';\r\nimport { PaymentOption, Raffle } from '../../../../lib/types';\r\nimport {\r\n  getDisplayAmount,\r\n  getBuyerATABalance,\r\n  getWalletLamports,\r\n} from '../../../../lib/accounts';\r\nimport Button from '../../../../components/Button';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { tokenInfoMap, wrappedSOL } from '../../../../config/tokenRegistry';\r\nimport { useProgramApis } from '../../../../hooks/useProgramApis';\r\nimport { useStyles } from './styles';\r\nimport { DispenserRegistryRaw } from '../../../../providers/ProgramApisProvider';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport ShortenedString from '../../../../components/ShortenedString';\r\n\r\nconst MAX_TICKET_AMOUNT = 1000;\r\n\r\nconst isLamportsEnough = (lamports: number | undefined) =>\r\n  (lamports ?? 0) >= BUY_TICKETS_TX_FEE_LAMPORTS;\r\n\r\ninterface AccountBalance {\r\n  mint: PublicKey;\r\n  amount: u64 | undefined;\r\n}\r\n\r\ninterface PurchaseTicketsProps {\r\n  raffle: Raffle;\r\n  updateRaffle: () => void;\r\n}\r\n\r\nexport const PurchaseTickets: FC<PurchaseTicketsProps> = ({\r\n  raffle,\r\n  updateRaffle,\r\n}) => {\r\n  const classes = { ...useCommonStyles(), ...useStyles() };\r\n  const { draffleClient, dispenserClient } = useProgramApis();\r\n\r\n  const [purchaseOngoing, setPurchaseOngoing] = useState(false);\r\n  const [walletLamports, setWalletLamports] = useState<number>();\r\n  // const [ticketPrice, setTicketPrice] = useState<PaymentOption>({\r\n  //   mint: raffle.proceeds.mint,\r\n  //   price: raffle.proceeds.ticketPrice,\r\n  //   price: raffle.proceeds.ticketPrice,\r\n  // });\r\n\r\n  const nativePaymentOption = useMemo(\r\n    () => ({\r\n      mint: raffle.proceeds.mint,\r\n      dispenserPriceIn: new u64(1),\r\n      dispenserPriceOut: new u64(1),\r\n    }),\r\n    [raffle]\r\n  );\r\n  const [paymentOption, setPaymentOption] =\r\n    useState<PaymentOption>(nativePaymentOption);\r\n  const [buyerATABalance, setBuyerATABalance] = useState<AccountBalance>({\r\n    mint: raffle.proceeds.mint.publicKey,\r\n    amount: undefined,\r\n  });\r\n  const [ticketAmount, setTicketAmount] = useState<number>(1);\r\n  const [dispensers, setDispensers] = useState<\r\n    { account: DispenserRegistryRaw; publicKey: PublicKey }[]\r\n  >([]);\r\n\r\n  const paymentOptions = useMemo(\r\n    () =>\r\n      (raffle.metadata.alternatePurchaseMints || []).reduce(\r\n        (acc, mintAddress) => {\r\n          if (!tokenInfoMap.has(mintAddress.toString())) {\r\n            console.log(\r\n              `Mint ${mintAddress.toString()} not found in token registry`\r\n            );\r\n            return acc;\r\n          }\r\n\r\n          const dispenser = dispensers.find(\r\n            (d) =>\r\n              d.account.mintTokenOut.toString() ===\r\n                raffle.proceeds.mint.publicKey.toString() &&\r\n              d.account.mintTokenIn.toString() === mintAddress.toString()\r\n          );\r\n          if (!dispenser) {\r\n            return acc;\r\n          }\r\n\r\n          const tokenInfo = tokenInfoMap.get(mintAddress.toString())!;\r\n          acc.set(mintAddress.toString(), {\r\n            mint: {\r\n              name: tokenInfo.name,\r\n              publicKey: mintAddress,\r\n              logoUrl: tokenInfo.logoURI,\r\n              symbol: tokenInfo.symbol,\r\n              decimals: tokenInfo.decimals,\r\n            },\r\n            dispenserPriceIn: dispenser.account.rateTokenIn,\r\n            dispenserPriceOut: dispenser.account.rateTokenOut,\r\n          });\r\n          return acc;\r\n        },\r\n        new Map<string, PaymentOption>([\r\n          [\r\n            raffle.proceeds.mint.publicKey.toString(),\r\n            {\r\n              mint: raffle.proceeds.mint,\r\n              dispenserPriceIn: new u64(1),\r\n              dispenserPriceOut: new u64(1),\r\n            },\r\n          ],\r\n        ])\r\n      ),\r\n    [raffle, dispensers]\r\n  );\r\n\r\n  const getBasketPrice = useCallback(\r\n    (ticketAmount: number) =>\r\n      calculateBasketPrice(\r\n        raffle.proceeds.ticketPrice,\r\n        ticketAmount,\r\n        paymentOption\r\n      ),\r\n    [raffle.proceeds.ticketPrice, paymentOption]\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispenserClient.account.registry.all().then(setDispensers);\r\n  }, [dispenserClient, setDispensers]);\r\n\r\n  useEffect(() => {\r\n    if (!draffleClient.provider.wallet?.publicKey) return;\r\n    let timerId: ReturnType<typeof setInterval>;\r\n\r\n    const updateLamports = async () => {\r\n      const newWalletLamports = await getWalletLamports(draffleClient.provider);\r\n      setWalletLamports(newWalletLamports);\r\n      if (\r\n        isLamportsEnough(walletLamports) &&\r\n        !(paymentOption.mint.publicKey.toBase58() === wrappedSOL)\r\n      ) {\r\n        clearInterval(timerId);\r\n      }\r\n    };\r\n\r\n    updateLamports();\r\n    timerId = setInterval(() => {\r\n      updateLamports();\r\n    }, 5000);\r\n    return () => clearInterval(timerId);\r\n  }, [\r\n    walletLamports,\r\n    draffleClient.provider,\r\n    draffleClient.provider.wallet.publicKey,\r\n    paymentOption.mint.publicKey,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!draffleClient.provider.wallet.publicKey) return;\r\n    async function updateBuyerATABalance() {\r\n      setBuyerATABalance({\r\n        mint: paymentOption.mint.publicKey,\r\n        amount: await getBuyerATABalance(\r\n          draffleClient.provider,\r\n          paymentOption.mint.publicKey\r\n        ),\r\n      });\r\n    }\r\n    const timerId = setInterval(() => {\r\n      updateBuyerATABalance();\r\n    }, 5000);\r\n    updateBuyerATABalance();\r\n    return () => clearInterval(timerId);\r\n  }, [\r\n    draffleClient.provider,\r\n    draffleClient.provider.wallet,\r\n    paymentOption.mint.publicKey,\r\n  ]);\r\n\r\n  const lamportsEnough = useMemo(\r\n    () => isLamportsEnough(walletLamports),\r\n    [walletLamports]\r\n  );\r\n  const buyerTokenBalance = useMemo(() => {\r\n    return paymentOption.mint.publicKey.toBase58() === wrappedSOL\r\n      ? {\r\n          mint: new PublicKey(wrappedSOL),\r\n          amount: new u64(walletLamports ?? 0),\r\n        } // We ignore the potential wSOL ATA\r\n      : buyerATABalance;\r\n  }, [walletLamports, buyerATABalance, paymentOption.mint.publicKey]);\r\n\r\n  const hasEnoughFunds = useMemo(() => {\r\n    const tokensEnough = buyerTokenBalance.amount?.gte(\r\n      getBasketPrice(ticketAmount)\r\n    );\r\n    return tokensEnough && lamportsEnough;\r\n  }, [buyerTokenBalance, lamportsEnough, ticketAmount, getBasketPrice]);\r\n\r\n  const maxTicketsToBuyable = useMemo(() => {\r\n    if (!buyerTokenBalance.amount) return new u64(0);\r\n    const newMax = buyerTokenBalance.amount\r\n      .mul(paymentOption.dispenserPriceOut)\r\n      .div(paymentOption.dispenserPriceIn)\r\n      .div(raffle.proceeds.ticketPrice);\r\n\r\n    if (\r\n      paymentOption.mint.publicKey.toString() ===\r\n        buyerTokenBalance.mint.toString() &&\r\n      newMax.ltn(ticketAmount)\r\n    )\r\n      setTicketAmount(newMax.toNumber());\r\n    return newMax;\r\n  }, [\r\n    raffle.proceeds.ticketPrice,\r\n    ticketAmount,\r\n    buyerTokenBalance,\r\n    paymentOption,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let newTicketAmount = ticketAmount === 0 ? 1 : ticketAmount;\r\n    Math.min(ticketAmount, maxTicketsToBuyable.toNumber());\r\n    setTicketAmount(newTicketAmount);\r\n  }, [maxTicketsToBuyable, ticketAmount, setTicketAmount]);\r\n\r\n  const hasEnoughFundsToIncrementTicket = useMemo(() => {\r\n    const tokensEnough = buyerTokenBalance.amount?.gte(\r\n      getBasketPrice(ticketAmount + 1)\r\n    );\r\n    return tokensEnough && lamportsEnough;\r\n  }, [buyerTokenBalance, lamportsEnough, ticketAmount, getBasketPrice]);\r\n\r\n  const onBuyTickets = useCallback(async () => {\r\n    try {\r\n      setPurchaseOngoing(true);\r\n      const buyerATAExists = buyerATABalance.amount !== undefined;\r\n      await buyTickets(\r\n        draffleClient,\r\n        dispenserClient,\r\n        raffle,\r\n        ticketAmount,\r\n        paymentOption,\r\n        buyerATAExists\r\n      );\r\n      setTicketAmount(1);\r\n      await sleep(500);\r\n      updateRaffle();\r\n      toast.success(`You bought ${ticketAmount} ticket(s)`);\r\n    } catch (error: any) {\r\n      if (error.msg) {\r\n        toast.error(`Transaction failed: ${error.msg}`);\r\n      } else {\r\n        toast.error('Unexpected error');\r\n      }\r\n    }\r\n    setPurchaseOngoing(false);\r\n  }, [\r\n    draffleClient,\r\n    dispenserClient,\r\n    raffle,\r\n    ticketAmount,\r\n    paymentOption,\r\n    buyerATABalance,\r\n    setTicketAmount,\r\n    updateRaffle,\r\n  ]);\r\n\r\n  const onSelectPurchaseMint = (\r\n    event: ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => setPaymentOption(paymentOptions.get(event.target.value as string)!);\r\n\r\n  return (\r\n    <div className={`${classes.actionSection} ${classes.root}`}>\r\n      <Typography variant=\"h3\" className={classes.titleSection}>\r\n        Purchase Tickets\r\n      </Typography>\r\n      <div className={classes.amountLabel}>\r\n        <Typography variant=\"overline\">Amount</Typography>\r\n      </div>\r\n      <div className={classes.ticketAmountSection}>\r\n        <div className={classes.ticketAmountSectionLeft}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() =>\r\n              setTicketAmount((currentAmount) => Math.max(currentAmount - 1, 1))\r\n            }\r\n            disabled={ticketAmount <= 1}\r\n            className={classes.changeTicketAmountButton}\r\n          >\r\n            <IndeterminateCheckBoxRounded style={{ fontSize: 30 }} />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.ticketAmountSectionMiddle}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            className={classes.ticketAmountTextField}\r\n            value={ticketAmount}\r\n            onChange={(event) => {\r\n              const newValue = event.target.value;\r\n              const re = /^[0-9\\b]+$/;\r\n              if (newValue !== '' && !re.test(newValue)) return;\r\n\r\n              let numericValue = Math.min(\r\n                Math.min(\r\n                  Number(newValue),\r\n                  MAX_TICKET_AMOUNT - raffle.totalTickets\r\n                ),\r\n                maxTicketsToBuyable.toNumber()\r\n              );\r\n\r\n              setTicketAmount(numericValue);\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"text\"\r\n                  disableRipple\r\n                  className={classes.maxButton}\r\n                  onClick={() => {\r\n                    let maxTickets = Math.min(\r\n                      MAX_TICKET_AMOUNT - raffle.totalTickets,\r\n                      maxTicketsToBuyable.toNumber()\r\n                    );\r\n                    setTicketAmount(maxTickets);\r\n                  }}\r\n                >\r\n                  MAX\r\n                </Button>\r\n              ),\r\n              startAdornment: (\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"text\"\r\n                  disableRipple\r\n                  className={classes.maxButton}\r\n                  onClick={() => setTicketAmount(1)}\r\n                >\r\n                  MIN\r\n                </Button>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.ticketAmountSectionRight}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() =>\r\n              setTicketAmount((currentAmount) => currentAmount + 1)\r\n            }\r\n            disabled={\r\n              raffle.totalTickets + ticketAmount >=\r\n                MAX_NUMBER_OF_PARTICIPANTS ||\r\n              !hasEnoughFundsToIncrementTicket ||\r\n              ticketAmount + 1 > MAX_TICKET_AMOUNT - raffle.totalTickets\r\n            }\r\n            className={classes.changeTicketAmountButton}\r\n          >\r\n            <AddBoxRounded style={{ fontSize: 30 }} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={classes.priceSection}>\r\n        <div className={classes.paymentOptionSection}>\r\n          <div className={classes.basketPrice}>\r\n            <Typography variant=\"overline\">Total Price</Typography>\r\n            <div\r\n              style={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\">\r\n                {getDisplayAmount(\r\n                  getBasketPrice(ticketAmount),\r\n                  paymentOption.mint\r\n                )}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <div className={classes.basketPrice}>\r\n            <Typography variant=\"overline\">Currency</Typography>\r\n            {paymentOptions.size === 1 ? (\r\n              <div className={classes.paymentOptionSelection}>\r\n                <Typography variant=\"h4\">\r\n                  {raffle.proceeds.mint.symbol}\r\n                </Typography>\r\n                <div className={classes.paymentOptionLogoContainer}>\r\n                  <img\r\n                    className={classes.paymentOptionLogo}\r\n                    src={raffle.proceeds.mint.logoUrl}\r\n                    alt={`Logo for ${raffle.proceeds.mint.name}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Select\r\n                variant=\"standard\"\r\n                label=\"Purchase mint\"\r\n                value={paymentOption.mint.publicKey.toString()}\r\n                onChange={onSelectPurchaseMint}\r\n                className={classes.paymentOptionSelect}\r\n                MenuProps={{\r\n                  disableScrollLock: true,\r\n                }}\r\n                renderValue={(optionKey) => {\r\n                  const option = paymentOptions.get(optionKey as string)!;\r\n                  return (\r\n                    <div className={classes.paymentOptionSelection}>\r\n                      <Typography variant=\"h4\">{option.mint.symbol}</Typography>\r\n                      <div className={classes.paymentOptionLogoContainer}>\r\n                        <img\r\n                          className={classes.paymentOptionLogo}\r\n                          src={option.mint.logoUrl}\r\n                          alt={`Logo for ${option.mint.name}`}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  Select purchase currency\r\n                </MenuItem>\r\n                {[...paymentOptions.values()].map(({ mint }) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={mint.publicKey.toString()}\r\n                      value={mint.publicKey.toString()}\r\n                      classes={{ root: classes.paymentOptionMenu }}\r\n                    >\r\n                      <div className={classes.paymentOptionLogoContainer}>\r\n                        <img\r\n                          className={classes.paymentOptionLogo}\r\n                          src={mint.logoUrl}\r\n                          alt={`Logo for ${mint.name}`}\r\n                        />\r\n                      </div>\r\n                      <Typography variant=\"body1\">\r\n                        <ShortenedString\r\n                          message={mint.name}\r\n                          maxCharLength={12}\r\n                        />\r\n                        {` (${mint.symbol})`}\r\n                      </Typography>\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.buySection}>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.mainButton}\r\n          onClick={onBuyTickets}\r\n          disabled={\r\n            ticketAmount === 0 ||\r\n            raffle.totalTickets + ticketAmount > MAX_NUMBER_OF_PARTICIPANTS ||\r\n            !hasEnoughFunds ||\r\n            purchaseOngoing\r\n          }\r\n        >\r\n          <div className={classes.purchaseButtonContent}>\r\n            {purchaseOngoing ? (\r\n              <>\r\n                <div className={classes.purchaseButtonContentLeft}>\r\n                  <CircularProgress\r\n                    size={20}\r\n                    className={classes.purchaseSpinner}\r\n                  />\r\n                </div>\r\n                <div className={classes.purchaseButtonContentMiddle}>\r\n                  Processing...\r\n                </div>\r\n                <div className={classes.purchaseButtonContentRight} />\r\n              </>\r\n            ) : (\r\n              <>Buy ticket {!lamportsEnough && '(Insufficient SOL)'}</>\r\n            )}\r\n          </div>\r\n        </Button>\r\n        <div className={classes.walletBalance}>\r\n          Wallet balance:{' '}\r\n          {buyerTokenBalance\r\n            ? getDisplayAmount(\r\n                buyerTokenBalance.amount || new u64(0),\r\n                paymentOption.mint\r\n              )\r\n            : 0}{' '}\r\n          {paymentOption.mint.symbol}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles, alpha } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      height: 'inherit',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    actionTagline: {\r\n      width: '100%',\r\n      marginBottom: '20px',\r\n    },\r\n    textHighlight: {\r\n      fontWeight: 'bold',\r\n      color: theme.palette.secondary.main,\r\n      marginBottom: '10px', \r\n    },\r\n    topSection: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n    },\r\n    raffleTitle: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      justifyItems: 'space-between',\r\n    },\r\n    leftTitleSection: {\r\n      width: '10%',\r\n      display: 'flex',\r\n    },\r\n    middleTitleSection: {\r\n      width: '90%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n    },\r\n    rightTitleSection: {\r\n      width: '10%',\r\n    },\r\n    backButton: {\r\n      color: theme.palette.common.black,\r\n      backgroundColor: alpha(theme.palette.secondary.main, 0.8),\r\n      '&:hover': {\r\n        boxShadow: `0px 0px 5px ${'white'}, inset 0px 0px 5px ${'white'}`,\r\n        backgroundColor: alpha('#FF9455', 0.8),\r\n      },\r\n    },\r\n    countdown: ({ device }) => ({\r\n      width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      marginTop: '10px',\r\n      fontSize: device === DeviceType.Phone ? '32px' : '60px',\r\n      color: '#FF9455',\r\n      WebkitTextStrokeWidth: '1px',\r\n      WebkitTextStrokeColor: '#FF9455'\r\n    }),\r\n    mainContent: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'flex-end',\r\n    },\r\n    prizesSection: {\r\n      width: '70%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      paddingRight: '20px',\r\n      minHeight: '450px',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    prizesHeader: {\r\n      marginBottom: '10px',\r\n    },\r\n    labelPrizeAmount: {\r\n      marginLeft: '5px',\r\n      color: '#26a6cb',\r\n      textTransform: 'initial',\r\n      '&:hover': {\r\n        textShadow: `0px 0px 5px ${'#72F3B0D'}`,\r\n        backgroundColor: 'transparent',\r\n        textDecoration: 'none',\r\n      },\r\n    },\r\n    seeAllPrizesLabel: {},\r\n    detailsSection: ({ device }) => ({\r\n      paddingTop: '20px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-evenly',\r\n      width: '30%',\r\n      minWidth: device === DeviceType.Phone ? '256px' : '313px',\r\n      maxWidth: device === DeviceType.Phone ? '380px' : '380px',\r\n      maxHeight: '500px',\r\n    }),\r\n    actionSectionContainer: {\r\n      padding: '20px 0 20px 0',\r\n    },\r\n    actionSectionInner: {\r\n      padding: '10px 0',\r\n      width: '90%',\r\n      textAlign: 'center',\r\n    },\r\n    connectToBuyButton: {\r\n      width: '80%',\r\n      height: '40px',\r\n    },\r\n    scrollIcon: {\r\n      color: theme.palette.common.white,\r\n      transform: `rotate(90deg)`,\r\n      fontSize: '50px',\r\n      opacity: '0.6',\r\n      marginTop: '20px',\r\n      marginBottom: '60px',\r\n    },\r\n    spacer: {\r\n      width: '100%',\r\n      height: '20px',\r\n    },\r\n  })\r\n);\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    prizesGrid: {\r\n      scrollMargin: '130px',\r\n      display: 'flex',\r\n      width: '100%',\r\n      marginTop: '5px',\r\n    },\r\n    prizeItem: ({ device }) => ({\r\n      marginBottom: device === DeviceType.Phone ? '10px' : '30px',\r\n    }),\r\n  })\r\n);\r\n","import { FC, RefObject, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { Raffle } from '../../../../lib/types';\r\nimport PrizeCardOngoing from '../PrizeCardOngoing';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\ninterface PrizeGalleryProps {\r\n  raffle: Raffle;\r\n  scrollRef: RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst PrizeGallery: FC<PrizeGalleryProps> = ({ raffle, scrollRef }) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        ref={scrollRef}\r\n        container\r\n        justifyContent={'space-between'}\r\n        direction={device === DeviceType.Phone ? 'column' : 'row'}\r\n        className={classes.prizesGrid}\r\n      >\r\n        {raffle.prizes.map((prize, prizeIndex) => {\r\n          return (\r\n            <Grid item>\r\n              <PrizeCardOngoing\r\n                key={prizeIndex}\r\n                className={classes.prizeItem}\r\n                prize={prize}\r\n                index={prizeIndex}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrizeGallery;\r\n","import { FC, useMemo, useRef } from 'react';\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-material-ui';\r\nimport { ArrowBack, DoubleArrow } from '@material-ui/icons';\r\nimport { Button, IconButton, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { useProgramApis } from '../../hooks/useProgramApis';\r\nimport { Raffle } from '../../lib/types';\r\nimport Countdown from '../../components/Countdown';\r\nimport PrizeShowcaseOngoing from './components/PrizeShowcaseOngoing';\r\nimport RaffleInfoSection from '../../components/RaffleInfoSection';\r\nimport { PurchaseTickets } from './components/PurchaseTicketsSection/PurchaseTicket';\r\nimport { routes } from '../../router/routes';\r\nimport Screen from '../../components/layout/Screen';\r\nimport useCommonStyles from '../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport PrizeGalleryOngoing from './components/PrizeGalleryOngoing';\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\ninterface IRaffleOngoingScreenProps {\r\n  raffle: Raffle;\r\n  updateRaffle: () => void;\r\n}\r\n\r\nconst RaffleOngoingScreen: FC<IRaffleOngoingScreenProps> = ({\r\n  raffle,\r\n  updateRaffle,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const { push } = useHistory();\r\n  const { draffleClient } = useProgramApis();\r\n\r\n  const prizeGalleryRef = useRef<HTMLDivElement>(null);\r\n\r\n  const entrant = useMemo(() => {\r\n    if (!draffleClient.provider.wallet?.publicKey) return;\r\n    return raffle?.entrants.get(\r\n      draffleClient.provider.wallet.publicKey.toString()\r\n    );\r\n  }, [raffle, draffleClient.provider.wallet?.publicKey]); // \"Unnecessary\" dependency required due to React not picking up change in publicKey subfield\r\n\r\n  if (!raffle) return null;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {device === DeviceType.Phone ? (\r\n        <>\r\n          <Typography variant=\"h1\">{`> ${raffle.metadata.name}`}</Typography>\r\n          <div className={classes.countdown}>\r\n            <Countdown endTimestamp={raffle.endTimestamp} spacing={'5%'} />\r\n          </div>\r\n          <RaffleInfoSection\r\n            raffle={raffle}\r\n            userConnected={!!draffleClient.provider.wallet.publicKey}\r\n            userTickets={entrant?.tickets}\r\n          />\r\n          <div className={classes.spacer} />\r\n          <Typography variant=\"overline\">Prizes</Typography>\r\n          <PrizeGalleryOngoing raffle={raffle} scrollRef={prizeGalleryRef} />\r\n          <div className={classes.spacer} />\r\n          {draffleClient.provider.wallet.publicKey ? (\r\n            <PurchaseTickets raffle={raffle} updateRaffle={updateRaffle} />\r\n          ) : (\r\n            <ConnectActionSection />\r\n          )}\r\n          <div className={classes.spacer} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={classes.topSection}>\r\n            <div className={classes.raffleTitle}>\r\n              <div className={classes.leftTitleSection}>\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  className={classes.backButton}\r\n                  onClick={() => push(routes.RAFFLES)}\r\n                >\r\n                  <ArrowBack />\r\n                </IconButton>\r\n              </div>\r\n              <div className={classes.middleTitleSection}>\r\n                <Typography variant=\"h1\">{`> ${raffle.metadata.name}`}</Typography>\r\n              </div>\r\n              <div className={classes.rightTitleSection}></div>\r\n            </div>\r\n            <div className={classes.countdown}>\r\n              <Countdown endTimestamp={raffle.endTimestamp} spacing={'5%'} />\r\n            </div>\r\n          </div>\r\n          <div className={classes.mainContent}>\r\n            <div className={classes.prizesSection}>\r\n              <Typography variant=\"overline\" className={classes.prizesHeader}>\r\n                Prizes\r\n                {raffle.prizes.length > 3 && (\r\n                  <>\r\n                    {' -'}\r\n                    <Button\r\n                      className={classes.labelPrizeAmount}\r\n                      variant=\"text\"\r\n                      disableRipple\r\n                      onClick={() =>\r\n                        prizeGalleryRef.current?.scrollIntoView({\r\n                          behavior: 'smooth',\r\n                          block: 'start',\r\n                        })\r\n                      }\r\n                    >\r\n                      <span>See all {raffle.prizes.length}</span>\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </Typography>\r\n              <PrizeShowcaseOngoing prizes={raffle.prizes} />\r\n            </div>\r\n            <div className={classes.detailsSection}>\r\n              <RaffleInfoSection\r\n                raffle={raffle}\r\n                userConnected={!!draffleClient.provider.wallet.publicKey}\r\n                userTickets={entrant?.tickets}\r\n              />\r\n              <div className={classes.actionSectionContainer}>\r\n                {draffleClient.provider.wallet.publicKey ? (\r\n                  <PurchaseTickets\r\n                    raffle={raffle}\r\n                    updateRaffle={updateRaffle}\r\n                  />\r\n                ) : (\r\n                  <ConnectActionSection />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {raffle.prizes.length > 3 && (\r\n            <>\r\n              <DoubleArrow className={classes.scrollIcon} />\r\n              <PrizeGalleryOngoing\r\n                raffle={raffle}\r\n                scrollRef={prizeGalleryRef}\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConnectActionSection: FC = () => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n\r\n  return (\r\n    <div className={classes.actionSection}>\r\n      <div className={classes.actionSectionInner}>\r\n        <div className={classes.actionTagline}>\r\n          <Typography variant=\"h3\" className={classes.textHighlight}>\r\n            Tickets are still available.\r\n          </Typography>\r\n          <Typography variant=\"body1\">Don't miss out!</Typography>\r\n        </div>\r\n        <WalletMultiButton\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={`${classes.mainButton} ${classes.connectToBuyButton}`}\r\n        >\r\n          Connect to buy\r\n        </WalletMultiButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface IRaffleOngoingDetailsProps {\r\n  raffle: Raffle;\r\n  updateRaffle: () => void;\r\n}\r\n\r\nconst RaffleOngoingScreenWithLayout: FC<IRaffleOngoingDetailsProps> = (\r\n  props\r\n) => {\r\n  const { push } = useHistory();\r\n\r\n  return (\r\n    <Screen onBackNavigation={() => push(routes.RAFFLES)}>\r\n      <RaffleOngoingScreen {...props} />\r\n    </Screen>\r\n  );\r\n};\r\n\r\nexport default RaffleOngoingScreenWithLayout;\r\n","import { FC, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport RaffleEndedScreen from '../pages/RaffleEndedScreen';\r\nimport RaffleOngoingScreen from '../pages/RaffleOngoingScreen';\r\nimport { useRafflesStore } from '../hooks/useRafflesStore';\r\nimport { Raffle } from '../lib/types';\r\n\r\nconst RaffleDetails: FC = () => {\r\n  const { id: raffleId } = useParams<{ id: string }>();\r\n  const { raffles, updateRaffleById } = useRafflesStore();\r\n  const [currentRaffle, setCurrentRaffle] = useState<Raffle>();\r\n\r\n  const updateCurrentRaffle = useCallback(() => {\r\n    if (updateRaffleById) updateRaffleById(raffleId);\r\n  }, [raffleId, updateRaffleById]);\r\n\r\n  useEffect(() => {\r\n    updateCurrentRaffle();\r\n    const timerId = setInterval(updateCurrentRaffle, 5000);\r\n    return () => clearInterval(timerId);\r\n  }, [updateCurrentRaffle]);\r\n\r\n  useEffect(() => {\r\n    if (raffles.has(raffleId)) setCurrentRaffle(raffles.get(raffleId));\r\n  }, [raffles, raffleId]);\r\n\r\n  const isRaffleEnded = useMemo(\r\n    () => currentRaffle && new Date() > currentRaffle.endTimestamp,\r\n    [currentRaffle]\r\n  );\r\n\r\n  if (!currentRaffle) return null;\r\n\r\n  return isRaffleEnded ? (\r\n    <RaffleEndedScreen\r\n      raffle={currentRaffle}\r\n      updateRaffle={updateCurrentRaffle}\r\n    />\r\n  ) : (\r\n    <RaffleOngoingScreen\r\n      raffle={currentRaffle}\r\n      updateRaffle={updateCurrentRaffle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RaffleDetails;\r\n","export default __webpack_public_path__ + \"static/media/discord-logo.c4634138.svg\";","export default __webpack_public_path__ + \"static/media/twitter-logo.23e6bb64.svg\";","export default __webpack_public_path__ + \"static/media/light.5473f22d.png\";","export default __webpack_public_path__ + \"static/media/MagicEden.f783ef6b.png\";","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      height: '100%',\r\n      margin: device === DeviceType.Phone ? '20px 0' : '-20px 0',\r\n    }),\r\n    socialLinksContainer: {\r\n      background: 'rgba(38,166,203,0.98)',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: '30px',\r\n      padding: '15px', \r\n    },\r\n    socialLinkContainer: ({ device }) => ({\r\n      height: '50px',\r\n      width: '80px',\r\n      margin: device === DeviceType.Phone ? '0 5px' : '0 20px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }),\r\n    socialLink: {\r\n      height: '100%',\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    buttonContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: '30px',\r\n      width: '250px',\r\n    },\r\n  })\r\n);\r\n","import { FC } from 'react';\r\nimport { Button, Link, Tooltip } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport discordLogo from '../../assets/discord-logo.svg';\r\nimport twitterLogo from '../../assets/twitter-logo.svg';\r\nimport documentLogo from '../../assets/light.png';\r\nimport meLogo from '../../assets/MagicEden.png';\r\nimport Screen from '../../components/layout/Screen';\r\nimport { routes } from '../../router/routes';\r\nimport useCommonStyles from '../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\nrequire('./styles.css');\r\n\r\nconst LandingScreen: FC = () => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const { push } = useHistory();\r\n\r\n  return(      \r\n\r\n    <div className={classes.root}>\r\n      \r\n      <img\r\n        className={device === DeviceType.Phone ? 'banner-small' : 'banner'}\r\n        src=\"superpalsgif.gif\"\r\n        alt={'Site banner'}\r\n        width={device === DeviceType.Phone ? '280px' : '600px'}\r\n      />\r\n      <div className={classes.socialLinksContainer}>\r\n        <div className={classes.socialLinkContainer}>\r\n          <Tooltip title=\"OurDiscord\" placement=\"top\">\r\n            <Link\r\n              className={classes.socialLink}\r\n              target=\"blank\"\r\n              href={`https://discord.gg/KsbpgBC6GX`}\r\n            >\r\n              <img src={discordLogo} alt={'disord-logo'} width=\"50px\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.socialLinkContainer}>\r\n          <Tooltip title=\"Our Twitter\" placement=\"top\">\r\n            <Link\r\n              className={classes.socialLink}\r\n              target=\"blank\"\r\n              href={`https://twitter.com/superpalsNFT`}\r\n            >\r\n              <img src={twitterLogo} alt={'twitter-logo'} width=\"50px\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.socialLinkContainer}>\r\n          <Tooltip title=\"Our Growth Map\" placement=\"top\">\r\n            <Link\r\n              className={classes.socialLink}\r\n              target=\"blank\"\r\n              href={`superpalsgrowthmap.png`}\r\n            >\r\n              <img src={documentLogo} alt={'document-logo'} width=\"50px\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.socialLinkContainer}>\r\n          <Tooltip title=\"Adopt a Pal!\" placement=\"top\">\r\n            <Link\r\n              className={classes.socialLink}\r\n              target=\"blank\"\r\n              href={`https://magiceden.io/marketplace/superpals`}\r\n            >\r\n              <img src={meLogo} alt={'adopt-a-pal'} width=\"70px\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst LandingScreenWithLayout = () => (\r\n  <Screen>\r\n    <LandingScreen />\r\n  </Screen>\r\n);\r\n\r\nexport default LandingScreenWithLayout;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles<Theme>((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  raffleGrid: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  raffleGridItem: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  raffleCard: {\r\n    width: '180px',\r\n    height: '150px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  walletButtonContainer: {\r\n    margin: '20px 0 0 0',\r\n  },\r\n}));\r\n","import { Card, Grid, IconButton, Typography } from '@material-ui/core';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { FC, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Add } from '@material-ui/icons';\r\nimport { PublicKey, SystemProgram, SYSVAR_RENT_PUBKEY } from '@solana/web3.js';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport BN from 'bn.js';\r\n\r\nimport Screen from '../../../components/layout/Screen';\r\nimport WalletButton from '../../../components/layout/WalletButton';\r\nimport Spacer from '../../../components/Spacer';\r\nimport { useRafflesStore } from '../../../hooks/useRafflesStore';\r\nimport { useProgramApis } from '../../../hooks/useProgramApis';\r\nimport { DispenserRegistryRaw } from '../../../providers/ProgramApisProvider';\r\nimport { routes } from '../../../router/routes';\r\nimport { useStyles } from './styles';\r\nimport {\r\n  DISPENSER_REGISTRY_ADDRESS,\r\n  DISPENSER_REGISTRY_KEYPAIR,\r\n} from '../../../config/programIds';\r\nimport { shortenPubkeyString } from '../../../lib/utils';\r\nimport { VAULT_TOKEN_IN, VAULT_TOKEN_OUT } from '../../../config/accounts';\r\n\r\nconst AdminHomeScreen: FC = () => {\r\n  const classes = useStyles();\r\n  const { connected } = useWallet();\r\n  const { push } = useHistory();\r\n  const { raffles, fetchAllRaffles } = useRafflesStore();\r\n  const { dispenserClient } = useProgramApis();\r\n\r\n  const [dispensers, setDispensers] = useState<\r\n    { account: DispenserRegistryRaw; publicKey: PublicKey }[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    fetchAllRaffles(true);\r\n  }, [fetchAllRaffles]);\r\n\r\n  useEffect(() => {\r\n    dispenserClient.account.registry.all().then(setDispensers);\r\n  }, [dispenserClient, setDispensers]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {connected ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Typography variant=\"h3\">Dispensers</Typography>\r\n            <IconButton\r\n              size={'small'}\r\n              onClick={() => {\r\n                dispenserClient.rpc\r\n                  .createRegistry(new BN(500_000_000), new BN(1_000_000), {\r\n                    accounts: {\r\n                      registry: DISPENSER_REGISTRY_ADDRESS,\r\n                      vaultTokenIn: VAULT_TOKEN_IN,\r\n                      vaultTokenOut: VAULT_TOKEN_OUT,\r\n                      admin: dispenserClient.provider.wallet.publicKey,\r\n                      mintTokenIn: new PublicKey(\r\n                        'So11111111111111111111111111111111111111112'\r\n                      ),\r\n                      mintTokenOut: new PublicKey(\r\n                        'zRpVjG5wMWrNhpTtSiGMz9iBaMTQDdaVGCFLmYqCs4U'\r\n                      ),\r\n                      tokenProgram: TOKEN_PROGRAM_ID,\r\n                      systemProgram: SystemProgram.programId,\r\n                      rent: SYSVAR_RENT_PUBKEY,\r\n                    },\r\n                    signers: [DISPENSER_REGISTRY_KEYPAIR],\r\n                  })\r\n                  .then((res) => console.log(res));\r\n              }}\r\n            >\r\n              <Add className={classes.scrollButtonIcon} />\r\n            </IconButton>\r\n          </div>\r\n          <Spacer height={'20px'} />\r\n          {dispensers.length === 0 ? (\r\n            <>No dispenser found.</>\r\n          ) : (\r\n            <Grid container spacing={1} className={classes.raffleGrid}>\r\n              {dispensers.map((dispenser) => (\r\n                <Grid\r\n                  key={dispenser.publicKey.toString()}\r\n                  item\r\n                  xs={3}\r\n                  spacing={3}\r\n                  className={classes.raffleGridItem}\r\n                >\r\n                  <Card className={classes.raffleCard}>\r\n                    <Typography>\r\n                      Admin: {shortenPubkeyString(dispenser.account.admin)}\r\n                    </Typography>\r\n                    <Typography>\r\n                      In: {shortenPubkeyString(dispenser.account.mintTokenIn)}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {'->'} Vault:{' '}\r\n                      {shortenPubkeyString(dispenser.account.vaultTokenIn)}\r\n                    </Typography>\r\n                    <Typography>\r\n                      Out: {shortenPubkeyString(dispenser.account.mintTokenOut)}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {'->'} Vault:{' '}\r\n                      {shortenPubkeyString(dispenser.account.vaultTokenOut)}\r\n                    </Typography>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          )}\r\n          <Spacer height={'20px'} />\r\n          <Typography variant=\"h3\">Ongoing raffles</Typography>\r\n          <Spacer height={'20px'} />\r\n          <Grid container spacing={1} className={classes.raffleGrid}>\r\n            {[...raffles.values()]\r\n              .filter((raffle) => new Date() <= raffle.endTimestamp)\r\n              .map((raffle) => (\r\n                <Grid\r\n                  item\r\n                  xs={3}\r\n                  spacing={3}\r\n                  className={classes.raffleGridItem}\r\n                >\r\n                  <Card\r\n                    className={classes.raffleCard}\r\n                    onClick={() =>\r\n                      push(`${routes.ADMIN.RAFFLES}/${raffle.publicKey}`)\r\n                    }\r\n                  >\r\n                    <Typography>{raffle.metadata.name}</Typography>\r\n                    <Typography>\r\n                      <Typography>\r\n                        {raffle.endTimestamp.toISOString()}\r\n                      </Typography>\r\n                    </Typography>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n          <Spacer height={'50px'} />\r\n          <Typography variant=\"h3\">Ended raffles</Typography>\r\n          <Spacer height={'20px'} />\r\n          <Grid container spacing={1} className={classes.raffleGrid}>\r\n            {[...raffles.values()]\r\n              .filter((raffle) => new Date() > raffle.endTimestamp)\r\n              .map((raffle) => (\r\n                <Grid\r\n                  key={raffle.publicKey.toString()}\r\n                  item\r\n                  xs={3}\r\n                  spacing={3}\r\n                  className={classes.raffleGridItem}\r\n                >\r\n                  <Card\r\n                    className={classes.raffleCard}\r\n                    onClick={() =>\r\n                      push(`${routes.ADMIN.RAFFLES}/${raffle.publicKey}`)\r\n                    }\r\n                  >\r\n                    <Typography>{raffle.metadata.name}</Typography>\r\n                    <Typography>{raffle.endTimestamp.toISOString()}</Typography>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h3\">\r\n            Connect with an admin wallet to unlock admin panel\r\n          </Typography>\r\n          <div className={classes.walletButtonContainer}>\r\n            <WalletButton />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdminHomeScreenWithLayout = () => (\r\n  <Screen>\r\n    <AdminHomeScreen />\r\n  </Screen>\r\n);\r\n\r\nexport default AdminHomeScreenWithLayout;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles<Theme>((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  headerContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  entrantRow: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  walletButtonContainer: {\r\n    margin: '20px 0 0 0',\r\n  },\r\n}));\r\n","import { Button, IconButton, Typography } from '@material-ui/core';\r\nimport { Refresh } from '@material-ui/icons';\r\nimport { SYSVAR_RECENT_BLOCKHASHES_PUBKEY } from '@solana/web3.js';\r\nimport { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport Screen from '../../../components/layout/Screen';\r\nimport Spacer from '../../../components/Spacer';\r\nimport { useProgramApis } from '../../../hooks/useProgramApis';\r\nimport { useRafflesStore } from '../../../hooks/useRafflesStore';\r\nimport { txHandler } from '../../../lib/anchorUtils';\r\nimport { Raffle } from '../../../lib/types';\r\nimport { useStyles } from './styles';\r\n\r\nconst AdminRaffleScreen: FC = () => {\r\n  const classes = useStyles();\r\n  const { id: raffleId } = useParams<{ id: string }>();\r\n  const { raffles, updateRaffleById } = useRafflesStore();\r\n  const { draffleClient } = useProgramApis();\r\n\r\n  const [currentRaffle, setCurrentRaffle] = useState<Raffle>();\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const raffle = raffles.get(raffleId);\r\n    if (raffle) setCurrentRaffle(raffle);\r\n  }, [raffles, raffleId]);\r\n\r\n  const revealWinners = useCallback(async () => {\r\n    await txHandler(\r\n      () =>\r\n        draffleClient.rpc.revealWinners({\r\n          accounts: {\r\n            raffle: raffleId,\r\n            recentBlockhashes: SYSVAR_RECENT_BLOCKHASHES_PUBKEY\r\n          }\r\n        }),\r\n        'Raffle revealed'\r\n    )\r\n  }, [draffleClient, raffleId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h3\">Loading...</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentRaffle) return null;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {currentRaffle ? (\r\n        <>\r\n          <div className={classes.headerContainer}>\r\n            <Typography variant=\"h3\">\r\n              Entrants list (total {currentRaffle.entrants.size})\r\n            </Typography>\r\n            <IconButton\r\n              onClick={() => {\r\n                setLoading(true);\r\n                updateRaffleById(raffleId);\r\n                setLoading(false);\r\n              }}\r\n            >\r\n              <Refresh />\r\n            </IconButton>\r\n            <Button onClick={revealWinners} variant=\"contained\">\r\n              Reveal winners\r\n            </Button>\r\n          </div>\r\n          <Spacer height={'20px'} />\r\n          {[...currentRaffle.entrants.entries()].map(([wallet, tickets]) => (\r\n            <div key={wallet} className={classes.entrantRow}>\r\n              <Typography variant=\"body1\">{wallet}: </Typography>\r\n              <Typography variant=\"body1\">\r\n                {tickets.tickets.toString()}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <Typography variant=\"h3\">No entrants</Typography>\r\n      )}\r\n      <Spacer height={'50px'} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdminRaffleScreenWithLayout = () => (\r\n  <Screen>\r\n    <AdminRaffleScreen />\r\n  </Screen>\r\n);\r\n\r\nexport default AdminRaffleScreenWithLayout;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      height: '100%',\r\n      margin: device === DeviceType.Phone ? '20px 0' : '-20px 0',\r\n    }),\r\n    socialLinksContainer: {\r\n      background: 'rgba(38,166,203,0.98)',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      marginTop: '30px',\r\n      padding: '15px', \r\n    },\r\n    socialLinkContainer: ({ device }) => ({\r\n      height: '50px',\r\n      width: '80px',\r\n      margin: device === DeviceType.Phone ? '0 5px' : '0 20px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }),\r\n    socialLink: {\r\n      height: '100%',\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    buttonContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: '30px',\r\n      width: '250px',\r\n    },\r\n  })\r\n);\r\n","import { FC } from 'react';\r\nimport { Button, Link, Tooltip } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport discordLogo from '../../assets/discord-logo.svg';\r\nimport twitterLogo from '../../assets/twitter-logo.svg';\r\nimport documentLogo from '../../assets/light.png';\r\nimport meLogo from '../../assets/MagicEden.png';\r\nimport Screen from '../../components/layout/Screen';\r\nimport { routes } from '../../router/routes';\r\nimport useCommonStyles from '../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\nrequire('./styles.css');\r\n\r\nconst AboutSuperpalsScreen: FC = () => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const { push } = useHistory();\r\n\r\n\r\n  return(      \r\n\r\n    <div className={classes.root}>\r\n\r\n        <Typography variant=\"h1\" className={classes.titleBar}>\r\n          Welcome to Superpals!\r\n        </Typography>\r\n        <div className=\"solidline\"></div>\r\n        <div className=\"blankspace\"></div>\r\n        \r\n        <Typography variant=\"h4\"  className=\"centretext\" >\r\n        Superpals is a collection of 459 NFTs, including 1/1s, created with the aim to provide huge benefits to holders, add to the market with fun and original artwork and create a super fun, inclusive and positive community! Benefits include SOL royalties to holders, airdrops, DAO with NFT calls, future staking plus a whole lot more on top. Superpals isn't just a project, it's a mentality.\r\n        \r\n        </Typography>\r\n        <Typography variant=\"h4\"  className=\"centretext\" >\r\n          Join our Discord server to meet the family and find out more!\r\n        </Typography>\r\n\r\n      \r\n      \r\n      <div className={classes.socialLinksContainer}>\r\n        <div className={classes.socialLinkContainer}>\r\n          <Tooltip title=\"Our Discord\" placement=\"top\">\r\n            <Link\r\n              className={classes.socialLink}\r\n              target=\"blank\"\r\n              href={`https://discord.gg/KsbpgBC6GX`}\r\n            >\r\n              <img src={discordLogo} alt={'disord-logo'} width=\"50px\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.socialLinkContainer}>\r\n          <Tooltip title=\"Our Twitter\" placement=\"top\">\r\n            <Link\r\n              className={classes.socialLink}\r\n              target=\"blank\"\r\n              href={`https://twitter.com/superpalsNFT`}\r\n            >\r\n              <img src={twitterLogo} alt={'twitter-logo'} width=\"50px\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.socialLinkContainer}>\r\n          <Tooltip title=\"Our Growth Map\" placement=\"top\">\r\n            <Link\r\n              className={classes.socialLink}\r\n              target=\"blank\"\r\n              href={`superpalsgrowthmap.png`}\r\n            >\r\n              <img src={documentLogo} alt={'document-logo'} width=\"50px\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.socialLinkContainer}>\r\n          <Tooltip title=\"Adopt a Pal!\" placement=\"top\">\r\n            <Link\r\n              className={classes.socialLink}\r\n              target=\"blank\"\r\n              href={`https://magiceden.io/marketplace/superpals`}\r\n            >\r\n              <img src={meLogo} alt={'adopt-a-pal'} width=\"70px\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n      <div className=\"blankspace\"></div>\r\n      <img\r\n        className={device === DeviceType.Phone ? 'banner-small' : 'banner'}\r\n        src=\"superpals16.png\"\r\n        alt={'Site banner'}\r\n        width={device === DeviceType.Phone ? '280px' : '600px'}\r\n      />\r\n\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nconst LandingScreenWithLayout = () => (\r\n  <Screen>\r\n    <AboutSuperpalsScreen />\r\n  </Screen>\r\n);\r\n\r\nexport default LandingScreenWithLayout;\r\n","import React, { FC, useCallback, useMemo } from 'react';\r\nimport { WalletAdapterNetwork, WalletError } from '@solana/wallet-adapter-base';\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n  getSlopeWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport toast from 'react-hot-toast';\r\n\r\nenum Extension {\r\n  Localnet = 'localnet',\r\n}\r\n\r\nconst extendedClusterApiUrl = (network: WalletAdapterNetwork | Extension) => {\r\n  return network === Extension.Localnet\r\n    ? (process.env.REACT_APP_RPC_ENDPOINT as string) ||\r\n        'https://draffle.ngrok.io'\r\n    : clusterApiUrl(network);\r\n};\r\n\r\nconst Wallet: FC = ({ children }) => {\r\n  const network = Extension.Localnet;\r\n  const endpoint = useMemo(() => extendedClusterApiUrl(network), [network]);\r\n\r\n  // @solana/wallet-adapter-wallets imports all the adapters but supports tree shaking --\r\n  // Only the wallets you want to support will be compiled into your application\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSlopeWallet(),\r\n      getSolletWallet({ network: network as unknown as WalletAdapterNetwork }),\r\n      getSolletExtensionWallet({\r\n        network: network as unknown as WalletAdapterNetwork,\r\n      }),\r\n    ],\r\n    [network]\r\n  );\r\n\r\n  const onError = useCallback((error: WalletError) => {\r\n    toast.error(error.message ? `${error.name}: ${error.message}` : error.name);\r\n    console.error(error);\r\n  }, []);\r\n\r\n  return (\r\n    <ConnectionProvider endpoint={endpoint}>\r\n      <WalletProvider wallets={wallets} onError={onError} autoConnect>\r\n        <WalletDialogProvider featuredWallets={5}>\r\n          {children}\r\n        </WalletDialogProvider>\r\n      </WalletProvider>\r\n    </ConnectionProvider>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n","import React, { FC } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport { routes } from './routes';\r\nimport ExploreRafflesScreen from '../pages/ExploreRafflesScreen';\r\nimport RaffleDetailsScreen from './raffleDetails';\r\nimport LandingScreen from '../pages/LandingScreen';\r\nimport StakeScreen from '../pages/StakeScreen';\r\nimport AdminHomeScreen from '../pages/admin/AdminHomeScreen';\r\nimport AdminRaffleScreen from '../pages/admin/AdminRaffleScreen';\r\nimport ToolsScreen from '../pages/ToolsScreen';\r\nimport AboutSuperpalsScreen from '../pages/AboutSuperpalsScreen';\r\n\r\nexport const Router: FC = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={LandingScreen} />\r\n    <Route path={routes.ABOUT} exact component={AboutSuperpalsScreen} />\r\n    <Route path={`${routes.RAFFLES}/:id`} component={RaffleDetailsScreen} />\r\n    <Route path={routes.RAFFLES} exact component={ExploreRafflesScreen} />\r\n    {/* <Route path={routes.STAKE} exact component={StakeScreen} />\r\n    <Route path={routes.TOOLS} exact component={ToolsScreen} /> */}\r\n    <Route path={routes.ADMIN.HOME} exact component={AdminHomeScreen} />\r\n    <Route\r\n      path={`${routes.ADMIN.RAFFLES}/:id`}\r\n      exact\r\n      component={AdminRaffleScreen}\r\n    />\r\n  </Switch>\r\n);\r\n","import { createTheme } from '@material-ui/core/styles';\r\nimport { DeviceType } from '../providers/ViewportProvider';\r\n\r\nconst PRIMARY_COLOR = '#72F3BD';\r\nconst SECONDARY_COLOR = '#11FED0';\r\nconst THIRD_COLOR ='#26a6cb';\r\n\r\nconst theme = ({ device }: { device: DeviceType }) =>\r\n  createTheme({\r\n    typography: {\r\n      allVariants: { color: '#FFF', fontFamily: 'Roboto Mono' },\r\n      h1: {\r\n        color: THIRD_COLOR,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: device === DeviceType.Phone ? '20px' : '40px',\r\n      },\r\n      h2: {\r\n        color: SECONDARY_COLOR,\r\n        fontWeight: 'bold',\r\n        fontSize: device === DeviceType.Phone ? '18px' : '25px',\r\n      },\r\n      h3: {\r\n        color: SECONDARY_COLOR,\r\n        fontWeight: 'bold',\r\n        fontSize: device === DeviceType.Phone ? '15px' : '16px',\r\n      },\r\n      h4: {\r\n        color: THIRD_COLOR,\r\n        fontSize: device === DeviceType.Phone ? '20px' : '20px',\r\n      },\r\n      body1: {\r\n        fontSize: device === DeviceType.Phone ? '14px' : '14px',\r\n      },\r\n      overline: {\r\n        color: '#999',\r\n        fontSize: device === DeviceType.Phone ? '12px' : '13px',\r\n      },\r\n      caption: {\r\n        fontSize: device === DeviceType.Phone ? '16x' : '16px',\r\n      },\r\n    },\r\n    palette: {\r\n      type: 'dark',\r\n      background: {\r\n        paper: '#212225',\r\n        default:\r\n          'linear-gradient(0deg, rgba(57,9,74,1) 0%, rgba(6,18,98,1) 100%, rgba(57,9,74,1) 100%);',\r\n      },\r\n      primary: {\r\n        main: PRIMARY_COLOR,\r\n      },\r\n      secondary: {\r\n        main: SECONDARY_COLOR,\r\n      },\r\n      grey: { 500: '#777' },\r\n    },\r\n  });\r\n\r\nexport default theme;\r\n","import React, { FC } from 'react';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\r\n\r\nimport theme from '../assets/theme';\r\nimport { useViewport } from '../hooks/useViewport';\r\n\r\nconst ThemeProvider: FC = ({ children }) => {\r\n  const { device } = useViewport();\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme({ device })}>{children}</MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\nexport const useStyles = makeStyles<Theme, { device: DeviceType }>(\r\n  (theme: Theme) => ({\r\n    root: ({ device }) => ({\r\n      position: 'fixed',\r\n      bottom: device === DeviceType.Phone ? 20 : 30,\r\n      right: device === DeviceType.Phone ? 20 : 30,\r\n    }),\r\n    scrollButton: {\r\n      color: theme.palette.common.black,\r\n      backgroundColor: theme.palette.secondary.main,\r\n      '&:hover': {\r\n        boxShadow: `0px 0px 10px ${theme.palette.secondary.main}, inset 0px 0px 5px ${theme.palette.secondary.main}`,\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n    },\r\n    scrollButtonIcon: {\r\n      transform: `rotate(-90deg)`,\r\n    },\r\n  })\r\n);\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { IconButton, Slide } from '@material-ui/core';\r\nimport { ChevronRight } from '@material-ui/icons';\r\n\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../hooks/useViewport';\r\n\r\nconst ScrollToTop: FC = () => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () => {\r\n      if (window.pageYOffset > 100) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', toggleVisibility);\r\n\r\n    return () => window.removeEventListener('scroll', toggleVisibility);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slide direction=\"up\" in={isVisible}>\r\n        <IconButton\r\n          size={'medium'}\r\n          className={classes.scrollButton}\r\n          onClick={scrollToTop}\r\n        >\r\n          <ChevronRight className={classes.scrollButtonIcon} />\r\n        </IconButton>\r\n      </Slide>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\r\n\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\nimport { Router } from './router/router';\r\nimport ProgramApisProvider from './providers/ProgramApisProvider';\r\nimport RafflesStoreProvider from './providers/RafflesStoreProvider';\r\nimport ViewportProvider from './providers/ViewportProvider';\r\nimport ThemeProvider from './providers/ThemeProvider';\r\nimport Wallet from './components/Wallet';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <ViewportProvider>\r\n      <CssBaseline />\r\n      <ThemeProvider>\r\n        <BrowserRouter>\r\n          <Wallet>\r\n            <ProgramApisProvider>\r\n              <RafflesStoreProvider>\r\n                <Router />\r\n                <Toaster\r\n                  position=\"bottom-left\"\r\n                  reverseOrder={false}\r\n                  toastOptions={{\r\n                    duration: 5000,\r\n                  }}\r\n                />\r\n                <ScrollToTop />\r\n              </RafflesStoreProvider>\r\n            </ProgramApisProvider>\r\n          </Wallet>\r\n        </BrowserRouter>\r\n      </ThemeProvider>\r\n    </ViewportProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { AnchorProvider, Provider, utils } from '@project-serum/anchor';\r\nimport { getTokenAccount } from '@project-serum/common';\r\nimport {\r\n  ASSOCIATED_TOKEN_PROGRAM_ID,\r\n  Token,\r\n  TOKEN_PROGRAM_ID,\r\n  u64,\r\n} from '@solana/spl-token';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport * as math from 'mathjs';\r\n\r\nexport const getWalletLamports = async (\r\n  provider: AnchorProvider\r\n): Promise<number | undefined> => {\r\n  if (!provider.wallet.publicKey) return;\r\n\r\n  const walletAccount = await provider.connection.getAccountInfo(\r\n    provider.wallet.publicKey\r\n  );\r\n\r\n  return walletAccount?.lamports; // TODO: Check why number??\r\n};\r\n\r\nexport const getBuyerATABalance = async (\r\n  provider: AnchorProvider,\r\n  proceedsMint: PublicKey\r\n): Promise<u64 | undefined> => {\r\n  const buyerATA = await Token.getAssociatedTokenAddress(\r\n    ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    TOKEN_PROGRAM_ID,\r\n    proceedsMint,\r\n    provider.wallet.publicKey\r\n  );\r\n\r\n  try {\r\n    const accountInfo = await getTokenAccount(\r\n      // @ts-ignore\r\n      provider,\r\n      buyerATA\r\n    );\r\n    return accountInfo.amount;\r\n  } catch (error: any) {\r\n    console.error(error);\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getDisplayAmount = (\r\n  amount: u64,\r\n  mint: { decimals: number }\r\n): string => {\r\n  return math\r\n    .bignumber(amount.toString())\r\n    .div(Math.pow(10, mint.decimals))\r\n    .toString();\r\n};\r\n\r\nexport const getAssociatedTokenAccountAddress = (\r\n  walletAddress: PublicKey,\r\n  mint: PublicKey\r\n) =>\r\n  Token.getAssociatedTokenAddress(\r\n    ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    TOKEN_PROGRAM_ID,\r\n    mint,\r\n    walletAddress\r\n  );\r\n\r\nexport const findAssociatedTokenAccountAddressSync = (\r\n  walletAddress: PublicKey,\r\n  mint: PublicKey\r\n) =>\r\n  utils.publicKey.findProgramAddressSync(\r\n    [walletAddress.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\r\n    ASSOCIATED_TOKEN_PROGRAM_ID\r\n  );\r\n\r\nexport const createOwnAssociatedTokenAccountInstruction = (\r\n  mint: PublicKey,\r\n  ata: PublicKey,\r\n  owner: PublicKey\r\n) =>\r\n  Token.createAssociatedTokenAccountInstruction(\r\n    ASSOCIATED_TOKEN_PROGRAM_ID,\r\n    TOKEN_PROGRAM_ID,\r\n    mint,\r\n    ata,\r\n    owner,\r\n    owner\r\n  );\r\n","import { Keypair, PublicKey } from '@solana/web3.js';\r\n\r\nexport const DRAFFLE_PROGRAM_ID = process.env\r\n  .REACT_APP_DRAFFLE_PROGRAM_ID as string;\r\nexport const DISPENSER_PROGRAM_ID = new PublicKey(\r\n  process.env.REACT_APP_DISPENSER_PROGRAM_ID as string\r\n);\r\n\r\nexport const DISPENSER_REGISTRY_KEYPAIR = Keypair.fromSecretKey(\r\n  new Uint8Array(\r\n    JSON.parse(process.env.REACT_APP_DISPENSER_REGISTRY_KEYPAIR as string)\r\n  )\r\n);\r\nexport const DISPENSER_REGISTRY_ADDRESS = DISPENSER_REGISTRY_KEYPAIR.publicKey;\r\n","export const wrappedSOL = 'So11111111111111111111111111111111111111112';\r\n\r\nconst tokenRegistry = {\r\n  'So11111111111111111111111111111111111111112': {\r\n    chainId: 101,\r\n    address: wrappedSOL,\r\n    symbol: 'SOL',\r\n    name: 'SOL',\r\n    decimals: 9,\r\n    logoURI:\r\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\r\n    tags: [],\r\n    extensions: {\r\n      website: 'https://solana.com/',\r\n      serumV3Usdc: '9wFFyRfZBsuAha4YcuxcXLKwMxJR43S7fPfQLusDBzvT',\r\n      serumV3Usdt: 'HWHvQhFmJB3NUcu1aihKmrKegfVxBEHzwVX6yZCKEsi1',\r\n      coingeckoId: 'solana',\r\n      imageURI: '/resources/solana-logo.gif',\r\n    },\r\n  },\r\n  '72UgZ7avdJZBbv3wR7hbWcFy6dyHHNAoJw7CimGA55Zh': {\r\n    chainId: 101,\r\n    address: '72UgZ7avdJZBbv3wR7hbWcFy6dyHHNAoJw7CimGA55Zh',\r\n    symbol: 'PM1',\r\n    name: 'USDT',\r\n    decimals: 2,\r\n    logoURI: `${process.env.REACT_APP_URL}/tether-usdt-logo.png`,\r\n    tags: [],\r\n    extensions: {\r\n      website: 'https://sollama.finance',\r\n      twitter: 'https://twitter.com/SollamaFinance',\r\n    },\r\n  },\r\n  'Do9mNqryUMyuCLM2avYcimiMtbND7Gyce4z2MGp4VHQq': {\r\n    chainId: 101,\r\n    address: 'Do9mNqryUMyuCLM2avYcimiMtbND7Gyce4z2MGp4VHQq',\r\n    symbol: 'LZRD',\r\n    name: 'Lizardz Token',\r\n    decimals: 0,\r\n    logoURI:\r\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/Do9mNqryUMyuCLM2avYcimiMtbND7Gyce4z2MGp4VHQq/logo.png',\r\n    tags: [],\r\n    extensions: {\r\n      twitter: 'https://twitter.com/ChiyokoLizardz',\r\n    },\r\n  },\r\n  '4cH3CvtwURFUVDnV1urH41kwnxfKsYFybonfctxwNSBS': {\r\n    chainId: 101,\r\n    address: '4cH3CvtwURFUVDnV1urH41kwnxfKsYFybonfctxwNSBS',\r\n    symbol: 'PALS',\r\n    name: 'Superpals Token',\r\n    decimals: 9,\r\n    logoURI: 'https://cdn.jsdelivr.net/gh/NinaSnkrs/Superpals/superpalslogo.png',\r\n    tags: []\r\n  },\r\n  'DG2kMSpmGaFxUSVAFLHk75VzJ6iQEQx3UzGkLoGrAX4D': {\r\n    chainId: 101,\r\n    address: 'DG2kMSpmGaFxUSVAFLHk75VzJ6iQEQx3UzGkLoGrAX4D',\r\n    symbol: 'RVLN',\r\n    name: 'Revolution Token',\r\n    decimals: 9,\r\n    logoURI: 'https://cdn.jsdelivr.net/gh/Bearzuki/token/logo%20bright.png',\r\n    tags: [],\r\n    \"extensions\": {\r\n      \"twitter\": \"https://twitter.com/BearzukiNFT\"\r\n    },\r\n  },\r\n};\r\n\r\nexport const tokenInfoMap = new Map(Object.entries(tokenRegistry));\r\n\r\nexport const UNKNOWN_TOKEN_INFO = {\r\n  chainId: 101,\r\n  symbol: '???',\r\n  name: 'Unkown token',\r\n  decimals: 0,\r\n  logoURI:\r\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/9nusLQeFKiocswDt6NQsiErm1M43H2b8x6v5onhivqKv/logo.png',\r\n  tags: [],\r\n  extensions: {},\r\n};\r\n"],"sourceRoot":""}